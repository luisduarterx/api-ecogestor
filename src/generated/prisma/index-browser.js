
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  email: 'email',
  senha: 'senha',
  telefone: 'telefone',
  cargoID: 'cargoID',
  deletedAt: 'deletedAt'
};

exports.Prisma.PermissoesScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  descricao: 'descricao'
};

exports.Prisma.CargoScalarFieldEnum = {
  id: 'id',
  nome: 'nome'
};

exports.Prisma.RegistroScalarFieldEnum = {
  id: 'id',
  nome_razao: 'nome_razao',
  apelido: 'apelido',
  tipo: 'tipo',
  tabelaID: 'tabelaID',
  email: 'email',
  telefone: 'telefone',
  criadoEm: 'criadoEm',
  deletedAt: 'deletedAt'
};

exports.Prisma.PessoaFisicaScalarFieldEnum = {
  id: 'id',
  cpf: 'cpf',
  nascimento: 'nascimento',
  registroID: 'registroID'
};

exports.Prisma.PessoaJuridicaScalarFieldEnum = {
  id: 'id',
  cnpj: 'cnpj',
  ie: 'ie',
  fantasia: 'fantasia',
  registroID: 'registroID'
};

exports.Prisma.SaldoFinanceiroScalarFieldEnum = {
  id: 'id',
  regID: 'regID',
  saldo: 'saldo'
};

exports.Prisma.EnderecoScalarFieldEnum = {
  id: 'id',
  regID: 'regID',
  cep: 'cep',
  estado: 'estado',
  cidade: 'cidade',
  bairro: 'bairro',
  logradouro: 'logradouro',
  numero: 'numero',
  complemento: 'complemento'
};

exports.Prisma.DadosPagamentoScalarFieldEnum = {
  id: 'id',
  banco: 'banco',
  agencia: 'agencia',
  conta: 'conta',
  chave: 'chave',
  cpf: 'cpf',
  regID: 'regID'
};

exports.Prisma.TabelaScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  updatedAt: 'updatedAt'
};

exports.Prisma.PrecoPorTabelaScalarFieldEnum = {
  id: 'id',
  v_compra: 'v_compra',
  materialID: 'materialID',
  tabelaID: 'tabelaID',
  editadoEm: 'editadoEm'
};

exports.Prisma.MaterialScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  catID: 'catID',
  v_venda: 'v_venda',
  estoque: 'estoque',
  criado_em: 'criado_em',
  editado_em: 'editado_em',
  status: 'status'
};

exports.Prisma.CategoriaMaterialScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.ItemPedidoScalarFieldEnum = {
  id: 'id',
  pedidoID: 'pedidoID',
  materialID: 'materialID',
  preco: 'preco',
  quantidade: 'quantidade',
  pesoBruto: 'pesoBruto',
  tara: 'tara',
  impureza: 'impureza',
  subtotal: 'subtotal'
};

exports.Prisma.PedidoScalarFieldEnum = {
  id: 'id',
  regID: 'regID',
  tipo: 'tipo',
  valor_total: 'valor_total',
  status: 'status',
  userID: 'userID',
  criado_em: 'criado_em',
  atualizado: 'atualizado'
};

exports.Prisma.ContaFinanceiraScalarFieldEnum = {
  id: 'id',
  tipo: 'tipo',
  pedidoID: 'pedidoID',
  registroID: 'registroID',
  descricao: 'descricao',
  valor: 'valor',
  data_documento: 'data_documento',
  data_vencimento: 'data_vencimento',
  data_pagamento: 'data_pagamento',
  forma: 'forma',
  data: 'data'
};

exports.Prisma.BancoScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  saldo: 'saldo'
};

exports.Prisma.MovimentacaoFinanceiraScalarFieldEnum = {
  id: 'id',
  estornoID: 'estornoID',
  bancoID: 'bancoID',
  caixaID: 'caixaID',
  contaID: 'contaID',
  categoriaID: 'categoriaID',
  tipoMovimentacaoID: 'tipoMovimentacaoID',
  data: 'data',
  saldoInicial: 'saldoInicial',
  valor: 'valor',
  saldoFinal: 'saldoFinal',
  descricao: 'descricao',
  userID: 'userID',
  estornadoEm: 'estornadoEm'
};

exports.Prisma.Caixa_TipoMovimentacaoScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  tipo: 'tipo'
};

exports.Prisma.CategoriaCaixaScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  deletedAt: 'deletedAt'
};

exports.Prisma.MovimentacaoEstoqueScalarFieldEnum = {
  id: 'id',
  materialID: 'materialID',
  tipoMovimentacao: 'tipoMovimentacao',
  origem: 'origem',
  origemID: 'origemID',
  devolucaoID: 'devolucaoID',
  quantidade: 'quantidade',
  createdAt: 'createdAt',
  devolvidaEm: 'devolvidaEm',
  observacao: 'observacao'
};

exports.Prisma.ConversaoEstoqueScalarFieldEnum = {
  id: 'id',
  mat_origemID: 'mat_origemID',
  mat_destinoID: 'mat_destinoID',
  quantidade: 'quantidade',
  descricao: 'descricao',
  createdAt: 'createdAt'
};

exports.Prisma.LivroCaixaScalarFieldEnum = {
  id: 'id',
  dataAbertura: 'dataAbertura',
  dataFechamento: 'dataFechamento',
  abertoPorID: 'abertoPorID',
  saldoInicial: 'saldoInicial',
  saldoFinal: 'saldoFinal',
  status: 'status'
};

exports.Prisma.FechamentoScalarFieldEnum = {
  id: 'id',
  caixaID: 'caixaID',
  valor_abertura: 'valor_abertura',
  valor_abastecimentos: 'valor_abastecimentos',
  valor_despesas: 'valor_despesas',
  data_abertura: 'data_abertura',
  data_fechamento: 'data_fechamento',
  userID_fechamento: 'userID_fechamento',
  valor_esperado: 'valor_esperado',
  valor_conferido: 'valor_conferido',
  valor_diferenca: 'valor_diferenca'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.TipoRegistro = exports.$Enums.TipoRegistro = {
  FISICA: 'FISICA',
  JURIDICA: 'JURIDICA'
};

exports.TipoPedido = exports.$Enums.TipoPedido = {
  COMPRA: 'COMPRA',
  VENDA: 'VENDA'
};

exports.TipoStatusPedido = exports.$Enums.TipoStatusPedido = {
  ABERTO: 'ABERTO',
  FECHADO: 'FECHADO'
};

exports.TipoConta = exports.$Enums.TipoConta = {
  PAGAR: 'PAGAR',
  RECEBER: 'RECEBER'
};

exports.FormaPagamento = exports.$Enums.FormaPagamento = {
  DINHEIRO: 'DINHEIRO',
  PIX: 'PIX',
  TRANSFERENCIA: 'TRANSFERENCIA',
  ABATER: 'ABATER'
};

exports.DirecaoMovimentacao = exports.$Enums.DirecaoMovimentacao = {
  ENTRADA: 'ENTRADA',
  SAIDA: 'SAIDA'
};

exports.OrigemMovimentacaoEstoque = exports.$Enums.OrigemMovimentacaoEstoque = {
  PEDIDO: 'PEDIDO',
  CONVERSAO: 'CONVERSAO',
  AVULSO: 'AVULSO',
  AJUSTE: 'AJUSTE',
  DEVOLUCAO: 'DEVOLUCAO'
};

exports.StatusCaixa = exports.$Enums.StatusCaixa = {
  ABERTO: 'ABERTO',
  FECHADO: 'FECHADO'
};

exports.Prisma.ModelName = {
  User: 'User',
  Permissoes: 'Permissoes',
  Cargo: 'Cargo',
  Registro: 'Registro',
  PessoaFisica: 'PessoaFisica',
  PessoaJuridica: 'PessoaJuridica',
  SaldoFinanceiro: 'SaldoFinanceiro',
  Endereco: 'Endereco',
  DadosPagamento: 'DadosPagamento',
  Tabela: 'Tabela',
  PrecoPorTabela: 'PrecoPorTabela',
  Material: 'Material',
  CategoriaMaterial: 'CategoriaMaterial',
  ItemPedido: 'ItemPedido',
  Pedido: 'Pedido',
  ContaFinanceira: 'ContaFinanceira',
  Banco: 'Banco',
  MovimentacaoFinanceira: 'MovimentacaoFinanceira',
  Caixa_TipoMovimentacao: 'Caixa_TipoMovimentacao',
  CategoriaCaixa: 'CategoriaCaixa',
  MovimentacaoEstoque: 'MovimentacaoEstoque',
  ConversaoEstoque: 'ConversaoEstoque',
  LivroCaixa: 'LivroCaixa',
  Fechamento: 'Fechamento'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
