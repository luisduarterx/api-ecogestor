
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model Permissoes
 * 
 */
export type Permissoes = $Result.DefaultSelection<Prisma.$PermissoesPayload>
/**
 * Model Cargo
 * 
 */
export type Cargo = $Result.DefaultSelection<Prisma.$CargoPayload>
/**
 * Model Registro
 * 
 */
export type Registro = $Result.DefaultSelection<Prisma.$RegistroPayload>
/**
 * Model PessoaFisica
 * 
 */
export type PessoaFisica = $Result.DefaultSelection<Prisma.$PessoaFisicaPayload>
/**
 * Model PessoaJuridica
 * 
 */
export type PessoaJuridica = $Result.DefaultSelection<Prisma.$PessoaJuridicaPayload>
/**
 * Model SaldoFinanceiro
 * 
 */
export type SaldoFinanceiro = $Result.DefaultSelection<Prisma.$SaldoFinanceiroPayload>
/**
 * Model Endereco
 * 
 */
export type Endereco = $Result.DefaultSelection<Prisma.$EnderecoPayload>
/**
 * Model DadosPagamento
 * 
 */
export type DadosPagamento = $Result.DefaultSelection<Prisma.$DadosPagamentoPayload>
/**
 * Model Tabela
 * 
 */
export type Tabela = $Result.DefaultSelection<Prisma.$TabelaPayload>
/**
 * Model PrecoPorTabela
 * 
 */
export type PrecoPorTabela = $Result.DefaultSelection<Prisma.$PrecoPorTabelaPayload>
/**
 * Model Material
 * 
 */
export type Material = $Result.DefaultSelection<Prisma.$MaterialPayload>
/**
 * Model CategoriaMaterial
 * 
 */
export type CategoriaMaterial = $Result.DefaultSelection<Prisma.$CategoriaMaterialPayload>
/**
 * Model ItemPedido
 * 
 */
export type ItemPedido = $Result.DefaultSelection<Prisma.$ItemPedidoPayload>
/**
 * Model Pedido
 * 
 */
export type Pedido = $Result.DefaultSelection<Prisma.$PedidoPayload>
/**
 * Model Pagamento
 * 
 */
export type Pagamento = $Result.DefaultSelection<Prisma.$PagamentoPayload>
/**
 * Model Conta
 * 
 */
export type Conta = $Result.DefaultSelection<Prisma.$ContaPayload>
/**
 * Model MovimentacaoFinanceira
 * 
 */
export type MovimentacaoFinanceira = $Result.DefaultSelection<Prisma.$MovimentacaoFinanceiraPayload>
/**
 * Model MovimentacaoEstoque
 * 
 */
export type MovimentacaoEstoque = $Result.DefaultSelection<Prisma.$MovimentacaoEstoquePayload>
/**
 * Model ConversaoEstoque
 * 
 */
export type ConversaoEstoque = $Result.DefaultSelection<Prisma.$ConversaoEstoquePayload>
/**
 * Model LivroCaixa
 * 
 */
export type LivroCaixa = $Result.DefaultSelection<Prisma.$LivroCaixaPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const StatusCaixa: {
  ABERTO: 'ABERTO',
  FECHADO: 'FECHADO'
};

export type StatusCaixa = (typeof StatusCaixa)[keyof typeof StatusCaixa]


export const TipoRegistro: {
  FISICA: 'FISICA',
  JURIDICA: 'JURIDICA'
};

export type TipoRegistro = (typeof TipoRegistro)[keyof typeof TipoRegistro]


export const TipoPedido: {
  COMPRA: 'COMPRA',
  VENDA: 'VENDA'
};

export type TipoPedido = (typeof TipoPedido)[keyof typeof TipoPedido]


export const TipoStatusPedido: {
  ABERTO: 'ABERTO',
  FECHADO: 'FECHADO',
  PAGO: 'PAGO'
};

export type TipoStatusPedido = (typeof TipoStatusPedido)[keyof typeof TipoStatusPedido]


export const TipoMovimentacao: {
  ENTRADA: 'ENTRADA',
  SAIDA: 'SAIDA'
};

export type TipoMovimentacao = (typeof TipoMovimentacao)[keyof typeof TipoMovimentacao]


export const FormaPagamento: {
  DINHEIRO: 'DINHEIRO',
  PIX: 'PIX',
  TRANSFERENCIA: 'TRANSFERENCIA',
  ABATER: 'ABATER'
};

export type FormaPagamento = (typeof FormaPagamento)[keyof typeof FormaPagamento]


export const TipoOrigem: {
  PEDIDO: 'PEDIDO',
  ABASTECIMENTO: 'ABASTECIMENTO',
  RETIRADA: 'RETIRADA',
  DESPESA: 'DESPESA'
};

export type TipoOrigem = (typeof TipoOrigem)[keyof typeof TipoOrigem]


export const TipoMovimentacaoEstoque: {
  VENDA: 'VENDA',
  COMPRA: 'COMPRA',
  ENTRADA_MANUAL: 'ENTRADA_MANUAL',
  SAIDA_MANUAL: 'SAIDA_MANUAL',
  ENTRADA_CONVERSAO: 'ENTRADA_CONVERSAO',
  SAIDA_CONVERSAO: 'SAIDA_CONVERSAO'
};

export type TipoMovimentacaoEstoque = (typeof TipoMovimentacaoEstoque)[keyof typeof TipoMovimentacaoEstoque]


export const OrigemMovimentacaoEstoque: {
  PEDIDO: 'PEDIDO',
  AJUSTE: 'AJUSTE',
  CONVERSAO: 'CONVERSAO'
};

export type OrigemMovimentacaoEstoque = (typeof OrigemMovimentacaoEstoque)[keyof typeof OrigemMovimentacaoEstoque]

}

export type StatusCaixa = $Enums.StatusCaixa

export const StatusCaixa: typeof $Enums.StatusCaixa

export type TipoRegistro = $Enums.TipoRegistro

export const TipoRegistro: typeof $Enums.TipoRegistro

export type TipoPedido = $Enums.TipoPedido

export const TipoPedido: typeof $Enums.TipoPedido

export type TipoStatusPedido = $Enums.TipoStatusPedido

export const TipoStatusPedido: typeof $Enums.TipoStatusPedido

export type TipoMovimentacao = $Enums.TipoMovimentacao

export const TipoMovimentacao: typeof $Enums.TipoMovimentacao

export type FormaPagamento = $Enums.FormaPagamento

export const FormaPagamento: typeof $Enums.FormaPagamento

export type TipoOrigem = $Enums.TipoOrigem

export const TipoOrigem: typeof $Enums.TipoOrigem

export type TipoMovimentacaoEstoque = $Enums.TipoMovimentacaoEstoque

export const TipoMovimentacaoEstoque: typeof $Enums.TipoMovimentacaoEstoque

export type OrigemMovimentacaoEstoque = $Enums.OrigemMovimentacaoEstoque

export const OrigemMovimentacaoEstoque: typeof $Enums.OrigemMovimentacaoEstoque

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.user.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.permissoes`: Exposes CRUD operations for the **Permissoes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Permissoes
    * const permissoes = await prisma.permissoes.findMany()
    * ```
    */
  get permissoes(): Prisma.PermissoesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cargo`: Exposes CRUD operations for the **Cargo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Cargos
    * const cargos = await prisma.cargo.findMany()
    * ```
    */
  get cargo(): Prisma.CargoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.registro`: Exposes CRUD operations for the **Registro** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Registros
    * const registros = await prisma.registro.findMany()
    * ```
    */
  get registro(): Prisma.RegistroDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.pessoaFisica`: Exposes CRUD operations for the **PessoaFisica** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PessoaFisicas
    * const pessoaFisicas = await prisma.pessoaFisica.findMany()
    * ```
    */
  get pessoaFisica(): Prisma.PessoaFisicaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.pessoaJuridica`: Exposes CRUD operations for the **PessoaJuridica** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PessoaJuridicas
    * const pessoaJuridicas = await prisma.pessoaJuridica.findMany()
    * ```
    */
  get pessoaJuridica(): Prisma.PessoaJuridicaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.saldoFinanceiro`: Exposes CRUD operations for the **SaldoFinanceiro** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SaldoFinanceiros
    * const saldoFinanceiros = await prisma.saldoFinanceiro.findMany()
    * ```
    */
  get saldoFinanceiro(): Prisma.SaldoFinanceiroDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.endereco`: Exposes CRUD operations for the **Endereco** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Enderecos
    * const enderecos = await prisma.endereco.findMany()
    * ```
    */
  get endereco(): Prisma.EnderecoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.dadosPagamento`: Exposes CRUD operations for the **DadosPagamento** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DadosPagamentos
    * const dadosPagamentos = await prisma.dadosPagamento.findMany()
    * ```
    */
  get dadosPagamento(): Prisma.DadosPagamentoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tabela`: Exposes CRUD operations for the **Tabela** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tabelas
    * const tabelas = await prisma.tabela.findMany()
    * ```
    */
  get tabela(): Prisma.TabelaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.precoPorTabela`: Exposes CRUD operations for the **PrecoPorTabela** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PrecoPorTabelas
    * const precoPorTabelas = await prisma.precoPorTabela.findMany()
    * ```
    */
  get precoPorTabela(): Prisma.PrecoPorTabelaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.material`: Exposes CRUD operations for the **Material** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Materials
    * const materials = await prisma.material.findMany()
    * ```
    */
  get material(): Prisma.MaterialDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.categoriaMaterial`: Exposes CRUD operations for the **CategoriaMaterial** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CategoriaMaterials
    * const categoriaMaterials = await prisma.categoriaMaterial.findMany()
    * ```
    */
  get categoriaMaterial(): Prisma.CategoriaMaterialDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.itemPedido`: Exposes CRUD operations for the **ItemPedido** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ItemPedidos
    * const itemPedidos = await prisma.itemPedido.findMany()
    * ```
    */
  get itemPedido(): Prisma.ItemPedidoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.pedido`: Exposes CRUD operations for the **Pedido** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Pedidos
    * const pedidos = await prisma.pedido.findMany()
    * ```
    */
  get pedido(): Prisma.PedidoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.pagamento`: Exposes CRUD operations for the **Pagamento** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Pagamentos
    * const pagamentos = await prisma.pagamento.findMany()
    * ```
    */
  get pagamento(): Prisma.PagamentoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.conta`: Exposes CRUD operations for the **Conta** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Contas
    * const contas = await prisma.conta.findMany()
    * ```
    */
  get conta(): Prisma.ContaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.movimentacaoFinanceira`: Exposes CRUD operations for the **MovimentacaoFinanceira** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MovimentacaoFinanceiras
    * const movimentacaoFinanceiras = await prisma.movimentacaoFinanceira.findMany()
    * ```
    */
  get movimentacaoFinanceira(): Prisma.MovimentacaoFinanceiraDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.movimentacaoEstoque`: Exposes CRUD operations for the **MovimentacaoEstoque** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MovimentacaoEstoques
    * const movimentacaoEstoques = await prisma.movimentacaoEstoque.findMany()
    * ```
    */
  get movimentacaoEstoque(): Prisma.MovimentacaoEstoqueDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.conversaoEstoque`: Exposes CRUD operations for the **ConversaoEstoque** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ConversaoEstoques
    * const conversaoEstoques = await prisma.conversaoEstoque.findMany()
    * ```
    */
  get conversaoEstoque(): Prisma.ConversaoEstoqueDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.livroCaixa`: Exposes CRUD operations for the **LivroCaixa** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more LivroCaixas
    * const livroCaixas = await prisma.livroCaixa.findMany()
    * ```
    */
  get livroCaixa(): Prisma.LivroCaixaDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.7.0
   * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    User: 'User',
    Permissoes: 'Permissoes',
    Cargo: 'Cargo',
    Registro: 'Registro',
    PessoaFisica: 'PessoaFisica',
    PessoaJuridica: 'PessoaJuridica',
    SaldoFinanceiro: 'SaldoFinanceiro',
    Endereco: 'Endereco',
    DadosPagamento: 'DadosPagamento',
    Tabela: 'Tabela',
    PrecoPorTabela: 'PrecoPorTabela',
    Material: 'Material',
    CategoriaMaterial: 'CategoriaMaterial',
    ItemPedido: 'ItemPedido',
    Pedido: 'Pedido',
    Pagamento: 'Pagamento',
    Conta: 'Conta',
    MovimentacaoFinanceira: 'MovimentacaoFinanceira',
    MovimentacaoEstoque: 'MovimentacaoEstoque',
    ConversaoEstoque: 'ConversaoEstoque',
    LivroCaixa: 'LivroCaixa'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "user" | "permissoes" | "cargo" | "registro" | "pessoaFisica" | "pessoaJuridica" | "saldoFinanceiro" | "endereco" | "dadosPagamento" | "tabela" | "precoPorTabela" | "material" | "categoriaMaterial" | "itemPedido" | "pedido" | "pagamento" | "conta" | "movimentacaoFinanceira" | "movimentacaoEstoque" | "conversaoEstoque" | "livroCaixa"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      Permissoes: {
        payload: Prisma.$PermissoesPayload<ExtArgs>
        fields: Prisma.PermissoesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PermissoesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissoesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PermissoesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissoesPayload>
          }
          findFirst: {
            args: Prisma.PermissoesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissoesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PermissoesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissoesPayload>
          }
          findMany: {
            args: Prisma.PermissoesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissoesPayload>[]
          }
          create: {
            args: Prisma.PermissoesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissoesPayload>
          }
          createMany: {
            args: Prisma.PermissoesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PermissoesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissoesPayload>[]
          }
          delete: {
            args: Prisma.PermissoesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissoesPayload>
          }
          update: {
            args: Prisma.PermissoesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissoesPayload>
          }
          deleteMany: {
            args: Prisma.PermissoesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PermissoesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PermissoesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissoesPayload>[]
          }
          upsert: {
            args: Prisma.PermissoesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissoesPayload>
          }
          aggregate: {
            args: Prisma.PermissoesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePermissoes>
          }
          groupBy: {
            args: Prisma.PermissoesGroupByArgs<ExtArgs>
            result: $Utils.Optional<PermissoesGroupByOutputType>[]
          }
          count: {
            args: Prisma.PermissoesCountArgs<ExtArgs>
            result: $Utils.Optional<PermissoesCountAggregateOutputType> | number
          }
        }
      }
      Cargo: {
        payload: Prisma.$CargoPayload<ExtArgs>
        fields: Prisma.CargoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CargoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CargoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CargoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CargoPayload>
          }
          findFirst: {
            args: Prisma.CargoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CargoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CargoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CargoPayload>
          }
          findMany: {
            args: Prisma.CargoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CargoPayload>[]
          }
          create: {
            args: Prisma.CargoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CargoPayload>
          }
          createMany: {
            args: Prisma.CargoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CargoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CargoPayload>[]
          }
          delete: {
            args: Prisma.CargoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CargoPayload>
          }
          update: {
            args: Prisma.CargoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CargoPayload>
          }
          deleteMany: {
            args: Prisma.CargoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CargoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CargoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CargoPayload>[]
          }
          upsert: {
            args: Prisma.CargoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CargoPayload>
          }
          aggregate: {
            args: Prisma.CargoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCargo>
          }
          groupBy: {
            args: Prisma.CargoGroupByArgs<ExtArgs>
            result: $Utils.Optional<CargoGroupByOutputType>[]
          }
          count: {
            args: Prisma.CargoCountArgs<ExtArgs>
            result: $Utils.Optional<CargoCountAggregateOutputType> | number
          }
        }
      }
      Registro: {
        payload: Prisma.$RegistroPayload<ExtArgs>
        fields: Prisma.RegistroFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RegistroFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RegistroFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroPayload>
          }
          findFirst: {
            args: Prisma.RegistroFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RegistroFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroPayload>
          }
          findMany: {
            args: Prisma.RegistroFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroPayload>[]
          }
          create: {
            args: Prisma.RegistroCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroPayload>
          }
          createMany: {
            args: Prisma.RegistroCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RegistroCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroPayload>[]
          }
          delete: {
            args: Prisma.RegistroDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroPayload>
          }
          update: {
            args: Prisma.RegistroUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroPayload>
          }
          deleteMany: {
            args: Prisma.RegistroDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RegistroUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RegistroUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroPayload>[]
          }
          upsert: {
            args: Prisma.RegistroUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RegistroPayload>
          }
          aggregate: {
            args: Prisma.RegistroAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRegistro>
          }
          groupBy: {
            args: Prisma.RegistroGroupByArgs<ExtArgs>
            result: $Utils.Optional<RegistroGroupByOutputType>[]
          }
          count: {
            args: Prisma.RegistroCountArgs<ExtArgs>
            result: $Utils.Optional<RegistroCountAggregateOutputType> | number
          }
        }
      }
      PessoaFisica: {
        payload: Prisma.$PessoaFisicaPayload<ExtArgs>
        fields: Prisma.PessoaFisicaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PessoaFisicaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PessoaFisicaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PessoaFisicaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PessoaFisicaPayload>
          }
          findFirst: {
            args: Prisma.PessoaFisicaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PessoaFisicaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PessoaFisicaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PessoaFisicaPayload>
          }
          findMany: {
            args: Prisma.PessoaFisicaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PessoaFisicaPayload>[]
          }
          create: {
            args: Prisma.PessoaFisicaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PessoaFisicaPayload>
          }
          createMany: {
            args: Prisma.PessoaFisicaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PessoaFisicaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PessoaFisicaPayload>[]
          }
          delete: {
            args: Prisma.PessoaFisicaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PessoaFisicaPayload>
          }
          update: {
            args: Prisma.PessoaFisicaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PessoaFisicaPayload>
          }
          deleteMany: {
            args: Prisma.PessoaFisicaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PessoaFisicaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PessoaFisicaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PessoaFisicaPayload>[]
          }
          upsert: {
            args: Prisma.PessoaFisicaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PessoaFisicaPayload>
          }
          aggregate: {
            args: Prisma.PessoaFisicaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePessoaFisica>
          }
          groupBy: {
            args: Prisma.PessoaFisicaGroupByArgs<ExtArgs>
            result: $Utils.Optional<PessoaFisicaGroupByOutputType>[]
          }
          count: {
            args: Prisma.PessoaFisicaCountArgs<ExtArgs>
            result: $Utils.Optional<PessoaFisicaCountAggregateOutputType> | number
          }
        }
      }
      PessoaJuridica: {
        payload: Prisma.$PessoaJuridicaPayload<ExtArgs>
        fields: Prisma.PessoaJuridicaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PessoaJuridicaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PessoaJuridicaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PessoaJuridicaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PessoaJuridicaPayload>
          }
          findFirst: {
            args: Prisma.PessoaJuridicaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PessoaJuridicaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PessoaJuridicaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PessoaJuridicaPayload>
          }
          findMany: {
            args: Prisma.PessoaJuridicaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PessoaJuridicaPayload>[]
          }
          create: {
            args: Prisma.PessoaJuridicaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PessoaJuridicaPayload>
          }
          createMany: {
            args: Prisma.PessoaJuridicaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PessoaJuridicaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PessoaJuridicaPayload>[]
          }
          delete: {
            args: Prisma.PessoaJuridicaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PessoaJuridicaPayload>
          }
          update: {
            args: Prisma.PessoaJuridicaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PessoaJuridicaPayload>
          }
          deleteMany: {
            args: Prisma.PessoaJuridicaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PessoaJuridicaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PessoaJuridicaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PessoaJuridicaPayload>[]
          }
          upsert: {
            args: Prisma.PessoaJuridicaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PessoaJuridicaPayload>
          }
          aggregate: {
            args: Prisma.PessoaJuridicaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePessoaJuridica>
          }
          groupBy: {
            args: Prisma.PessoaJuridicaGroupByArgs<ExtArgs>
            result: $Utils.Optional<PessoaJuridicaGroupByOutputType>[]
          }
          count: {
            args: Prisma.PessoaJuridicaCountArgs<ExtArgs>
            result: $Utils.Optional<PessoaJuridicaCountAggregateOutputType> | number
          }
        }
      }
      SaldoFinanceiro: {
        payload: Prisma.$SaldoFinanceiroPayload<ExtArgs>
        fields: Prisma.SaldoFinanceiroFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SaldoFinanceiroFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SaldoFinanceiroPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SaldoFinanceiroFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SaldoFinanceiroPayload>
          }
          findFirst: {
            args: Prisma.SaldoFinanceiroFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SaldoFinanceiroPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SaldoFinanceiroFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SaldoFinanceiroPayload>
          }
          findMany: {
            args: Prisma.SaldoFinanceiroFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SaldoFinanceiroPayload>[]
          }
          create: {
            args: Prisma.SaldoFinanceiroCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SaldoFinanceiroPayload>
          }
          createMany: {
            args: Prisma.SaldoFinanceiroCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SaldoFinanceiroCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SaldoFinanceiroPayload>[]
          }
          delete: {
            args: Prisma.SaldoFinanceiroDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SaldoFinanceiroPayload>
          }
          update: {
            args: Prisma.SaldoFinanceiroUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SaldoFinanceiroPayload>
          }
          deleteMany: {
            args: Prisma.SaldoFinanceiroDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SaldoFinanceiroUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SaldoFinanceiroUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SaldoFinanceiroPayload>[]
          }
          upsert: {
            args: Prisma.SaldoFinanceiroUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SaldoFinanceiroPayload>
          }
          aggregate: {
            args: Prisma.SaldoFinanceiroAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSaldoFinanceiro>
          }
          groupBy: {
            args: Prisma.SaldoFinanceiroGroupByArgs<ExtArgs>
            result: $Utils.Optional<SaldoFinanceiroGroupByOutputType>[]
          }
          count: {
            args: Prisma.SaldoFinanceiroCountArgs<ExtArgs>
            result: $Utils.Optional<SaldoFinanceiroCountAggregateOutputType> | number
          }
        }
      }
      Endereco: {
        payload: Prisma.$EnderecoPayload<ExtArgs>
        fields: Prisma.EnderecoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EnderecoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EnderecoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoPayload>
          }
          findFirst: {
            args: Prisma.EnderecoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EnderecoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoPayload>
          }
          findMany: {
            args: Prisma.EnderecoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoPayload>[]
          }
          create: {
            args: Prisma.EnderecoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoPayload>
          }
          createMany: {
            args: Prisma.EnderecoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EnderecoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoPayload>[]
          }
          delete: {
            args: Prisma.EnderecoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoPayload>
          }
          update: {
            args: Prisma.EnderecoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoPayload>
          }
          deleteMany: {
            args: Prisma.EnderecoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EnderecoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EnderecoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoPayload>[]
          }
          upsert: {
            args: Prisma.EnderecoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EnderecoPayload>
          }
          aggregate: {
            args: Prisma.EnderecoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEndereco>
          }
          groupBy: {
            args: Prisma.EnderecoGroupByArgs<ExtArgs>
            result: $Utils.Optional<EnderecoGroupByOutputType>[]
          }
          count: {
            args: Prisma.EnderecoCountArgs<ExtArgs>
            result: $Utils.Optional<EnderecoCountAggregateOutputType> | number
          }
        }
      }
      DadosPagamento: {
        payload: Prisma.$DadosPagamentoPayload<ExtArgs>
        fields: Prisma.DadosPagamentoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DadosPagamentoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DadosPagamentoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DadosPagamentoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DadosPagamentoPayload>
          }
          findFirst: {
            args: Prisma.DadosPagamentoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DadosPagamentoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DadosPagamentoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DadosPagamentoPayload>
          }
          findMany: {
            args: Prisma.DadosPagamentoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DadosPagamentoPayload>[]
          }
          create: {
            args: Prisma.DadosPagamentoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DadosPagamentoPayload>
          }
          createMany: {
            args: Prisma.DadosPagamentoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DadosPagamentoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DadosPagamentoPayload>[]
          }
          delete: {
            args: Prisma.DadosPagamentoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DadosPagamentoPayload>
          }
          update: {
            args: Prisma.DadosPagamentoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DadosPagamentoPayload>
          }
          deleteMany: {
            args: Prisma.DadosPagamentoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DadosPagamentoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.DadosPagamentoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DadosPagamentoPayload>[]
          }
          upsert: {
            args: Prisma.DadosPagamentoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DadosPagamentoPayload>
          }
          aggregate: {
            args: Prisma.DadosPagamentoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDadosPagamento>
          }
          groupBy: {
            args: Prisma.DadosPagamentoGroupByArgs<ExtArgs>
            result: $Utils.Optional<DadosPagamentoGroupByOutputType>[]
          }
          count: {
            args: Prisma.DadosPagamentoCountArgs<ExtArgs>
            result: $Utils.Optional<DadosPagamentoCountAggregateOutputType> | number
          }
        }
      }
      Tabela: {
        payload: Prisma.$TabelaPayload<ExtArgs>
        fields: Prisma.TabelaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TabelaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TabelaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TabelaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TabelaPayload>
          }
          findFirst: {
            args: Prisma.TabelaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TabelaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TabelaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TabelaPayload>
          }
          findMany: {
            args: Prisma.TabelaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TabelaPayload>[]
          }
          create: {
            args: Prisma.TabelaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TabelaPayload>
          }
          createMany: {
            args: Prisma.TabelaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TabelaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TabelaPayload>[]
          }
          delete: {
            args: Prisma.TabelaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TabelaPayload>
          }
          update: {
            args: Prisma.TabelaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TabelaPayload>
          }
          deleteMany: {
            args: Prisma.TabelaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TabelaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.TabelaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TabelaPayload>[]
          }
          upsert: {
            args: Prisma.TabelaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TabelaPayload>
          }
          aggregate: {
            args: Prisma.TabelaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTabela>
          }
          groupBy: {
            args: Prisma.TabelaGroupByArgs<ExtArgs>
            result: $Utils.Optional<TabelaGroupByOutputType>[]
          }
          count: {
            args: Prisma.TabelaCountArgs<ExtArgs>
            result: $Utils.Optional<TabelaCountAggregateOutputType> | number
          }
        }
      }
      PrecoPorTabela: {
        payload: Prisma.$PrecoPorTabelaPayload<ExtArgs>
        fields: Prisma.PrecoPorTabelaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PrecoPorTabelaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrecoPorTabelaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PrecoPorTabelaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrecoPorTabelaPayload>
          }
          findFirst: {
            args: Prisma.PrecoPorTabelaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrecoPorTabelaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PrecoPorTabelaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrecoPorTabelaPayload>
          }
          findMany: {
            args: Prisma.PrecoPorTabelaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrecoPorTabelaPayload>[]
          }
          create: {
            args: Prisma.PrecoPorTabelaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrecoPorTabelaPayload>
          }
          createMany: {
            args: Prisma.PrecoPorTabelaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PrecoPorTabelaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrecoPorTabelaPayload>[]
          }
          delete: {
            args: Prisma.PrecoPorTabelaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrecoPorTabelaPayload>
          }
          update: {
            args: Prisma.PrecoPorTabelaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrecoPorTabelaPayload>
          }
          deleteMany: {
            args: Prisma.PrecoPorTabelaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PrecoPorTabelaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PrecoPorTabelaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrecoPorTabelaPayload>[]
          }
          upsert: {
            args: Prisma.PrecoPorTabelaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PrecoPorTabelaPayload>
          }
          aggregate: {
            args: Prisma.PrecoPorTabelaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePrecoPorTabela>
          }
          groupBy: {
            args: Prisma.PrecoPorTabelaGroupByArgs<ExtArgs>
            result: $Utils.Optional<PrecoPorTabelaGroupByOutputType>[]
          }
          count: {
            args: Prisma.PrecoPorTabelaCountArgs<ExtArgs>
            result: $Utils.Optional<PrecoPorTabelaCountAggregateOutputType> | number
          }
        }
      }
      Material: {
        payload: Prisma.$MaterialPayload<ExtArgs>
        fields: Prisma.MaterialFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MaterialFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MaterialFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialPayload>
          }
          findFirst: {
            args: Prisma.MaterialFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MaterialFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialPayload>
          }
          findMany: {
            args: Prisma.MaterialFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialPayload>[]
          }
          create: {
            args: Prisma.MaterialCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialPayload>
          }
          createMany: {
            args: Prisma.MaterialCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MaterialCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialPayload>[]
          }
          delete: {
            args: Prisma.MaterialDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialPayload>
          }
          update: {
            args: Prisma.MaterialUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialPayload>
          }
          deleteMany: {
            args: Prisma.MaterialDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MaterialUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MaterialUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialPayload>[]
          }
          upsert: {
            args: Prisma.MaterialUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaterialPayload>
          }
          aggregate: {
            args: Prisma.MaterialAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMaterial>
          }
          groupBy: {
            args: Prisma.MaterialGroupByArgs<ExtArgs>
            result: $Utils.Optional<MaterialGroupByOutputType>[]
          }
          count: {
            args: Prisma.MaterialCountArgs<ExtArgs>
            result: $Utils.Optional<MaterialCountAggregateOutputType> | number
          }
        }
      }
      CategoriaMaterial: {
        payload: Prisma.$CategoriaMaterialPayload<ExtArgs>
        fields: Prisma.CategoriaMaterialFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CategoriaMaterialFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaMaterialPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CategoriaMaterialFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaMaterialPayload>
          }
          findFirst: {
            args: Prisma.CategoriaMaterialFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaMaterialPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CategoriaMaterialFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaMaterialPayload>
          }
          findMany: {
            args: Prisma.CategoriaMaterialFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaMaterialPayload>[]
          }
          create: {
            args: Prisma.CategoriaMaterialCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaMaterialPayload>
          }
          createMany: {
            args: Prisma.CategoriaMaterialCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CategoriaMaterialCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaMaterialPayload>[]
          }
          delete: {
            args: Prisma.CategoriaMaterialDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaMaterialPayload>
          }
          update: {
            args: Prisma.CategoriaMaterialUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaMaterialPayload>
          }
          deleteMany: {
            args: Prisma.CategoriaMaterialDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CategoriaMaterialUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CategoriaMaterialUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaMaterialPayload>[]
          }
          upsert: {
            args: Prisma.CategoriaMaterialUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriaMaterialPayload>
          }
          aggregate: {
            args: Prisma.CategoriaMaterialAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCategoriaMaterial>
          }
          groupBy: {
            args: Prisma.CategoriaMaterialGroupByArgs<ExtArgs>
            result: $Utils.Optional<CategoriaMaterialGroupByOutputType>[]
          }
          count: {
            args: Prisma.CategoriaMaterialCountArgs<ExtArgs>
            result: $Utils.Optional<CategoriaMaterialCountAggregateOutputType> | number
          }
        }
      }
      ItemPedido: {
        payload: Prisma.$ItemPedidoPayload<ExtArgs>
        fields: Prisma.ItemPedidoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ItemPedidoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemPedidoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ItemPedidoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemPedidoPayload>
          }
          findFirst: {
            args: Prisma.ItemPedidoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemPedidoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ItemPedidoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemPedidoPayload>
          }
          findMany: {
            args: Prisma.ItemPedidoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemPedidoPayload>[]
          }
          create: {
            args: Prisma.ItemPedidoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemPedidoPayload>
          }
          createMany: {
            args: Prisma.ItemPedidoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ItemPedidoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemPedidoPayload>[]
          }
          delete: {
            args: Prisma.ItemPedidoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemPedidoPayload>
          }
          update: {
            args: Prisma.ItemPedidoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemPedidoPayload>
          }
          deleteMany: {
            args: Prisma.ItemPedidoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ItemPedidoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ItemPedidoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemPedidoPayload>[]
          }
          upsert: {
            args: Prisma.ItemPedidoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemPedidoPayload>
          }
          aggregate: {
            args: Prisma.ItemPedidoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateItemPedido>
          }
          groupBy: {
            args: Prisma.ItemPedidoGroupByArgs<ExtArgs>
            result: $Utils.Optional<ItemPedidoGroupByOutputType>[]
          }
          count: {
            args: Prisma.ItemPedidoCountArgs<ExtArgs>
            result: $Utils.Optional<ItemPedidoCountAggregateOutputType> | number
          }
        }
      }
      Pedido: {
        payload: Prisma.$PedidoPayload<ExtArgs>
        fields: Prisma.PedidoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PedidoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PedidoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload>
          }
          findFirst: {
            args: Prisma.PedidoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PedidoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload>
          }
          findMany: {
            args: Prisma.PedidoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload>[]
          }
          create: {
            args: Prisma.PedidoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload>
          }
          createMany: {
            args: Prisma.PedidoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PedidoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload>[]
          }
          delete: {
            args: Prisma.PedidoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload>
          }
          update: {
            args: Prisma.PedidoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload>
          }
          deleteMany: {
            args: Prisma.PedidoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PedidoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PedidoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload>[]
          }
          upsert: {
            args: Prisma.PedidoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PedidoPayload>
          }
          aggregate: {
            args: Prisma.PedidoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePedido>
          }
          groupBy: {
            args: Prisma.PedidoGroupByArgs<ExtArgs>
            result: $Utils.Optional<PedidoGroupByOutputType>[]
          }
          count: {
            args: Prisma.PedidoCountArgs<ExtArgs>
            result: $Utils.Optional<PedidoCountAggregateOutputType> | number
          }
        }
      }
      Pagamento: {
        payload: Prisma.$PagamentoPayload<ExtArgs>
        fields: Prisma.PagamentoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PagamentoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagamentoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PagamentoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagamentoPayload>
          }
          findFirst: {
            args: Prisma.PagamentoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagamentoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PagamentoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagamentoPayload>
          }
          findMany: {
            args: Prisma.PagamentoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagamentoPayload>[]
          }
          create: {
            args: Prisma.PagamentoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagamentoPayload>
          }
          createMany: {
            args: Prisma.PagamentoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PagamentoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagamentoPayload>[]
          }
          delete: {
            args: Prisma.PagamentoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagamentoPayload>
          }
          update: {
            args: Prisma.PagamentoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagamentoPayload>
          }
          deleteMany: {
            args: Prisma.PagamentoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PagamentoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PagamentoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagamentoPayload>[]
          }
          upsert: {
            args: Prisma.PagamentoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagamentoPayload>
          }
          aggregate: {
            args: Prisma.PagamentoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePagamento>
          }
          groupBy: {
            args: Prisma.PagamentoGroupByArgs<ExtArgs>
            result: $Utils.Optional<PagamentoGroupByOutputType>[]
          }
          count: {
            args: Prisma.PagamentoCountArgs<ExtArgs>
            result: $Utils.Optional<PagamentoCountAggregateOutputType> | number
          }
        }
      }
      Conta: {
        payload: Prisma.$ContaPayload<ExtArgs>
        fields: Prisma.ContaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ContaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ContaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContaPayload>
          }
          findFirst: {
            args: Prisma.ContaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ContaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContaPayload>
          }
          findMany: {
            args: Prisma.ContaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContaPayload>[]
          }
          create: {
            args: Prisma.ContaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContaPayload>
          }
          createMany: {
            args: Prisma.ContaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ContaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContaPayload>[]
          }
          delete: {
            args: Prisma.ContaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContaPayload>
          }
          update: {
            args: Prisma.ContaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContaPayload>
          }
          deleteMany: {
            args: Prisma.ContaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ContaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ContaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContaPayload>[]
          }
          upsert: {
            args: Prisma.ContaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ContaPayload>
          }
          aggregate: {
            args: Prisma.ContaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateConta>
          }
          groupBy: {
            args: Prisma.ContaGroupByArgs<ExtArgs>
            result: $Utils.Optional<ContaGroupByOutputType>[]
          }
          count: {
            args: Prisma.ContaCountArgs<ExtArgs>
            result: $Utils.Optional<ContaCountAggregateOutputType> | number
          }
        }
      }
      MovimentacaoFinanceira: {
        payload: Prisma.$MovimentacaoFinanceiraPayload<ExtArgs>
        fields: Prisma.MovimentacaoFinanceiraFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MovimentacaoFinanceiraFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovimentacaoFinanceiraPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MovimentacaoFinanceiraFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovimentacaoFinanceiraPayload>
          }
          findFirst: {
            args: Prisma.MovimentacaoFinanceiraFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovimentacaoFinanceiraPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MovimentacaoFinanceiraFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovimentacaoFinanceiraPayload>
          }
          findMany: {
            args: Prisma.MovimentacaoFinanceiraFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovimentacaoFinanceiraPayload>[]
          }
          create: {
            args: Prisma.MovimentacaoFinanceiraCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovimentacaoFinanceiraPayload>
          }
          createMany: {
            args: Prisma.MovimentacaoFinanceiraCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MovimentacaoFinanceiraCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovimentacaoFinanceiraPayload>[]
          }
          delete: {
            args: Prisma.MovimentacaoFinanceiraDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovimentacaoFinanceiraPayload>
          }
          update: {
            args: Prisma.MovimentacaoFinanceiraUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovimentacaoFinanceiraPayload>
          }
          deleteMany: {
            args: Prisma.MovimentacaoFinanceiraDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MovimentacaoFinanceiraUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MovimentacaoFinanceiraUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovimentacaoFinanceiraPayload>[]
          }
          upsert: {
            args: Prisma.MovimentacaoFinanceiraUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovimentacaoFinanceiraPayload>
          }
          aggregate: {
            args: Prisma.MovimentacaoFinanceiraAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMovimentacaoFinanceira>
          }
          groupBy: {
            args: Prisma.MovimentacaoFinanceiraGroupByArgs<ExtArgs>
            result: $Utils.Optional<MovimentacaoFinanceiraGroupByOutputType>[]
          }
          count: {
            args: Prisma.MovimentacaoFinanceiraCountArgs<ExtArgs>
            result: $Utils.Optional<MovimentacaoFinanceiraCountAggregateOutputType> | number
          }
        }
      }
      MovimentacaoEstoque: {
        payload: Prisma.$MovimentacaoEstoquePayload<ExtArgs>
        fields: Prisma.MovimentacaoEstoqueFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MovimentacaoEstoqueFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovimentacaoEstoquePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MovimentacaoEstoqueFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovimentacaoEstoquePayload>
          }
          findFirst: {
            args: Prisma.MovimentacaoEstoqueFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovimentacaoEstoquePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MovimentacaoEstoqueFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovimentacaoEstoquePayload>
          }
          findMany: {
            args: Prisma.MovimentacaoEstoqueFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovimentacaoEstoquePayload>[]
          }
          create: {
            args: Prisma.MovimentacaoEstoqueCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovimentacaoEstoquePayload>
          }
          createMany: {
            args: Prisma.MovimentacaoEstoqueCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MovimentacaoEstoqueCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovimentacaoEstoquePayload>[]
          }
          delete: {
            args: Prisma.MovimentacaoEstoqueDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovimentacaoEstoquePayload>
          }
          update: {
            args: Prisma.MovimentacaoEstoqueUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovimentacaoEstoquePayload>
          }
          deleteMany: {
            args: Prisma.MovimentacaoEstoqueDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MovimentacaoEstoqueUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MovimentacaoEstoqueUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovimentacaoEstoquePayload>[]
          }
          upsert: {
            args: Prisma.MovimentacaoEstoqueUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MovimentacaoEstoquePayload>
          }
          aggregate: {
            args: Prisma.MovimentacaoEstoqueAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMovimentacaoEstoque>
          }
          groupBy: {
            args: Prisma.MovimentacaoEstoqueGroupByArgs<ExtArgs>
            result: $Utils.Optional<MovimentacaoEstoqueGroupByOutputType>[]
          }
          count: {
            args: Prisma.MovimentacaoEstoqueCountArgs<ExtArgs>
            result: $Utils.Optional<MovimentacaoEstoqueCountAggregateOutputType> | number
          }
        }
      }
      ConversaoEstoque: {
        payload: Prisma.$ConversaoEstoquePayload<ExtArgs>
        fields: Prisma.ConversaoEstoqueFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ConversaoEstoqueFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConversaoEstoquePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ConversaoEstoqueFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConversaoEstoquePayload>
          }
          findFirst: {
            args: Prisma.ConversaoEstoqueFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConversaoEstoquePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ConversaoEstoqueFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConversaoEstoquePayload>
          }
          findMany: {
            args: Prisma.ConversaoEstoqueFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConversaoEstoquePayload>[]
          }
          create: {
            args: Prisma.ConversaoEstoqueCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConversaoEstoquePayload>
          }
          createMany: {
            args: Prisma.ConversaoEstoqueCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ConversaoEstoqueCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConversaoEstoquePayload>[]
          }
          delete: {
            args: Prisma.ConversaoEstoqueDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConversaoEstoquePayload>
          }
          update: {
            args: Prisma.ConversaoEstoqueUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConversaoEstoquePayload>
          }
          deleteMany: {
            args: Prisma.ConversaoEstoqueDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ConversaoEstoqueUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ConversaoEstoqueUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConversaoEstoquePayload>[]
          }
          upsert: {
            args: Prisma.ConversaoEstoqueUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConversaoEstoquePayload>
          }
          aggregate: {
            args: Prisma.ConversaoEstoqueAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateConversaoEstoque>
          }
          groupBy: {
            args: Prisma.ConversaoEstoqueGroupByArgs<ExtArgs>
            result: $Utils.Optional<ConversaoEstoqueGroupByOutputType>[]
          }
          count: {
            args: Prisma.ConversaoEstoqueCountArgs<ExtArgs>
            result: $Utils.Optional<ConversaoEstoqueCountAggregateOutputType> | number
          }
        }
      }
      LivroCaixa: {
        payload: Prisma.$LivroCaixaPayload<ExtArgs>
        fields: Prisma.LivroCaixaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LivroCaixaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LivroCaixaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LivroCaixaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LivroCaixaPayload>
          }
          findFirst: {
            args: Prisma.LivroCaixaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LivroCaixaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LivroCaixaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LivroCaixaPayload>
          }
          findMany: {
            args: Prisma.LivroCaixaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LivroCaixaPayload>[]
          }
          create: {
            args: Prisma.LivroCaixaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LivroCaixaPayload>
          }
          createMany: {
            args: Prisma.LivroCaixaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.LivroCaixaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LivroCaixaPayload>[]
          }
          delete: {
            args: Prisma.LivroCaixaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LivroCaixaPayload>
          }
          update: {
            args: Prisma.LivroCaixaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LivroCaixaPayload>
          }
          deleteMany: {
            args: Prisma.LivroCaixaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.LivroCaixaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.LivroCaixaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LivroCaixaPayload>[]
          }
          upsert: {
            args: Prisma.LivroCaixaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LivroCaixaPayload>
          }
          aggregate: {
            args: Prisma.LivroCaixaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLivroCaixa>
          }
          groupBy: {
            args: Prisma.LivroCaixaGroupByArgs<ExtArgs>
            result: $Utils.Optional<LivroCaixaGroupByOutputType>[]
          }
          count: {
            args: Prisma.LivroCaixaCountArgs<ExtArgs>
            result: $Utils.Optional<LivroCaixaCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    user?: UserOmit
    permissoes?: PermissoesOmit
    cargo?: CargoOmit
    registro?: RegistroOmit
    pessoaFisica?: PessoaFisicaOmit
    pessoaJuridica?: PessoaJuridicaOmit
    saldoFinanceiro?: SaldoFinanceiroOmit
    endereco?: EnderecoOmit
    dadosPagamento?: DadosPagamentoOmit
    tabela?: TabelaOmit
    precoPorTabela?: PrecoPorTabelaOmit
    material?: MaterialOmit
    categoriaMaterial?: CategoriaMaterialOmit
    itemPedido?: ItemPedidoOmit
    pedido?: PedidoOmit
    pagamento?: PagamentoOmit
    conta?: ContaOmit
    movimentacaoFinanceira?: MovimentacaoFinanceiraOmit
    movimentacaoEstoque?: MovimentacaoEstoqueOmit
    conversaoEstoque?: ConversaoEstoqueOmit
    livroCaixa?: LivroCaixaOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    pedidos: number
    permissoes: number
    caixas: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pedidos?: boolean | UserCountOutputTypeCountPedidosArgs
    permissoes?: boolean | UserCountOutputTypeCountPermissoesArgs
    caixas?: boolean | UserCountOutputTypeCountCaixasArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountPedidosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PedidoWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountPermissoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PermissoesWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCaixasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LivroCaixaWhereInput
  }


  /**
   * Count Type PermissoesCountOutputType
   */

  export type PermissoesCountOutputType = {
    users: number
  }

  export type PermissoesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | PermissoesCountOutputTypeCountUsersArgs
  }

  // Custom InputTypes
  /**
   * PermissoesCountOutputType without action
   */
  export type PermissoesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermissoesCountOutputType
     */
    select?: PermissoesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PermissoesCountOutputType without action
   */
  export type PermissoesCountOutputTypeCountUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }


  /**
   * Count Type CargoCountOutputType
   */

  export type CargoCountOutputType = {
    users: number
  }

  export type CargoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | CargoCountOutputTypeCountUsersArgs
  }

  // Custom InputTypes
  /**
   * CargoCountOutputType without action
   */
  export type CargoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CargoCountOutputType
     */
    select?: CargoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CargoCountOutputType without action
   */
  export type CargoCountOutputTypeCountUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }


  /**
   * Count Type RegistroCountOutputType
   */

  export type RegistroCountOutputType = {
    pedidos: number
  }

  export type RegistroCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pedidos?: boolean | RegistroCountOutputTypeCountPedidosArgs
  }

  // Custom InputTypes
  /**
   * RegistroCountOutputType without action
   */
  export type RegistroCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistroCountOutputType
     */
    select?: RegistroCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RegistroCountOutputType without action
   */
  export type RegistroCountOutputTypeCountPedidosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PedidoWhereInput
  }


  /**
   * Count Type TabelaCountOutputType
   */

  export type TabelaCountOutputType = {
    materiais: number
    registros: number
  }

  export type TabelaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    materiais?: boolean | TabelaCountOutputTypeCountMateriaisArgs
    registros?: boolean | TabelaCountOutputTypeCountRegistrosArgs
  }

  // Custom InputTypes
  /**
   * TabelaCountOutputType without action
   */
  export type TabelaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TabelaCountOutputType
     */
    select?: TabelaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TabelaCountOutputType without action
   */
  export type TabelaCountOutputTypeCountMateriaisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PrecoPorTabelaWhereInput
  }

  /**
   * TabelaCountOutputType without action
   */
  export type TabelaCountOutputTypeCountRegistrosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RegistroWhereInput
  }


  /**
   * Count Type MaterialCountOutputType
   */

  export type MaterialCountOutputType = {
    items: number
    movimentacoes: number
    preco_tabela: number
  }

  export type MaterialCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    items?: boolean | MaterialCountOutputTypeCountItemsArgs
    movimentacoes?: boolean | MaterialCountOutputTypeCountMovimentacoesArgs
    preco_tabela?: boolean | MaterialCountOutputTypeCountPreco_tabelaArgs
  }

  // Custom InputTypes
  /**
   * MaterialCountOutputType without action
   */
  export type MaterialCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaterialCountOutputType
     */
    select?: MaterialCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MaterialCountOutputType without action
   */
  export type MaterialCountOutputTypeCountItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ItemPedidoWhereInput
  }

  /**
   * MaterialCountOutputType without action
   */
  export type MaterialCountOutputTypeCountMovimentacoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MovimentacaoEstoqueWhereInput
  }

  /**
   * MaterialCountOutputType without action
   */
  export type MaterialCountOutputTypeCountPreco_tabelaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PrecoPorTabelaWhereInput
  }


  /**
   * Count Type CategoriaMaterialCountOutputType
   */

  export type CategoriaMaterialCountOutputType = {
    materiais: number
  }

  export type CategoriaMaterialCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    materiais?: boolean | CategoriaMaterialCountOutputTypeCountMateriaisArgs
  }

  // Custom InputTypes
  /**
   * CategoriaMaterialCountOutputType without action
   */
  export type CategoriaMaterialCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaMaterialCountOutputType
     */
    select?: CategoriaMaterialCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CategoriaMaterialCountOutputType without action
   */
  export type CategoriaMaterialCountOutputTypeCountMateriaisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MaterialWhereInput
  }


  /**
   * Count Type PedidoCountOutputType
   */

  export type PedidoCountOutputType = {
    items: number
    pagamentos: number
  }

  export type PedidoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    items?: boolean | PedidoCountOutputTypeCountItemsArgs
    pagamentos?: boolean | PedidoCountOutputTypeCountPagamentosArgs
  }

  // Custom InputTypes
  /**
   * PedidoCountOutputType without action
   */
  export type PedidoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PedidoCountOutputType
     */
    select?: PedidoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PedidoCountOutputType without action
   */
  export type PedidoCountOutputTypeCountItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ItemPedidoWhereInput
  }

  /**
   * PedidoCountOutputType without action
   */
  export type PedidoCountOutputTypeCountPagamentosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PagamentoWhereInput
  }


  /**
   * Count Type ContaCountOutputType
   */

  export type ContaCountOutputType = {
    movimentacoes: number
  }

  export type ContaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    movimentacoes?: boolean | ContaCountOutputTypeCountMovimentacoesArgs
  }

  // Custom InputTypes
  /**
   * ContaCountOutputType without action
   */
  export type ContaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ContaCountOutputType
     */
    select?: ContaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ContaCountOutputType without action
   */
  export type ContaCountOutputTypeCountMovimentacoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MovimentacaoFinanceiraWhereInput
  }


  /**
   * Count Type ConversaoEstoqueCountOutputType
   */

  export type ConversaoEstoqueCountOutputType = {
    movimentacoes: number
  }

  export type ConversaoEstoqueCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    movimentacoes?: boolean | ConversaoEstoqueCountOutputTypeCountMovimentacoesArgs
  }

  // Custom InputTypes
  /**
   * ConversaoEstoqueCountOutputType without action
   */
  export type ConversaoEstoqueCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConversaoEstoqueCountOutputType
     */
    select?: ConversaoEstoqueCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ConversaoEstoqueCountOutputType without action
   */
  export type ConversaoEstoqueCountOutputTypeCountMovimentacoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MovimentacaoEstoqueWhereInput
  }


  /**
   * Count Type LivroCaixaCountOutputType
   */

  export type LivroCaixaCountOutputType = {
    movimentacoes: number
  }

  export type LivroCaixaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    movimentacoes?: boolean | LivroCaixaCountOutputTypeCountMovimentacoesArgs
  }

  // Custom InputTypes
  /**
   * LivroCaixaCountOutputType without action
   */
  export type LivroCaixaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LivroCaixaCountOutputType
     */
    select?: LivroCaixaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * LivroCaixaCountOutputType without action
   */
  export type LivroCaixaCountOutputTypeCountMovimentacoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MovimentacaoFinanceiraWhereInput
  }


  /**
   * Models
   */

  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    id: number | null
    cargoID: number | null
  }

  export type UserSumAggregateOutputType = {
    id: number | null
    cargoID: number | null
  }

  export type UserMinAggregateOutputType = {
    id: number | null
    nome: string | null
    email: string | null
    senha: string | null
    telefone: string | null
    cargoID: number | null
    deletedAt: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    email: string | null
    senha: string | null
    telefone: string | null
    cargoID: number | null
    deletedAt: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    nome: number
    email: number
    senha: number
    telefone: number
    cargoID: number
    deletedAt: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    id?: true
    cargoID?: true
  }

  export type UserSumAggregateInputType = {
    id?: true
    cargoID?: true
  }

  export type UserMinAggregateInputType = {
    id?: true
    nome?: true
    email?: true
    senha?: true
    telefone?: true
    cargoID?: true
    deletedAt?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    nome?: true
    email?: true
    senha?: true
    telefone?: true
    cargoID?: true
    deletedAt?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    nome?: true
    email?: true
    senha?: true
    telefone?: true
    cargoID?: true
    deletedAt?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: number
    nome: string
    email: string
    senha: string
    telefone: string
    cargoID: number
    deletedAt: Date | null
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    email?: boolean
    senha?: boolean
    telefone?: boolean
    cargoID?: boolean
    deletedAt?: boolean
    pedidos?: boolean | User$pedidosArgs<ExtArgs>
    cargo?: boolean | CargoDefaultArgs<ExtArgs>
    permissoes?: boolean | User$permissoesArgs<ExtArgs>
    caixas?: boolean | User$caixasArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    email?: boolean
    senha?: boolean
    telefone?: boolean
    cargoID?: boolean
    deletedAt?: boolean
    cargo?: boolean | CargoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    email?: boolean
    senha?: boolean
    telefone?: boolean
    cargoID?: boolean
    deletedAt?: boolean
    cargo?: boolean | CargoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    nome?: boolean
    email?: boolean
    senha?: boolean
    telefone?: boolean
    cargoID?: boolean
    deletedAt?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nome" | "email" | "senha" | "telefone" | "cargoID" | "deletedAt", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pedidos?: boolean | User$pedidosArgs<ExtArgs>
    cargo?: boolean | CargoDefaultArgs<ExtArgs>
    permissoes?: boolean | User$permissoesArgs<ExtArgs>
    caixas?: boolean | User$caixasArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cargo?: boolean | CargoDefaultArgs<ExtArgs>
  }
  export type UserIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cargo?: boolean | CargoDefaultArgs<ExtArgs>
  }

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      pedidos: Prisma.$PedidoPayload<ExtArgs>[]
      cargo: Prisma.$CargoPayload<ExtArgs>
      permissoes: Prisma.$PermissoesPayload<ExtArgs>[]
      caixas: Prisma.$LivroCaixaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      email: string
      senha: string
      telefone: string
      cargoID: number
      deletedAt: Date | null
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const userWithIdOnly = await prisma.user.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(args: SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    pedidos<T extends User$pedidosArgs<ExtArgs> = {}>(args?: Subset<T, User$pedidosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    cargo<T extends CargoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CargoDefaultArgs<ExtArgs>>): Prisma__CargoClient<$Result.GetResult<Prisma.$CargoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    permissoes<T extends User$permissoesArgs<ExtArgs> = {}>(args?: Subset<T, User$permissoesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermissoesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    caixas<T extends User$caixasArgs<ExtArgs> = {}>(args?: Subset<T, User$caixasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LivroCaixaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'Int'>
    readonly nome: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly senha: FieldRef<"User", 'String'>
    readonly telefone: FieldRef<"User", 'String'>
    readonly cargoID: FieldRef<"User", 'Int'>
    readonly deletedAt: FieldRef<"User", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User updateManyAndReturn
   */
  export type UserUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User.pedidos
   */
  export type User$pedidosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    where?: PedidoWhereInput
    orderBy?: PedidoOrderByWithRelationInput | PedidoOrderByWithRelationInput[]
    cursor?: PedidoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PedidoScalarFieldEnum | PedidoScalarFieldEnum[]
  }

  /**
   * User.permissoes
   */
  export type User$permissoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permissoes
     */
    select?: PermissoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permissoes
     */
    omit?: PermissoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissoesInclude<ExtArgs> | null
    where?: PermissoesWhereInput
    orderBy?: PermissoesOrderByWithRelationInput | PermissoesOrderByWithRelationInput[]
    cursor?: PermissoesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PermissoesScalarFieldEnum | PermissoesScalarFieldEnum[]
  }

  /**
   * User.caixas
   */
  export type User$caixasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LivroCaixa
     */
    select?: LivroCaixaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LivroCaixa
     */
    omit?: LivroCaixaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LivroCaixaInclude<ExtArgs> | null
    where?: LivroCaixaWhereInput
    orderBy?: LivroCaixaOrderByWithRelationInput | LivroCaixaOrderByWithRelationInput[]
    cursor?: LivroCaixaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LivroCaixaScalarFieldEnum | LivroCaixaScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model Permissoes
   */

  export type AggregatePermissoes = {
    _count: PermissoesCountAggregateOutputType | null
    _avg: PermissoesAvgAggregateOutputType | null
    _sum: PermissoesSumAggregateOutputType | null
    _min: PermissoesMinAggregateOutputType | null
    _max: PermissoesMaxAggregateOutputType | null
  }

  export type PermissoesAvgAggregateOutputType = {
    id: number | null
  }

  export type PermissoesSumAggregateOutputType = {
    id: number | null
  }

  export type PermissoesMinAggregateOutputType = {
    id: number | null
    nome: string | null
    descricao: string | null
  }

  export type PermissoesMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    descricao: string | null
  }

  export type PermissoesCountAggregateOutputType = {
    id: number
    nome: number
    descricao: number
    _all: number
  }


  export type PermissoesAvgAggregateInputType = {
    id?: true
  }

  export type PermissoesSumAggregateInputType = {
    id?: true
  }

  export type PermissoesMinAggregateInputType = {
    id?: true
    nome?: true
    descricao?: true
  }

  export type PermissoesMaxAggregateInputType = {
    id?: true
    nome?: true
    descricao?: true
  }

  export type PermissoesCountAggregateInputType = {
    id?: true
    nome?: true
    descricao?: true
    _all?: true
  }

  export type PermissoesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Permissoes to aggregate.
     */
    where?: PermissoesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permissoes to fetch.
     */
    orderBy?: PermissoesOrderByWithRelationInput | PermissoesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PermissoesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Permissoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permissoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Permissoes
    **/
    _count?: true | PermissoesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PermissoesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PermissoesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PermissoesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PermissoesMaxAggregateInputType
  }

  export type GetPermissoesAggregateType<T extends PermissoesAggregateArgs> = {
        [P in keyof T & keyof AggregatePermissoes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePermissoes[P]>
      : GetScalarType<T[P], AggregatePermissoes[P]>
  }




  export type PermissoesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PermissoesWhereInput
    orderBy?: PermissoesOrderByWithAggregationInput | PermissoesOrderByWithAggregationInput[]
    by: PermissoesScalarFieldEnum[] | PermissoesScalarFieldEnum
    having?: PermissoesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PermissoesCountAggregateInputType | true
    _avg?: PermissoesAvgAggregateInputType
    _sum?: PermissoesSumAggregateInputType
    _min?: PermissoesMinAggregateInputType
    _max?: PermissoesMaxAggregateInputType
  }

  export type PermissoesGroupByOutputType = {
    id: number
    nome: string
    descricao: string | null
    _count: PermissoesCountAggregateOutputType | null
    _avg: PermissoesAvgAggregateOutputType | null
    _sum: PermissoesSumAggregateOutputType | null
    _min: PermissoesMinAggregateOutputType | null
    _max: PermissoesMaxAggregateOutputType | null
  }

  type GetPermissoesGroupByPayload<T extends PermissoesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PermissoesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PermissoesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PermissoesGroupByOutputType[P]>
            : GetScalarType<T[P], PermissoesGroupByOutputType[P]>
        }
      >
    >


  export type PermissoesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    descricao?: boolean
    users?: boolean | Permissoes$usersArgs<ExtArgs>
    _count?: boolean | PermissoesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["permissoes"]>

  export type PermissoesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    descricao?: boolean
  }, ExtArgs["result"]["permissoes"]>

  export type PermissoesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    descricao?: boolean
  }, ExtArgs["result"]["permissoes"]>

  export type PermissoesSelectScalar = {
    id?: boolean
    nome?: boolean
    descricao?: boolean
  }

  export type PermissoesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nome" | "descricao", ExtArgs["result"]["permissoes"]>
  export type PermissoesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | Permissoes$usersArgs<ExtArgs>
    _count?: boolean | PermissoesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PermissoesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type PermissoesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $PermissoesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Permissoes"
    objects: {
      users: Prisma.$UserPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      descricao: string | null
    }, ExtArgs["result"]["permissoes"]>
    composites: {}
  }

  type PermissoesGetPayload<S extends boolean | null | undefined | PermissoesDefaultArgs> = $Result.GetResult<Prisma.$PermissoesPayload, S>

  type PermissoesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PermissoesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PermissoesCountAggregateInputType | true
    }

  export interface PermissoesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Permissoes'], meta: { name: 'Permissoes' } }
    /**
     * Find zero or one Permissoes that matches the filter.
     * @param {PermissoesFindUniqueArgs} args - Arguments to find a Permissoes
     * @example
     * // Get one Permissoes
     * const permissoes = await prisma.permissoes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PermissoesFindUniqueArgs>(args: SelectSubset<T, PermissoesFindUniqueArgs<ExtArgs>>): Prisma__PermissoesClient<$Result.GetResult<Prisma.$PermissoesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Permissoes that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PermissoesFindUniqueOrThrowArgs} args - Arguments to find a Permissoes
     * @example
     * // Get one Permissoes
     * const permissoes = await prisma.permissoes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PermissoesFindUniqueOrThrowArgs>(args: SelectSubset<T, PermissoesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PermissoesClient<$Result.GetResult<Prisma.$PermissoesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Permissoes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissoesFindFirstArgs} args - Arguments to find a Permissoes
     * @example
     * // Get one Permissoes
     * const permissoes = await prisma.permissoes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PermissoesFindFirstArgs>(args?: SelectSubset<T, PermissoesFindFirstArgs<ExtArgs>>): Prisma__PermissoesClient<$Result.GetResult<Prisma.$PermissoesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Permissoes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissoesFindFirstOrThrowArgs} args - Arguments to find a Permissoes
     * @example
     * // Get one Permissoes
     * const permissoes = await prisma.permissoes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PermissoesFindFirstOrThrowArgs>(args?: SelectSubset<T, PermissoesFindFirstOrThrowArgs<ExtArgs>>): Prisma__PermissoesClient<$Result.GetResult<Prisma.$PermissoesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Permissoes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissoesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Permissoes
     * const permissoes = await prisma.permissoes.findMany()
     * 
     * // Get first 10 Permissoes
     * const permissoes = await prisma.permissoes.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const permissoesWithIdOnly = await prisma.permissoes.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PermissoesFindManyArgs>(args?: SelectSubset<T, PermissoesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermissoesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Permissoes.
     * @param {PermissoesCreateArgs} args - Arguments to create a Permissoes.
     * @example
     * // Create one Permissoes
     * const Permissoes = await prisma.permissoes.create({
     *   data: {
     *     // ... data to create a Permissoes
     *   }
     * })
     * 
     */
    create<T extends PermissoesCreateArgs>(args: SelectSubset<T, PermissoesCreateArgs<ExtArgs>>): Prisma__PermissoesClient<$Result.GetResult<Prisma.$PermissoesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Permissoes.
     * @param {PermissoesCreateManyArgs} args - Arguments to create many Permissoes.
     * @example
     * // Create many Permissoes
     * const permissoes = await prisma.permissoes.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PermissoesCreateManyArgs>(args?: SelectSubset<T, PermissoesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Permissoes and returns the data saved in the database.
     * @param {PermissoesCreateManyAndReturnArgs} args - Arguments to create many Permissoes.
     * @example
     * // Create many Permissoes
     * const permissoes = await prisma.permissoes.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Permissoes and only return the `id`
     * const permissoesWithIdOnly = await prisma.permissoes.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PermissoesCreateManyAndReturnArgs>(args?: SelectSubset<T, PermissoesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermissoesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Permissoes.
     * @param {PermissoesDeleteArgs} args - Arguments to delete one Permissoes.
     * @example
     * // Delete one Permissoes
     * const Permissoes = await prisma.permissoes.delete({
     *   where: {
     *     // ... filter to delete one Permissoes
     *   }
     * })
     * 
     */
    delete<T extends PermissoesDeleteArgs>(args: SelectSubset<T, PermissoesDeleteArgs<ExtArgs>>): Prisma__PermissoesClient<$Result.GetResult<Prisma.$PermissoesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Permissoes.
     * @param {PermissoesUpdateArgs} args - Arguments to update one Permissoes.
     * @example
     * // Update one Permissoes
     * const permissoes = await prisma.permissoes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PermissoesUpdateArgs>(args: SelectSubset<T, PermissoesUpdateArgs<ExtArgs>>): Prisma__PermissoesClient<$Result.GetResult<Prisma.$PermissoesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Permissoes.
     * @param {PermissoesDeleteManyArgs} args - Arguments to filter Permissoes to delete.
     * @example
     * // Delete a few Permissoes
     * const { count } = await prisma.permissoes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PermissoesDeleteManyArgs>(args?: SelectSubset<T, PermissoesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Permissoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissoesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Permissoes
     * const permissoes = await prisma.permissoes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PermissoesUpdateManyArgs>(args: SelectSubset<T, PermissoesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Permissoes and returns the data updated in the database.
     * @param {PermissoesUpdateManyAndReturnArgs} args - Arguments to update many Permissoes.
     * @example
     * // Update many Permissoes
     * const permissoes = await prisma.permissoes.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Permissoes and only return the `id`
     * const permissoesWithIdOnly = await prisma.permissoes.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PermissoesUpdateManyAndReturnArgs>(args: SelectSubset<T, PermissoesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermissoesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Permissoes.
     * @param {PermissoesUpsertArgs} args - Arguments to update or create a Permissoes.
     * @example
     * // Update or create a Permissoes
     * const permissoes = await prisma.permissoes.upsert({
     *   create: {
     *     // ... data to create a Permissoes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Permissoes we want to update
     *   }
     * })
     */
    upsert<T extends PermissoesUpsertArgs>(args: SelectSubset<T, PermissoesUpsertArgs<ExtArgs>>): Prisma__PermissoesClient<$Result.GetResult<Prisma.$PermissoesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Permissoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissoesCountArgs} args - Arguments to filter Permissoes to count.
     * @example
     * // Count the number of Permissoes
     * const count = await prisma.permissoes.count({
     *   where: {
     *     // ... the filter for the Permissoes we want to count
     *   }
     * })
    **/
    count<T extends PermissoesCountArgs>(
      args?: Subset<T, PermissoesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PermissoesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Permissoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissoesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PermissoesAggregateArgs>(args: Subset<T, PermissoesAggregateArgs>): Prisma.PrismaPromise<GetPermissoesAggregateType<T>>

    /**
     * Group by Permissoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissoesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PermissoesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PermissoesGroupByArgs['orderBy'] }
        : { orderBy?: PermissoesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PermissoesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPermissoesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Permissoes model
   */
  readonly fields: PermissoesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Permissoes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PermissoesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends Permissoes$usersArgs<ExtArgs> = {}>(args?: Subset<T, Permissoes$usersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Permissoes model
   */
  interface PermissoesFieldRefs {
    readonly id: FieldRef<"Permissoes", 'Int'>
    readonly nome: FieldRef<"Permissoes", 'String'>
    readonly descricao: FieldRef<"Permissoes", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Permissoes findUnique
   */
  export type PermissoesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permissoes
     */
    select?: PermissoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permissoes
     */
    omit?: PermissoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissoesInclude<ExtArgs> | null
    /**
     * Filter, which Permissoes to fetch.
     */
    where: PermissoesWhereUniqueInput
  }

  /**
   * Permissoes findUniqueOrThrow
   */
  export type PermissoesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permissoes
     */
    select?: PermissoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permissoes
     */
    omit?: PermissoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissoesInclude<ExtArgs> | null
    /**
     * Filter, which Permissoes to fetch.
     */
    where: PermissoesWhereUniqueInput
  }

  /**
   * Permissoes findFirst
   */
  export type PermissoesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permissoes
     */
    select?: PermissoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permissoes
     */
    omit?: PermissoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissoesInclude<ExtArgs> | null
    /**
     * Filter, which Permissoes to fetch.
     */
    where?: PermissoesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permissoes to fetch.
     */
    orderBy?: PermissoesOrderByWithRelationInput | PermissoesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Permissoes.
     */
    cursor?: PermissoesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Permissoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permissoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Permissoes.
     */
    distinct?: PermissoesScalarFieldEnum | PermissoesScalarFieldEnum[]
  }

  /**
   * Permissoes findFirstOrThrow
   */
  export type PermissoesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permissoes
     */
    select?: PermissoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permissoes
     */
    omit?: PermissoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissoesInclude<ExtArgs> | null
    /**
     * Filter, which Permissoes to fetch.
     */
    where?: PermissoesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permissoes to fetch.
     */
    orderBy?: PermissoesOrderByWithRelationInput | PermissoesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Permissoes.
     */
    cursor?: PermissoesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Permissoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permissoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Permissoes.
     */
    distinct?: PermissoesScalarFieldEnum | PermissoesScalarFieldEnum[]
  }

  /**
   * Permissoes findMany
   */
  export type PermissoesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permissoes
     */
    select?: PermissoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permissoes
     */
    omit?: PermissoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissoesInclude<ExtArgs> | null
    /**
     * Filter, which Permissoes to fetch.
     */
    where?: PermissoesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permissoes to fetch.
     */
    orderBy?: PermissoesOrderByWithRelationInput | PermissoesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Permissoes.
     */
    cursor?: PermissoesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Permissoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permissoes.
     */
    skip?: number
    distinct?: PermissoesScalarFieldEnum | PermissoesScalarFieldEnum[]
  }

  /**
   * Permissoes create
   */
  export type PermissoesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permissoes
     */
    select?: PermissoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permissoes
     */
    omit?: PermissoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissoesInclude<ExtArgs> | null
    /**
     * The data needed to create a Permissoes.
     */
    data: XOR<PermissoesCreateInput, PermissoesUncheckedCreateInput>
  }

  /**
   * Permissoes createMany
   */
  export type PermissoesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Permissoes.
     */
    data: PermissoesCreateManyInput | PermissoesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Permissoes createManyAndReturn
   */
  export type PermissoesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permissoes
     */
    select?: PermissoesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Permissoes
     */
    omit?: PermissoesOmit<ExtArgs> | null
    /**
     * The data used to create many Permissoes.
     */
    data: PermissoesCreateManyInput | PermissoesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Permissoes update
   */
  export type PermissoesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permissoes
     */
    select?: PermissoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permissoes
     */
    omit?: PermissoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissoesInclude<ExtArgs> | null
    /**
     * The data needed to update a Permissoes.
     */
    data: XOR<PermissoesUpdateInput, PermissoesUncheckedUpdateInput>
    /**
     * Choose, which Permissoes to update.
     */
    where: PermissoesWhereUniqueInput
  }

  /**
   * Permissoes updateMany
   */
  export type PermissoesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Permissoes.
     */
    data: XOR<PermissoesUpdateManyMutationInput, PermissoesUncheckedUpdateManyInput>
    /**
     * Filter which Permissoes to update
     */
    where?: PermissoesWhereInput
    /**
     * Limit how many Permissoes to update.
     */
    limit?: number
  }

  /**
   * Permissoes updateManyAndReturn
   */
  export type PermissoesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permissoes
     */
    select?: PermissoesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Permissoes
     */
    omit?: PermissoesOmit<ExtArgs> | null
    /**
     * The data used to update Permissoes.
     */
    data: XOR<PermissoesUpdateManyMutationInput, PermissoesUncheckedUpdateManyInput>
    /**
     * Filter which Permissoes to update
     */
    where?: PermissoesWhereInput
    /**
     * Limit how many Permissoes to update.
     */
    limit?: number
  }

  /**
   * Permissoes upsert
   */
  export type PermissoesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permissoes
     */
    select?: PermissoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permissoes
     */
    omit?: PermissoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissoesInclude<ExtArgs> | null
    /**
     * The filter to search for the Permissoes to update in case it exists.
     */
    where: PermissoesWhereUniqueInput
    /**
     * In case the Permissoes found by the `where` argument doesn't exist, create a new Permissoes with this data.
     */
    create: XOR<PermissoesCreateInput, PermissoesUncheckedCreateInput>
    /**
     * In case the Permissoes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PermissoesUpdateInput, PermissoesUncheckedUpdateInput>
  }

  /**
   * Permissoes delete
   */
  export type PermissoesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permissoes
     */
    select?: PermissoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permissoes
     */
    omit?: PermissoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissoesInclude<ExtArgs> | null
    /**
     * Filter which Permissoes to delete.
     */
    where: PermissoesWhereUniqueInput
  }

  /**
   * Permissoes deleteMany
   */
  export type PermissoesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Permissoes to delete
     */
    where?: PermissoesWhereInput
    /**
     * Limit how many Permissoes to delete.
     */
    limit?: number
  }

  /**
   * Permissoes.users
   */
  export type Permissoes$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * Permissoes without action
   */
  export type PermissoesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permissoes
     */
    select?: PermissoesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permissoes
     */
    omit?: PermissoesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissoesInclude<ExtArgs> | null
  }


  /**
   * Model Cargo
   */

  export type AggregateCargo = {
    _count: CargoCountAggregateOutputType | null
    _avg: CargoAvgAggregateOutputType | null
    _sum: CargoSumAggregateOutputType | null
    _min: CargoMinAggregateOutputType | null
    _max: CargoMaxAggregateOutputType | null
  }

  export type CargoAvgAggregateOutputType = {
    id: number | null
  }

  export type CargoSumAggregateOutputType = {
    id: number | null
  }

  export type CargoMinAggregateOutputType = {
    id: number | null
    nome: string | null
  }

  export type CargoMaxAggregateOutputType = {
    id: number | null
    nome: string | null
  }

  export type CargoCountAggregateOutputType = {
    id: number
    nome: number
    _all: number
  }


  export type CargoAvgAggregateInputType = {
    id?: true
  }

  export type CargoSumAggregateInputType = {
    id?: true
  }

  export type CargoMinAggregateInputType = {
    id?: true
    nome?: true
  }

  export type CargoMaxAggregateInputType = {
    id?: true
    nome?: true
  }

  export type CargoCountAggregateInputType = {
    id?: true
    nome?: true
    _all?: true
  }

  export type CargoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Cargo to aggregate.
     */
    where?: CargoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cargos to fetch.
     */
    orderBy?: CargoOrderByWithRelationInput | CargoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CargoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cargos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cargos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Cargos
    **/
    _count?: true | CargoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CargoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CargoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CargoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CargoMaxAggregateInputType
  }

  export type GetCargoAggregateType<T extends CargoAggregateArgs> = {
        [P in keyof T & keyof AggregateCargo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCargo[P]>
      : GetScalarType<T[P], AggregateCargo[P]>
  }




  export type CargoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CargoWhereInput
    orderBy?: CargoOrderByWithAggregationInput | CargoOrderByWithAggregationInput[]
    by: CargoScalarFieldEnum[] | CargoScalarFieldEnum
    having?: CargoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CargoCountAggregateInputType | true
    _avg?: CargoAvgAggregateInputType
    _sum?: CargoSumAggregateInputType
    _min?: CargoMinAggregateInputType
    _max?: CargoMaxAggregateInputType
  }

  export type CargoGroupByOutputType = {
    id: number
    nome: string
    _count: CargoCountAggregateOutputType | null
    _avg: CargoAvgAggregateOutputType | null
    _sum: CargoSumAggregateOutputType | null
    _min: CargoMinAggregateOutputType | null
    _max: CargoMaxAggregateOutputType | null
  }

  type GetCargoGroupByPayload<T extends CargoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CargoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CargoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CargoGroupByOutputType[P]>
            : GetScalarType<T[P], CargoGroupByOutputType[P]>
        }
      >
    >


  export type CargoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    users?: boolean | Cargo$usersArgs<ExtArgs>
    _count?: boolean | CargoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cargo"]>

  export type CargoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
  }, ExtArgs["result"]["cargo"]>

  export type CargoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
  }, ExtArgs["result"]["cargo"]>

  export type CargoSelectScalar = {
    id?: boolean
    nome?: boolean
  }

  export type CargoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nome", ExtArgs["result"]["cargo"]>
  export type CargoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | Cargo$usersArgs<ExtArgs>
    _count?: boolean | CargoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CargoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type CargoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $CargoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Cargo"
    objects: {
      users: Prisma.$UserPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
    }, ExtArgs["result"]["cargo"]>
    composites: {}
  }

  type CargoGetPayload<S extends boolean | null | undefined | CargoDefaultArgs> = $Result.GetResult<Prisma.$CargoPayload, S>

  type CargoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CargoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CargoCountAggregateInputType | true
    }

  export interface CargoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Cargo'], meta: { name: 'Cargo' } }
    /**
     * Find zero or one Cargo that matches the filter.
     * @param {CargoFindUniqueArgs} args - Arguments to find a Cargo
     * @example
     * // Get one Cargo
     * const cargo = await prisma.cargo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CargoFindUniqueArgs>(args: SelectSubset<T, CargoFindUniqueArgs<ExtArgs>>): Prisma__CargoClient<$Result.GetResult<Prisma.$CargoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Cargo that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CargoFindUniqueOrThrowArgs} args - Arguments to find a Cargo
     * @example
     * // Get one Cargo
     * const cargo = await prisma.cargo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CargoFindUniqueOrThrowArgs>(args: SelectSubset<T, CargoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CargoClient<$Result.GetResult<Prisma.$CargoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cargo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CargoFindFirstArgs} args - Arguments to find a Cargo
     * @example
     * // Get one Cargo
     * const cargo = await prisma.cargo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CargoFindFirstArgs>(args?: SelectSubset<T, CargoFindFirstArgs<ExtArgs>>): Prisma__CargoClient<$Result.GetResult<Prisma.$CargoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cargo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CargoFindFirstOrThrowArgs} args - Arguments to find a Cargo
     * @example
     * // Get one Cargo
     * const cargo = await prisma.cargo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CargoFindFirstOrThrowArgs>(args?: SelectSubset<T, CargoFindFirstOrThrowArgs<ExtArgs>>): Prisma__CargoClient<$Result.GetResult<Prisma.$CargoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Cargos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CargoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Cargos
     * const cargos = await prisma.cargo.findMany()
     * 
     * // Get first 10 Cargos
     * const cargos = await prisma.cargo.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cargoWithIdOnly = await prisma.cargo.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CargoFindManyArgs>(args?: SelectSubset<T, CargoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CargoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Cargo.
     * @param {CargoCreateArgs} args - Arguments to create a Cargo.
     * @example
     * // Create one Cargo
     * const Cargo = await prisma.cargo.create({
     *   data: {
     *     // ... data to create a Cargo
     *   }
     * })
     * 
     */
    create<T extends CargoCreateArgs>(args: SelectSubset<T, CargoCreateArgs<ExtArgs>>): Prisma__CargoClient<$Result.GetResult<Prisma.$CargoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Cargos.
     * @param {CargoCreateManyArgs} args - Arguments to create many Cargos.
     * @example
     * // Create many Cargos
     * const cargo = await prisma.cargo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CargoCreateManyArgs>(args?: SelectSubset<T, CargoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Cargos and returns the data saved in the database.
     * @param {CargoCreateManyAndReturnArgs} args - Arguments to create many Cargos.
     * @example
     * // Create many Cargos
     * const cargo = await prisma.cargo.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Cargos and only return the `id`
     * const cargoWithIdOnly = await prisma.cargo.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CargoCreateManyAndReturnArgs>(args?: SelectSubset<T, CargoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CargoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Cargo.
     * @param {CargoDeleteArgs} args - Arguments to delete one Cargo.
     * @example
     * // Delete one Cargo
     * const Cargo = await prisma.cargo.delete({
     *   where: {
     *     // ... filter to delete one Cargo
     *   }
     * })
     * 
     */
    delete<T extends CargoDeleteArgs>(args: SelectSubset<T, CargoDeleteArgs<ExtArgs>>): Prisma__CargoClient<$Result.GetResult<Prisma.$CargoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Cargo.
     * @param {CargoUpdateArgs} args - Arguments to update one Cargo.
     * @example
     * // Update one Cargo
     * const cargo = await prisma.cargo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CargoUpdateArgs>(args: SelectSubset<T, CargoUpdateArgs<ExtArgs>>): Prisma__CargoClient<$Result.GetResult<Prisma.$CargoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Cargos.
     * @param {CargoDeleteManyArgs} args - Arguments to filter Cargos to delete.
     * @example
     * // Delete a few Cargos
     * const { count } = await prisma.cargo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CargoDeleteManyArgs>(args?: SelectSubset<T, CargoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cargos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CargoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Cargos
     * const cargo = await prisma.cargo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CargoUpdateManyArgs>(args: SelectSubset<T, CargoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cargos and returns the data updated in the database.
     * @param {CargoUpdateManyAndReturnArgs} args - Arguments to update many Cargos.
     * @example
     * // Update many Cargos
     * const cargo = await prisma.cargo.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Cargos and only return the `id`
     * const cargoWithIdOnly = await prisma.cargo.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CargoUpdateManyAndReturnArgs>(args: SelectSubset<T, CargoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CargoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Cargo.
     * @param {CargoUpsertArgs} args - Arguments to update or create a Cargo.
     * @example
     * // Update or create a Cargo
     * const cargo = await prisma.cargo.upsert({
     *   create: {
     *     // ... data to create a Cargo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Cargo we want to update
     *   }
     * })
     */
    upsert<T extends CargoUpsertArgs>(args: SelectSubset<T, CargoUpsertArgs<ExtArgs>>): Prisma__CargoClient<$Result.GetResult<Prisma.$CargoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Cargos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CargoCountArgs} args - Arguments to filter Cargos to count.
     * @example
     * // Count the number of Cargos
     * const count = await prisma.cargo.count({
     *   where: {
     *     // ... the filter for the Cargos we want to count
     *   }
     * })
    **/
    count<T extends CargoCountArgs>(
      args?: Subset<T, CargoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CargoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Cargo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CargoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CargoAggregateArgs>(args: Subset<T, CargoAggregateArgs>): Prisma.PrismaPromise<GetCargoAggregateType<T>>

    /**
     * Group by Cargo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CargoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CargoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CargoGroupByArgs['orderBy'] }
        : { orderBy?: CargoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CargoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCargoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Cargo model
   */
  readonly fields: CargoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Cargo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CargoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends Cargo$usersArgs<ExtArgs> = {}>(args?: Subset<T, Cargo$usersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Cargo model
   */
  interface CargoFieldRefs {
    readonly id: FieldRef<"Cargo", 'Int'>
    readonly nome: FieldRef<"Cargo", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Cargo findUnique
   */
  export type CargoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cargo
     */
    select?: CargoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cargo
     */
    omit?: CargoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CargoInclude<ExtArgs> | null
    /**
     * Filter, which Cargo to fetch.
     */
    where: CargoWhereUniqueInput
  }

  /**
   * Cargo findUniqueOrThrow
   */
  export type CargoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cargo
     */
    select?: CargoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cargo
     */
    omit?: CargoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CargoInclude<ExtArgs> | null
    /**
     * Filter, which Cargo to fetch.
     */
    where: CargoWhereUniqueInput
  }

  /**
   * Cargo findFirst
   */
  export type CargoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cargo
     */
    select?: CargoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cargo
     */
    omit?: CargoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CargoInclude<ExtArgs> | null
    /**
     * Filter, which Cargo to fetch.
     */
    where?: CargoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cargos to fetch.
     */
    orderBy?: CargoOrderByWithRelationInput | CargoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Cargos.
     */
    cursor?: CargoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cargos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cargos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Cargos.
     */
    distinct?: CargoScalarFieldEnum | CargoScalarFieldEnum[]
  }

  /**
   * Cargo findFirstOrThrow
   */
  export type CargoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cargo
     */
    select?: CargoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cargo
     */
    omit?: CargoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CargoInclude<ExtArgs> | null
    /**
     * Filter, which Cargo to fetch.
     */
    where?: CargoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cargos to fetch.
     */
    orderBy?: CargoOrderByWithRelationInput | CargoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Cargos.
     */
    cursor?: CargoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cargos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cargos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Cargos.
     */
    distinct?: CargoScalarFieldEnum | CargoScalarFieldEnum[]
  }

  /**
   * Cargo findMany
   */
  export type CargoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cargo
     */
    select?: CargoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cargo
     */
    omit?: CargoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CargoInclude<ExtArgs> | null
    /**
     * Filter, which Cargos to fetch.
     */
    where?: CargoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cargos to fetch.
     */
    orderBy?: CargoOrderByWithRelationInput | CargoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Cargos.
     */
    cursor?: CargoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cargos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cargos.
     */
    skip?: number
    distinct?: CargoScalarFieldEnum | CargoScalarFieldEnum[]
  }

  /**
   * Cargo create
   */
  export type CargoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cargo
     */
    select?: CargoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cargo
     */
    omit?: CargoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CargoInclude<ExtArgs> | null
    /**
     * The data needed to create a Cargo.
     */
    data: XOR<CargoCreateInput, CargoUncheckedCreateInput>
  }

  /**
   * Cargo createMany
   */
  export type CargoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Cargos.
     */
    data: CargoCreateManyInput | CargoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Cargo createManyAndReturn
   */
  export type CargoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cargo
     */
    select?: CargoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Cargo
     */
    omit?: CargoOmit<ExtArgs> | null
    /**
     * The data used to create many Cargos.
     */
    data: CargoCreateManyInput | CargoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Cargo update
   */
  export type CargoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cargo
     */
    select?: CargoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cargo
     */
    omit?: CargoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CargoInclude<ExtArgs> | null
    /**
     * The data needed to update a Cargo.
     */
    data: XOR<CargoUpdateInput, CargoUncheckedUpdateInput>
    /**
     * Choose, which Cargo to update.
     */
    where: CargoWhereUniqueInput
  }

  /**
   * Cargo updateMany
   */
  export type CargoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Cargos.
     */
    data: XOR<CargoUpdateManyMutationInput, CargoUncheckedUpdateManyInput>
    /**
     * Filter which Cargos to update
     */
    where?: CargoWhereInput
    /**
     * Limit how many Cargos to update.
     */
    limit?: number
  }

  /**
   * Cargo updateManyAndReturn
   */
  export type CargoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cargo
     */
    select?: CargoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Cargo
     */
    omit?: CargoOmit<ExtArgs> | null
    /**
     * The data used to update Cargos.
     */
    data: XOR<CargoUpdateManyMutationInput, CargoUncheckedUpdateManyInput>
    /**
     * Filter which Cargos to update
     */
    where?: CargoWhereInput
    /**
     * Limit how many Cargos to update.
     */
    limit?: number
  }

  /**
   * Cargo upsert
   */
  export type CargoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cargo
     */
    select?: CargoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cargo
     */
    omit?: CargoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CargoInclude<ExtArgs> | null
    /**
     * The filter to search for the Cargo to update in case it exists.
     */
    where: CargoWhereUniqueInput
    /**
     * In case the Cargo found by the `where` argument doesn't exist, create a new Cargo with this data.
     */
    create: XOR<CargoCreateInput, CargoUncheckedCreateInput>
    /**
     * In case the Cargo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CargoUpdateInput, CargoUncheckedUpdateInput>
  }

  /**
   * Cargo delete
   */
  export type CargoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cargo
     */
    select?: CargoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cargo
     */
    omit?: CargoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CargoInclude<ExtArgs> | null
    /**
     * Filter which Cargo to delete.
     */
    where: CargoWhereUniqueInput
  }

  /**
   * Cargo deleteMany
   */
  export type CargoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Cargos to delete
     */
    where?: CargoWhereInput
    /**
     * Limit how many Cargos to delete.
     */
    limit?: number
  }

  /**
   * Cargo.users
   */
  export type Cargo$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * Cargo without action
   */
  export type CargoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cargo
     */
    select?: CargoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cargo
     */
    omit?: CargoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CargoInclude<ExtArgs> | null
  }


  /**
   * Model Registro
   */

  export type AggregateRegistro = {
    _count: RegistroCountAggregateOutputType | null
    _avg: RegistroAvgAggregateOutputType | null
    _sum: RegistroSumAggregateOutputType | null
    _min: RegistroMinAggregateOutputType | null
    _max: RegistroMaxAggregateOutputType | null
  }

  export type RegistroAvgAggregateOutputType = {
    id: number | null
    tabelaID: number | null
  }

  export type RegistroSumAggregateOutputType = {
    id: number | null
    tabelaID: number | null
  }

  export type RegistroMinAggregateOutputType = {
    id: number | null
    nome_razao: string | null
    apelido: string | null
    tipo: $Enums.TipoRegistro | null
    tabelaID: number | null
    email: string | null
    telefone: string | null
    criadoEm: Date | null
  }

  export type RegistroMaxAggregateOutputType = {
    id: number | null
    nome_razao: string | null
    apelido: string | null
    tipo: $Enums.TipoRegistro | null
    tabelaID: number | null
    email: string | null
    telefone: string | null
    criadoEm: Date | null
  }

  export type RegistroCountAggregateOutputType = {
    id: number
    nome_razao: number
    apelido: number
    tipo: number
    tabelaID: number
    email: number
    telefone: number
    criadoEm: number
    _all: number
  }


  export type RegistroAvgAggregateInputType = {
    id?: true
    tabelaID?: true
  }

  export type RegistroSumAggregateInputType = {
    id?: true
    tabelaID?: true
  }

  export type RegistroMinAggregateInputType = {
    id?: true
    nome_razao?: true
    apelido?: true
    tipo?: true
    tabelaID?: true
    email?: true
    telefone?: true
    criadoEm?: true
  }

  export type RegistroMaxAggregateInputType = {
    id?: true
    nome_razao?: true
    apelido?: true
    tipo?: true
    tabelaID?: true
    email?: true
    telefone?: true
    criadoEm?: true
  }

  export type RegistroCountAggregateInputType = {
    id?: true
    nome_razao?: true
    apelido?: true
    tipo?: true
    tabelaID?: true
    email?: true
    telefone?: true
    criadoEm?: true
    _all?: true
  }

  export type RegistroAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Registro to aggregate.
     */
    where?: RegistroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Registros to fetch.
     */
    orderBy?: RegistroOrderByWithRelationInput | RegistroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RegistroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Registros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Registros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Registros
    **/
    _count?: true | RegistroCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RegistroAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RegistroSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RegistroMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RegistroMaxAggregateInputType
  }

  export type GetRegistroAggregateType<T extends RegistroAggregateArgs> = {
        [P in keyof T & keyof AggregateRegistro]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRegistro[P]>
      : GetScalarType<T[P], AggregateRegistro[P]>
  }




  export type RegistroGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RegistroWhereInput
    orderBy?: RegistroOrderByWithAggregationInput | RegistroOrderByWithAggregationInput[]
    by: RegistroScalarFieldEnum[] | RegistroScalarFieldEnum
    having?: RegistroScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RegistroCountAggregateInputType | true
    _avg?: RegistroAvgAggregateInputType
    _sum?: RegistroSumAggregateInputType
    _min?: RegistroMinAggregateInputType
    _max?: RegistroMaxAggregateInputType
  }

  export type RegistroGroupByOutputType = {
    id: number
    nome_razao: string
    apelido: string | null
    tipo: $Enums.TipoRegistro
    tabelaID: number
    email: string | null
    telefone: string | null
    criadoEm: Date
    _count: RegistroCountAggregateOutputType | null
    _avg: RegistroAvgAggregateOutputType | null
    _sum: RegistroSumAggregateOutputType | null
    _min: RegistroMinAggregateOutputType | null
    _max: RegistroMaxAggregateOutputType | null
  }

  type GetRegistroGroupByPayload<T extends RegistroGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RegistroGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RegistroGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RegistroGroupByOutputType[P]>
            : GetScalarType<T[P], RegistroGroupByOutputType[P]>
        }
      >
    >


  export type RegistroSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome_razao?: boolean
    apelido?: boolean
    tipo?: boolean
    tabelaID?: boolean
    email?: boolean
    telefone?: boolean
    criadoEm?: boolean
    dados_pagamento?: boolean | Registro$dados_pagamentoArgs<ExtArgs>
    endereco?: boolean | Registro$enderecoArgs<ExtArgs>
    pedidos?: boolean | Registro$pedidosArgs<ExtArgs>
    fisica?: boolean | Registro$fisicaArgs<ExtArgs>
    juridica?: boolean | Registro$juridicaArgs<ExtArgs>
    tabela?: boolean | TabelaDefaultArgs<ExtArgs>
    saldo?: boolean | Registro$saldoArgs<ExtArgs>
    _count?: boolean | RegistroCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["registro"]>

  export type RegistroSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome_razao?: boolean
    apelido?: boolean
    tipo?: boolean
    tabelaID?: boolean
    email?: boolean
    telefone?: boolean
    criadoEm?: boolean
    tabela?: boolean | TabelaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["registro"]>

  export type RegistroSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome_razao?: boolean
    apelido?: boolean
    tipo?: boolean
    tabelaID?: boolean
    email?: boolean
    telefone?: boolean
    criadoEm?: boolean
    tabela?: boolean | TabelaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["registro"]>

  export type RegistroSelectScalar = {
    id?: boolean
    nome_razao?: boolean
    apelido?: boolean
    tipo?: boolean
    tabelaID?: boolean
    email?: boolean
    telefone?: boolean
    criadoEm?: boolean
  }

  export type RegistroOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nome_razao" | "apelido" | "tipo" | "tabelaID" | "email" | "telefone" | "criadoEm", ExtArgs["result"]["registro"]>
  export type RegistroInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    dados_pagamento?: boolean | Registro$dados_pagamentoArgs<ExtArgs>
    endereco?: boolean | Registro$enderecoArgs<ExtArgs>
    pedidos?: boolean | Registro$pedidosArgs<ExtArgs>
    fisica?: boolean | Registro$fisicaArgs<ExtArgs>
    juridica?: boolean | Registro$juridicaArgs<ExtArgs>
    tabela?: boolean | TabelaDefaultArgs<ExtArgs>
    saldo?: boolean | Registro$saldoArgs<ExtArgs>
    _count?: boolean | RegistroCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type RegistroIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tabela?: boolean | TabelaDefaultArgs<ExtArgs>
  }
  export type RegistroIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tabela?: boolean | TabelaDefaultArgs<ExtArgs>
  }

  export type $RegistroPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Registro"
    objects: {
      dados_pagamento: Prisma.$DadosPagamentoPayload<ExtArgs> | null
      endereco: Prisma.$EnderecoPayload<ExtArgs> | null
      pedidos: Prisma.$PedidoPayload<ExtArgs>[]
      fisica: Prisma.$PessoaFisicaPayload<ExtArgs> | null
      juridica: Prisma.$PessoaJuridicaPayload<ExtArgs> | null
      tabela: Prisma.$TabelaPayload<ExtArgs>
      saldo: Prisma.$SaldoFinanceiroPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome_razao: string
      apelido: string | null
      tipo: $Enums.TipoRegistro
      tabelaID: number
      email: string | null
      telefone: string | null
      criadoEm: Date
    }, ExtArgs["result"]["registro"]>
    composites: {}
  }

  type RegistroGetPayload<S extends boolean | null | undefined | RegistroDefaultArgs> = $Result.GetResult<Prisma.$RegistroPayload, S>

  type RegistroCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RegistroFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RegistroCountAggregateInputType | true
    }

  export interface RegistroDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Registro'], meta: { name: 'Registro' } }
    /**
     * Find zero or one Registro that matches the filter.
     * @param {RegistroFindUniqueArgs} args - Arguments to find a Registro
     * @example
     * // Get one Registro
     * const registro = await prisma.registro.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RegistroFindUniqueArgs>(args: SelectSubset<T, RegistroFindUniqueArgs<ExtArgs>>): Prisma__RegistroClient<$Result.GetResult<Prisma.$RegistroPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Registro that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RegistroFindUniqueOrThrowArgs} args - Arguments to find a Registro
     * @example
     * // Get one Registro
     * const registro = await prisma.registro.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RegistroFindUniqueOrThrowArgs>(args: SelectSubset<T, RegistroFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RegistroClient<$Result.GetResult<Prisma.$RegistroPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Registro that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroFindFirstArgs} args - Arguments to find a Registro
     * @example
     * // Get one Registro
     * const registro = await prisma.registro.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RegistroFindFirstArgs>(args?: SelectSubset<T, RegistroFindFirstArgs<ExtArgs>>): Prisma__RegistroClient<$Result.GetResult<Prisma.$RegistroPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Registro that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroFindFirstOrThrowArgs} args - Arguments to find a Registro
     * @example
     * // Get one Registro
     * const registro = await prisma.registro.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RegistroFindFirstOrThrowArgs>(args?: SelectSubset<T, RegistroFindFirstOrThrowArgs<ExtArgs>>): Prisma__RegistroClient<$Result.GetResult<Prisma.$RegistroPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Registros that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Registros
     * const registros = await prisma.registro.findMany()
     * 
     * // Get first 10 Registros
     * const registros = await prisma.registro.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const registroWithIdOnly = await prisma.registro.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RegistroFindManyArgs>(args?: SelectSubset<T, RegistroFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegistroPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Registro.
     * @param {RegistroCreateArgs} args - Arguments to create a Registro.
     * @example
     * // Create one Registro
     * const Registro = await prisma.registro.create({
     *   data: {
     *     // ... data to create a Registro
     *   }
     * })
     * 
     */
    create<T extends RegistroCreateArgs>(args: SelectSubset<T, RegistroCreateArgs<ExtArgs>>): Prisma__RegistroClient<$Result.GetResult<Prisma.$RegistroPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Registros.
     * @param {RegistroCreateManyArgs} args - Arguments to create many Registros.
     * @example
     * // Create many Registros
     * const registro = await prisma.registro.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RegistroCreateManyArgs>(args?: SelectSubset<T, RegistroCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Registros and returns the data saved in the database.
     * @param {RegistroCreateManyAndReturnArgs} args - Arguments to create many Registros.
     * @example
     * // Create many Registros
     * const registro = await prisma.registro.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Registros and only return the `id`
     * const registroWithIdOnly = await prisma.registro.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RegistroCreateManyAndReturnArgs>(args?: SelectSubset<T, RegistroCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegistroPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Registro.
     * @param {RegistroDeleteArgs} args - Arguments to delete one Registro.
     * @example
     * // Delete one Registro
     * const Registro = await prisma.registro.delete({
     *   where: {
     *     // ... filter to delete one Registro
     *   }
     * })
     * 
     */
    delete<T extends RegistroDeleteArgs>(args: SelectSubset<T, RegistroDeleteArgs<ExtArgs>>): Prisma__RegistroClient<$Result.GetResult<Prisma.$RegistroPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Registro.
     * @param {RegistroUpdateArgs} args - Arguments to update one Registro.
     * @example
     * // Update one Registro
     * const registro = await prisma.registro.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RegistroUpdateArgs>(args: SelectSubset<T, RegistroUpdateArgs<ExtArgs>>): Prisma__RegistroClient<$Result.GetResult<Prisma.$RegistroPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Registros.
     * @param {RegistroDeleteManyArgs} args - Arguments to filter Registros to delete.
     * @example
     * // Delete a few Registros
     * const { count } = await prisma.registro.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RegistroDeleteManyArgs>(args?: SelectSubset<T, RegistroDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Registros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Registros
     * const registro = await prisma.registro.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RegistroUpdateManyArgs>(args: SelectSubset<T, RegistroUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Registros and returns the data updated in the database.
     * @param {RegistroUpdateManyAndReturnArgs} args - Arguments to update many Registros.
     * @example
     * // Update many Registros
     * const registro = await prisma.registro.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Registros and only return the `id`
     * const registroWithIdOnly = await prisma.registro.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RegistroUpdateManyAndReturnArgs>(args: SelectSubset<T, RegistroUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegistroPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Registro.
     * @param {RegistroUpsertArgs} args - Arguments to update or create a Registro.
     * @example
     * // Update or create a Registro
     * const registro = await prisma.registro.upsert({
     *   create: {
     *     // ... data to create a Registro
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Registro we want to update
     *   }
     * })
     */
    upsert<T extends RegistroUpsertArgs>(args: SelectSubset<T, RegistroUpsertArgs<ExtArgs>>): Prisma__RegistroClient<$Result.GetResult<Prisma.$RegistroPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Registros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroCountArgs} args - Arguments to filter Registros to count.
     * @example
     * // Count the number of Registros
     * const count = await prisma.registro.count({
     *   where: {
     *     // ... the filter for the Registros we want to count
     *   }
     * })
    **/
    count<T extends RegistroCountArgs>(
      args?: Subset<T, RegistroCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RegistroCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Registro.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RegistroAggregateArgs>(args: Subset<T, RegistroAggregateArgs>): Prisma.PrismaPromise<GetRegistroAggregateType<T>>

    /**
     * Group by Registro.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistroGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RegistroGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RegistroGroupByArgs['orderBy'] }
        : { orderBy?: RegistroGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RegistroGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRegistroGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Registro model
   */
  readonly fields: RegistroFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Registro.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RegistroClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    dados_pagamento<T extends Registro$dados_pagamentoArgs<ExtArgs> = {}>(args?: Subset<T, Registro$dados_pagamentoArgs<ExtArgs>>): Prisma__DadosPagamentoClient<$Result.GetResult<Prisma.$DadosPagamentoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    endereco<T extends Registro$enderecoArgs<ExtArgs> = {}>(args?: Subset<T, Registro$enderecoArgs<ExtArgs>>): Prisma__EnderecoClient<$Result.GetResult<Prisma.$EnderecoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    pedidos<T extends Registro$pedidosArgs<ExtArgs> = {}>(args?: Subset<T, Registro$pedidosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    fisica<T extends Registro$fisicaArgs<ExtArgs> = {}>(args?: Subset<T, Registro$fisicaArgs<ExtArgs>>): Prisma__PessoaFisicaClient<$Result.GetResult<Prisma.$PessoaFisicaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    juridica<T extends Registro$juridicaArgs<ExtArgs> = {}>(args?: Subset<T, Registro$juridicaArgs<ExtArgs>>): Prisma__PessoaJuridicaClient<$Result.GetResult<Prisma.$PessoaJuridicaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    tabela<T extends TabelaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TabelaDefaultArgs<ExtArgs>>): Prisma__TabelaClient<$Result.GetResult<Prisma.$TabelaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    saldo<T extends Registro$saldoArgs<ExtArgs> = {}>(args?: Subset<T, Registro$saldoArgs<ExtArgs>>): Prisma__SaldoFinanceiroClient<$Result.GetResult<Prisma.$SaldoFinanceiroPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Registro model
   */
  interface RegistroFieldRefs {
    readonly id: FieldRef<"Registro", 'Int'>
    readonly nome_razao: FieldRef<"Registro", 'String'>
    readonly apelido: FieldRef<"Registro", 'String'>
    readonly tipo: FieldRef<"Registro", 'TipoRegistro'>
    readonly tabelaID: FieldRef<"Registro", 'Int'>
    readonly email: FieldRef<"Registro", 'String'>
    readonly telefone: FieldRef<"Registro", 'String'>
    readonly criadoEm: FieldRef<"Registro", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Registro findUnique
   */
  export type RegistroFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Registro
     */
    select?: RegistroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Registro
     */
    omit?: RegistroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroInclude<ExtArgs> | null
    /**
     * Filter, which Registro to fetch.
     */
    where: RegistroWhereUniqueInput
  }

  /**
   * Registro findUniqueOrThrow
   */
  export type RegistroFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Registro
     */
    select?: RegistroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Registro
     */
    omit?: RegistroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroInclude<ExtArgs> | null
    /**
     * Filter, which Registro to fetch.
     */
    where: RegistroWhereUniqueInput
  }

  /**
   * Registro findFirst
   */
  export type RegistroFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Registro
     */
    select?: RegistroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Registro
     */
    omit?: RegistroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroInclude<ExtArgs> | null
    /**
     * Filter, which Registro to fetch.
     */
    where?: RegistroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Registros to fetch.
     */
    orderBy?: RegistroOrderByWithRelationInput | RegistroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Registros.
     */
    cursor?: RegistroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Registros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Registros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Registros.
     */
    distinct?: RegistroScalarFieldEnum | RegistroScalarFieldEnum[]
  }

  /**
   * Registro findFirstOrThrow
   */
  export type RegistroFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Registro
     */
    select?: RegistroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Registro
     */
    omit?: RegistroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroInclude<ExtArgs> | null
    /**
     * Filter, which Registro to fetch.
     */
    where?: RegistroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Registros to fetch.
     */
    orderBy?: RegistroOrderByWithRelationInput | RegistroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Registros.
     */
    cursor?: RegistroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Registros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Registros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Registros.
     */
    distinct?: RegistroScalarFieldEnum | RegistroScalarFieldEnum[]
  }

  /**
   * Registro findMany
   */
  export type RegistroFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Registro
     */
    select?: RegistroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Registro
     */
    omit?: RegistroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroInclude<ExtArgs> | null
    /**
     * Filter, which Registros to fetch.
     */
    where?: RegistroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Registros to fetch.
     */
    orderBy?: RegistroOrderByWithRelationInput | RegistroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Registros.
     */
    cursor?: RegistroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Registros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Registros.
     */
    skip?: number
    distinct?: RegistroScalarFieldEnum | RegistroScalarFieldEnum[]
  }

  /**
   * Registro create
   */
  export type RegistroCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Registro
     */
    select?: RegistroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Registro
     */
    omit?: RegistroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroInclude<ExtArgs> | null
    /**
     * The data needed to create a Registro.
     */
    data: XOR<RegistroCreateInput, RegistroUncheckedCreateInput>
  }

  /**
   * Registro createMany
   */
  export type RegistroCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Registros.
     */
    data: RegistroCreateManyInput | RegistroCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Registro createManyAndReturn
   */
  export type RegistroCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Registro
     */
    select?: RegistroSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Registro
     */
    omit?: RegistroOmit<ExtArgs> | null
    /**
     * The data used to create many Registros.
     */
    data: RegistroCreateManyInput | RegistroCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Registro update
   */
  export type RegistroUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Registro
     */
    select?: RegistroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Registro
     */
    omit?: RegistroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroInclude<ExtArgs> | null
    /**
     * The data needed to update a Registro.
     */
    data: XOR<RegistroUpdateInput, RegistroUncheckedUpdateInput>
    /**
     * Choose, which Registro to update.
     */
    where: RegistroWhereUniqueInput
  }

  /**
   * Registro updateMany
   */
  export type RegistroUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Registros.
     */
    data: XOR<RegistroUpdateManyMutationInput, RegistroUncheckedUpdateManyInput>
    /**
     * Filter which Registros to update
     */
    where?: RegistroWhereInput
    /**
     * Limit how many Registros to update.
     */
    limit?: number
  }

  /**
   * Registro updateManyAndReturn
   */
  export type RegistroUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Registro
     */
    select?: RegistroSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Registro
     */
    omit?: RegistroOmit<ExtArgs> | null
    /**
     * The data used to update Registros.
     */
    data: XOR<RegistroUpdateManyMutationInput, RegistroUncheckedUpdateManyInput>
    /**
     * Filter which Registros to update
     */
    where?: RegistroWhereInput
    /**
     * Limit how many Registros to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Registro upsert
   */
  export type RegistroUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Registro
     */
    select?: RegistroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Registro
     */
    omit?: RegistroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroInclude<ExtArgs> | null
    /**
     * The filter to search for the Registro to update in case it exists.
     */
    where: RegistroWhereUniqueInput
    /**
     * In case the Registro found by the `where` argument doesn't exist, create a new Registro with this data.
     */
    create: XOR<RegistroCreateInput, RegistroUncheckedCreateInput>
    /**
     * In case the Registro was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RegistroUpdateInput, RegistroUncheckedUpdateInput>
  }

  /**
   * Registro delete
   */
  export type RegistroDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Registro
     */
    select?: RegistroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Registro
     */
    omit?: RegistroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroInclude<ExtArgs> | null
    /**
     * Filter which Registro to delete.
     */
    where: RegistroWhereUniqueInput
  }

  /**
   * Registro deleteMany
   */
  export type RegistroDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Registros to delete
     */
    where?: RegistroWhereInput
    /**
     * Limit how many Registros to delete.
     */
    limit?: number
  }

  /**
   * Registro.dados_pagamento
   */
  export type Registro$dados_pagamentoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DadosPagamento
     */
    select?: DadosPagamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DadosPagamento
     */
    omit?: DadosPagamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DadosPagamentoInclude<ExtArgs> | null
    where?: DadosPagamentoWhereInput
  }

  /**
   * Registro.endereco
   */
  export type Registro$enderecoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Endereco
     */
    select?: EnderecoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Endereco
     */
    omit?: EnderecoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoInclude<ExtArgs> | null
    where?: EnderecoWhereInput
  }

  /**
   * Registro.pedidos
   */
  export type Registro$pedidosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    where?: PedidoWhereInput
    orderBy?: PedidoOrderByWithRelationInput | PedidoOrderByWithRelationInput[]
    cursor?: PedidoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PedidoScalarFieldEnum | PedidoScalarFieldEnum[]
  }

  /**
   * Registro.fisica
   */
  export type Registro$fisicaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PessoaFisica
     */
    select?: PessoaFisicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PessoaFisica
     */
    omit?: PessoaFisicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PessoaFisicaInclude<ExtArgs> | null
    where?: PessoaFisicaWhereInput
  }

  /**
   * Registro.juridica
   */
  export type Registro$juridicaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PessoaJuridica
     */
    select?: PessoaJuridicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PessoaJuridica
     */
    omit?: PessoaJuridicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PessoaJuridicaInclude<ExtArgs> | null
    where?: PessoaJuridicaWhereInput
  }

  /**
   * Registro.saldo
   */
  export type Registro$saldoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SaldoFinanceiro
     */
    select?: SaldoFinanceiroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SaldoFinanceiro
     */
    omit?: SaldoFinanceiroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SaldoFinanceiroInclude<ExtArgs> | null
    where?: SaldoFinanceiroWhereInput
  }

  /**
   * Registro without action
   */
  export type RegistroDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Registro
     */
    select?: RegistroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Registro
     */
    omit?: RegistroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroInclude<ExtArgs> | null
  }


  /**
   * Model PessoaFisica
   */

  export type AggregatePessoaFisica = {
    _count: PessoaFisicaCountAggregateOutputType | null
    _avg: PessoaFisicaAvgAggregateOutputType | null
    _sum: PessoaFisicaSumAggregateOutputType | null
    _min: PessoaFisicaMinAggregateOutputType | null
    _max: PessoaFisicaMaxAggregateOutputType | null
  }

  export type PessoaFisicaAvgAggregateOutputType = {
    id: number | null
  }

  export type PessoaFisicaSumAggregateOutputType = {
    id: number | null
  }

  export type PessoaFisicaMinAggregateOutputType = {
    id: number | null
    cpf: string | null
    nascimento: Date | null
  }

  export type PessoaFisicaMaxAggregateOutputType = {
    id: number | null
    cpf: string | null
    nascimento: Date | null
  }

  export type PessoaFisicaCountAggregateOutputType = {
    id: number
    cpf: number
    nascimento: number
    _all: number
  }


  export type PessoaFisicaAvgAggregateInputType = {
    id?: true
  }

  export type PessoaFisicaSumAggregateInputType = {
    id?: true
  }

  export type PessoaFisicaMinAggregateInputType = {
    id?: true
    cpf?: true
    nascimento?: true
  }

  export type PessoaFisicaMaxAggregateInputType = {
    id?: true
    cpf?: true
    nascimento?: true
  }

  export type PessoaFisicaCountAggregateInputType = {
    id?: true
    cpf?: true
    nascimento?: true
    _all?: true
  }

  export type PessoaFisicaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PessoaFisica to aggregate.
     */
    where?: PessoaFisicaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PessoaFisicas to fetch.
     */
    orderBy?: PessoaFisicaOrderByWithRelationInput | PessoaFisicaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PessoaFisicaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PessoaFisicas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PessoaFisicas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PessoaFisicas
    **/
    _count?: true | PessoaFisicaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PessoaFisicaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PessoaFisicaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PessoaFisicaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PessoaFisicaMaxAggregateInputType
  }

  export type GetPessoaFisicaAggregateType<T extends PessoaFisicaAggregateArgs> = {
        [P in keyof T & keyof AggregatePessoaFisica]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePessoaFisica[P]>
      : GetScalarType<T[P], AggregatePessoaFisica[P]>
  }




  export type PessoaFisicaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PessoaFisicaWhereInput
    orderBy?: PessoaFisicaOrderByWithAggregationInput | PessoaFisicaOrderByWithAggregationInput[]
    by: PessoaFisicaScalarFieldEnum[] | PessoaFisicaScalarFieldEnum
    having?: PessoaFisicaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PessoaFisicaCountAggregateInputType | true
    _avg?: PessoaFisicaAvgAggregateInputType
    _sum?: PessoaFisicaSumAggregateInputType
    _min?: PessoaFisicaMinAggregateInputType
    _max?: PessoaFisicaMaxAggregateInputType
  }

  export type PessoaFisicaGroupByOutputType = {
    id: number
    cpf: string
    nascimento: Date | null
    _count: PessoaFisicaCountAggregateOutputType | null
    _avg: PessoaFisicaAvgAggregateOutputType | null
    _sum: PessoaFisicaSumAggregateOutputType | null
    _min: PessoaFisicaMinAggregateOutputType | null
    _max: PessoaFisicaMaxAggregateOutputType | null
  }

  type GetPessoaFisicaGroupByPayload<T extends PessoaFisicaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PessoaFisicaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PessoaFisicaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PessoaFisicaGroupByOutputType[P]>
            : GetScalarType<T[P], PessoaFisicaGroupByOutputType[P]>
        }
      >
    >


  export type PessoaFisicaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cpf?: boolean
    nascimento?: boolean
    registro?: boolean | RegistroDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pessoaFisica"]>

  export type PessoaFisicaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cpf?: boolean
    nascimento?: boolean
    registro?: boolean | RegistroDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pessoaFisica"]>

  export type PessoaFisicaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cpf?: boolean
    nascimento?: boolean
    registro?: boolean | RegistroDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pessoaFisica"]>

  export type PessoaFisicaSelectScalar = {
    id?: boolean
    cpf?: boolean
    nascimento?: boolean
  }

  export type PessoaFisicaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "cpf" | "nascimento", ExtArgs["result"]["pessoaFisica"]>
  export type PessoaFisicaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    registro?: boolean | RegistroDefaultArgs<ExtArgs>
  }
  export type PessoaFisicaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    registro?: boolean | RegistroDefaultArgs<ExtArgs>
  }
  export type PessoaFisicaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    registro?: boolean | RegistroDefaultArgs<ExtArgs>
  }

  export type $PessoaFisicaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PessoaFisica"
    objects: {
      registro: Prisma.$RegistroPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      cpf: string
      nascimento: Date | null
    }, ExtArgs["result"]["pessoaFisica"]>
    composites: {}
  }

  type PessoaFisicaGetPayload<S extends boolean | null | undefined | PessoaFisicaDefaultArgs> = $Result.GetResult<Prisma.$PessoaFisicaPayload, S>

  type PessoaFisicaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PessoaFisicaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PessoaFisicaCountAggregateInputType | true
    }

  export interface PessoaFisicaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PessoaFisica'], meta: { name: 'PessoaFisica' } }
    /**
     * Find zero or one PessoaFisica that matches the filter.
     * @param {PessoaFisicaFindUniqueArgs} args - Arguments to find a PessoaFisica
     * @example
     * // Get one PessoaFisica
     * const pessoaFisica = await prisma.pessoaFisica.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PessoaFisicaFindUniqueArgs>(args: SelectSubset<T, PessoaFisicaFindUniqueArgs<ExtArgs>>): Prisma__PessoaFisicaClient<$Result.GetResult<Prisma.$PessoaFisicaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PessoaFisica that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PessoaFisicaFindUniqueOrThrowArgs} args - Arguments to find a PessoaFisica
     * @example
     * // Get one PessoaFisica
     * const pessoaFisica = await prisma.pessoaFisica.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PessoaFisicaFindUniqueOrThrowArgs>(args: SelectSubset<T, PessoaFisicaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PessoaFisicaClient<$Result.GetResult<Prisma.$PessoaFisicaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PessoaFisica that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PessoaFisicaFindFirstArgs} args - Arguments to find a PessoaFisica
     * @example
     * // Get one PessoaFisica
     * const pessoaFisica = await prisma.pessoaFisica.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PessoaFisicaFindFirstArgs>(args?: SelectSubset<T, PessoaFisicaFindFirstArgs<ExtArgs>>): Prisma__PessoaFisicaClient<$Result.GetResult<Prisma.$PessoaFisicaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PessoaFisica that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PessoaFisicaFindFirstOrThrowArgs} args - Arguments to find a PessoaFisica
     * @example
     * // Get one PessoaFisica
     * const pessoaFisica = await prisma.pessoaFisica.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PessoaFisicaFindFirstOrThrowArgs>(args?: SelectSubset<T, PessoaFisicaFindFirstOrThrowArgs<ExtArgs>>): Prisma__PessoaFisicaClient<$Result.GetResult<Prisma.$PessoaFisicaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PessoaFisicas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PessoaFisicaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PessoaFisicas
     * const pessoaFisicas = await prisma.pessoaFisica.findMany()
     * 
     * // Get first 10 PessoaFisicas
     * const pessoaFisicas = await prisma.pessoaFisica.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const pessoaFisicaWithIdOnly = await prisma.pessoaFisica.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PessoaFisicaFindManyArgs>(args?: SelectSubset<T, PessoaFisicaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PessoaFisicaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PessoaFisica.
     * @param {PessoaFisicaCreateArgs} args - Arguments to create a PessoaFisica.
     * @example
     * // Create one PessoaFisica
     * const PessoaFisica = await prisma.pessoaFisica.create({
     *   data: {
     *     // ... data to create a PessoaFisica
     *   }
     * })
     * 
     */
    create<T extends PessoaFisicaCreateArgs>(args: SelectSubset<T, PessoaFisicaCreateArgs<ExtArgs>>): Prisma__PessoaFisicaClient<$Result.GetResult<Prisma.$PessoaFisicaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PessoaFisicas.
     * @param {PessoaFisicaCreateManyArgs} args - Arguments to create many PessoaFisicas.
     * @example
     * // Create many PessoaFisicas
     * const pessoaFisica = await prisma.pessoaFisica.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PessoaFisicaCreateManyArgs>(args?: SelectSubset<T, PessoaFisicaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PessoaFisicas and returns the data saved in the database.
     * @param {PessoaFisicaCreateManyAndReturnArgs} args - Arguments to create many PessoaFisicas.
     * @example
     * // Create many PessoaFisicas
     * const pessoaFisica = await prisma.pessoaFisica.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PessoaFisicas and only return the `id`
     * const pessoaFisicaWithIdOnly = await prisma.pessoaFisica.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PessoaFisicaCreateManyAndReturnArgs>(args?: SelectSubset<T, PessoaFisicaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PessoaFisicaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PessoaFisica.
     * @param {PessoaFisicaDeleteArgs} args - Arguments to delete one PessoaFisica.
     * @example
     * // Delete one PessoaFisica
     * const PessoaFisica = await prisma.pessoaFisica.delete({
     *   where: {
     *     // ... filter to delete one PessoaFisica
     *   }
     * })
     * 
     */
    delete<T extends PessoaFisicaDeleteArgs>(args: SelectSubset<T, PessoaFisicaDeleteArgs<ExtArgs>>): Prisma__PessoaFisicaClient<$Result.GetResult<Prisma.$PessoaFisicaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PessoaFisica.
     * @param {PessoaFisicaUpdateArgs} args - Arguments to update one PessoaFisica.
     * @example
     * // Update one PessoaFisica
     * const pessoaFisica = await prisma.pessoaFisica.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PessoaFisicaUpdateArgs>(args: SelectSubset<T, PessoaFisicaUpdateArgs<ExtArgs>>): Prisma__PessoaFisicaClient<$Result.GetResult<Prisma.$PessoaFisicaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PessoaFisicas.
     * @param {PessoaFisicaDeleteManyArgs} args - Arguments to filter PessoaFisicas to delete.
     * @example
     * // Delete a few PessoaFisicas
     * const { count } = await prisma.pessoaFisica.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PessoaFisicaDeleteManyArgs>(args?: SelectSubset<T, PessoaFisicaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PessoaFisicas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PessoaFisicaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PessoaFisicas
     * const pessoaFisica = await prisma.pessoaFisica.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PessoaFisicaUpdateManyArgs>(args: SelectSubset<T, PessoaFisicaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PessoaFisicas and returns the data updated in the database.
     * @param {PessoaFisicaUpdateManyAndReturnArgs} args - Arguments to update many PessoaFisicas.
     * @example
     * // Update many PessoaFisicas
     * const pessoaFisica = await prisma.pessoaFisica.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PessoaFisicas and only return the `id`
     * const pessoaFisicaWithIdOnly = await prisma.pessoaFisica.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PessoaFisicaUpdateManyAndReturnArgs>(args: SelectSubset<T, PessoaFisicaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PessoaFisicaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PessoaFisica.
     * @param {PessoaFisicaUpsertArgs} args - Arguments to update or create a PessoaFisica.
     * @example
     * // Update or create a PessoaFisica
     * const pessoaFisica = await prisma.pessoaFisica.upsert({
     *   create: {
     *     // ... data to create a PessoaFisica
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PessoaFisica we want to update
     *   }
     * })
     */
    upsert<T extends PessoaFisicaUpsertArgs>(args: SelectSubset<T, PessoaFisicaUpsertArgs<ExtArgs>>): Prisma__PessoaFisicaClient<$Result.GetResult<Prisma.$PessoaFisicaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PessoaFisicas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PessoaFisicaCountArgs} args - Arguments to filter PessoaFisicas to count.
     * @example
     * // Count the number of PessoaFisicas
     * const count = await prisma.pessoaFisica.count({
     *   where: {
     *     // ... the filter for the PessoaFisicas we want to count
     *   }
     * })
    **/
    count<T extends PessoaFisicaCountArgs>(
      args?: Subset<T, PessoaFisicaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PessoaFisicaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PessoaFisica.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PessoaFisicaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PessoaFisicaAggregateArgs>(args: Subset<T, PessoaFisicaAggregateArgs>): Prisma.PrismaPromise<GetPessoaFisicaAggregateType<T>>

    /**
     * Group by PessoaFisica.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PessoaFisicaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PessoaFisicaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PessoaFisicaGroupByArgs['orderBy'] }
        : { orderBy?: PessoaFisicaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PessoaFisicaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPessoaFisicaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PessoaFisica model
   */
  readonly fields: PessoaFisicaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PessoaFisica.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PessoaFisicaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    registro<T extends RegistroDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RegistroDefaultArgs<ExtArgs>>): Prisma__RegistroClient<$Result.GetResult<Prisma.$RegistroPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PessoaFisica model
   */
  interface PessoaFisicaFieldRefs {
    readonly id: FieldRef<"PessoaFisica", 'Int'>
    readonly cpf: FieldRef<"PessoaFisica", 'String'>
    readonly nascimento: FieldRef<"PessoaFisica", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * PessoaFisica findUnique
   */
  export type PessoaFisicaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PessoaFisica
     */
    select?: PessoaFisicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PessoaFisica
     */
    omit?: PessoaFisicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PessoaFisicaInclude<ExtArgs> | null
    /**
     * Filter, which PessoaFisica to fetch.
     */
    where: PessoaFisicaWhereUniqueInput
  }

  /**
   * PessoaFisica findUniqueOrThrow
   */
  export type PessoaFisicaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PessoaFisica
     */
    select?: PessoaFisicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PessoaFisica
     */
    omit?: PessoaFisicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PessoaFisicaInclude<ExtArgs> | null
    /**
     * Filter, which PessoaFisica to fetch.
     */
    where: PessoaFisicaWhereUniqueInput
  }

  /**
   * PessoaFisica findFirst
   */
  export type PessoaFisicaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PessoaFisica
     */
    select?: PessoaFisicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PessoaFisica
     */
    omit?: PessoaFisicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PessoaFisicaInclude<ExtArgs> | null
    /**
     * Filter, which PessoaFisica to fetch.
     */
    where?: PessoaFisicaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PessoaFisicas to fetch.
     */
    orderBy?: PessoaFisicaOrderByWithRelationInput | PessoaFisicaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PessoaFisicas.
     */
    cursor?: PessoaFisicaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PessoaFisicas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PessoaFisicas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PessoaFisicas.
     */
    distinct?: PessoaFisicaScalarFieldEnum | PessoaFisicaScalarFieldEnum[]
  }

  /**
   * PessoaFisica findFirstOrThrow
   */
  export type PessoaFisicaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PessoaFisica
     */
    select?: PessoaFisicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PessoaFisica
     */
    omit?: PessoaFisicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PessoaFisicaInclude<ExtArgs> | null
    /**
     * Filter, which PessoaFisica to fetch.
     */
    where?: PessoaFisicaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PessoaFisicas to fetch.
     */
    orderBy?: PessoaFisicaOrderByWithRelationInput | PessoaFisicaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PessoaFisicas.
     */
    cursor?: PessoaFisicaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PessoaFisicas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PessoaFisicas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PessoaFisicas.
     */
    distinct?: PessoaFisicaScalarFieldEnum | PessoaFisicaScalarFieldEnum[]
  }

  /**
   * PessoaFisica findMany
   */
  export type PessoaFisicaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PessoaFisica
     */
    select?: PessoaFisicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PessoaFisica
     */
    omit?: PessoaFisicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PessoaFisicaInclude<ExtArgs> | null
    /**
     * Filter, which PessoaFisicas to fetch.
     */
    where?: PessoaFisicaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PessoaFisicas to fetch.
     */
    orderBy?: PessoaFisicaOrderByWithRelationInput | PessoaFisicaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PessoaFisicas.
     */
    cursor?: PessoaFisicaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PessoaFisicas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PessoaFisicas.
     */
    skip?: number
    distinct?: PessoaFisicaScalarFieldEnum | PessoaFisicaScalarFieldEnum[]
  }

  /**
   * PessoaFisica create
   */
  export type PessoaFisicaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PessoaFisica
     */
    select?: PessoaFisicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PessoaFisica
     */
    omit?: PessoaFisicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PessoaFisicaInclude<ExtArgs> | null
    /**
     * The data needed to create a PessoaFisica.
     */
    data: XOR<PessoaFisicaCreateInput, PessoaFisicaUncheckedCreateInput>
  }

  /**
   * PessoaFisica createMany
   */
  export type PessoaFisicaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PessoaFisicas.
     */
    data: PessoaFisicaCreateManyInput | PessoaFisicaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PessoaFisica createManyAndReturn
   */
  export type PessoaFisicaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PessoaFisica
     */
    select?: PessoaFisicaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PessoaFisica
     */
    omit?: PessoaFisicaOmit<ExtArgs> | null
    /**
     * The data used to create many PessoaFisicas.
     */
    data: PessoaFisicaCreateManyInput | PessoaFisicaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PessoaFisicaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PessoaFisica update
   */
  export type PessoaFisicaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PessoaFisica
     */
    select?: PessoaFisicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PessoaFisica
     */
    omit?: PessoaFisicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PessoaFisicaInclude<ExtArgs> | null
    /**
     * The data needed to update a PessoaFisica.
     */
    data: XOR<PessoaFisicaUpdateInput, PessoaFisicaUncheckedUpdateInput>
    /**
     * Choose, which PessoaFisica to update.
     */
    where: PessoaFisicaWhereUniqueInput
  }

  /**
   * PessoaFisica updateMany
   */
  export type PessoaFisicaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PessoaFisicas.
     */
    data: XOR<PessoaFisicaUpdateManyMutationInput, PessoaFisicaUncheckedUpdateManyInput>
    /**
     * Filter which PessoaFisicas to update
     */
    where?: PessoaFisicaWhereInput
    /**
     * Limit how many PessoaFisicas to update.
     */
    limit?: number
  }

  /**
   * PessoaFisica updateManyAndReturn
   */
  export type PessoaFisicaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PessoaFisica
     */
    select?: PessoaFisicaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PessoaFisica
     */
    omit?: PessoaFisicaOmit<ExtArgs> | null
    /**
     * The data used to update PessoaFisicas.
     */
    data: XOR<PessoaFisicaUpdateManyMutationInput, PessoaFisicaUncheckedUpdateManyInput>
    /**
     * Filter which PessoaFisicas to update
     */
    where?: PessoaFisicaWhereInput
    /**
     * Limit how many PessoaFisicas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PessoaFisicaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * PessoaFisica upsert
   */
  export type PessoaFisicaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PessoaFisica
     */
    select?: PessoaFisicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PessoaFisica
     */
    omit?: PessoaFisicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PessoaFisicaInclude<ExtArgs> | null
    /**
     * The filter to search for the PessoaFisica to update in case it exists.
     */
    where: PessoaFisicaWhereUniqueInput
    /**
     * In case the PessoaFisica found by the `where` argument doesn't exist, create a new PessoaFisica with this data.
     */
    create: XOR<PessoaFisicaCreateInput, PessoaFisicaUncheckedCreateInput>
    /**
     * In case the PessoaFisica was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PessoaFisicaUpdateInput, PessoaFisicaUncheckedUpdateInput>
  }

  /**
   * PessoaFisica delete
   */
  export type PessoaFisicaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PessoaFisica
     */
    select?: PessoaFisicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PessoaFisica
     */
    omit?: PessoaFisicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PessoaFisicaInclude<ExtArgs> | null
    /**
     * Filter which PessoaFisica to delete.
     */
    where: PessoaFisicaWhereUniqueInput
  }

  /**
   * PessoaFisica deleteMany
   */
  export type PessoaFisicaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PessoaFisicas to delete
     */
    where?: PessoaFisicaWhereInput
    /**
     * Limit how many PessoaFisicas to delete.
     */
    limit?: number
  }

  /**
   * PessoaFisica without action
   */
  export type PessoaFisicaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PessoaFisica
     */
    select?: PessoaFisicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PessoaFisica
     */
    omit?: PessoaFisicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PessoaFisicaInclude<ExtArgs> | null
  }


  /**
   * Model PessoaJuridica
   */

  export type AggregatePessoaJuridica = {
    _count: PessoaJuridicaCountAggregateOutputType | null
    _avg: PessoaJuridicaAvgAggregateOutputType | null
    _sum: PessoaJuridicaSumAggregateOutputType | null
    _min: PessoaJuridicaMinAggregateOutputType | null
    _max: PessoaJuridicaMaxAggregateOutputType | null
  }

  export type PessoaJuridicaAvgAggregateOutputType = {
    id: number | null
  }

  export type PessoaJuridicaSumAggregateOutputType = {
    id: number | null
  }

  export type PessoaJuridicaMinAggregateOutputType = {
    id: number | null
    cnpj: string | null
    ie: string | null
    fantasia: string | null
  }

  export type PessoaJuridicaMaxAggregateOutputType = {
    id: number | null
    cnpj: string | null
    ie: string | null
    fantasia: string | null
  }

  export type PessoaJuridicaCountAggregateOutputType = {
    id: number
    cnpj: number
    ie: number
    fantasia: number
    _all: number
  }


  export type PessoaJuridicaAvgAggregateInputType = {
    id?: true
  }

  export type PessoaJuridicaSumAggregateInputType = {
    id?: true
  }

  export type PessoaJuridicaMinAggregateInputType = {
    id?: true
    cnpj?: true
    ie?: true
    fantasia?: true
  }

  export type PessoaJuridicaMaxAggregateInputType = {
    id?: true
    cnpj?: true
    ie?: true
    fantasia?: true
  }

  export type PessoaJuridicaCountAggregateInputType = {
    id?: true
    cnpj?: true
    ie?: true
    fantasia?: true
    _all?: true
  }

  export type PessoaJuridicaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PessoaJuridica to aggregate.
     */
    where?: PessoaJuridicaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PessoaJuridicas to fetch.
     */
    orderBy?: PessoaJuridicaOrderByWithRelationInput | PessoaJuridicaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PessoaJuridicaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PessoaJuridicas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PessoaJuridicas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PessoaJuridicas
    **/
    _count?: true | PessoaJuridicaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PessoaJuridicaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PessoaJuridicaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PessoaJuridicaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PessoaJuridicaMaxAggregateInputType
  }

  export type GetPessoaJuridicaAggregateType<T extends PessoaJuridicaAggregateArgs> = {
        [P in keyof T & keyof AggregatePessoaJuridica]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePessoaJuridica[P]>
      : GetScalarType<T[P], AggregatePessoaJuridica[P]>
  }




  export type PessoaJuridicaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PessoaJuridicaWhereInput
    orderBy?: PessoaJuridicaOrderByWithAggregationInput | PessoaJuridicaOrderByWithAggregationInput[]
    by: PessoaJuridicaScalarFieldEnum[] | PessoaJuridicaScalarFieldEnum
    having?: PessoaJuridicaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PessoaJuridicaCountAggregateInputType | true
    _avg?: PessoaJuridicaAvgAggregateInputType
    _sum?: PessoaJuridicaSumAggregateInputType
    _min?: PessoaJuridicaMinAggregateInputType
    _max?: PessoaJuridicaMaxAggregateInputType
  }

  export type PessoaJuridicaGroupByOutputType = {
    id: number
    cnpj: string
    ie: string | null
    fantasia: string | null
    _count: PessoaJuridicaCountAggregateOutputType | null
    _avg: PessoaJuridicaAvgAggregateOutputType | null
    _sum: PessoaJuridicaSumAggregateOutputType | null
    _min: PessoaJuridicaMinAggregateOutputType | null
    _max: PessoaJuridicaMaxAggregateOutputType | null
  }

  type GetPessoaJuridicaGroupByPayload<T extends PessoaJuridicaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PessoaJuridicaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PessoaJuridicaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PessoaJuridicaGroupByOutputType[P]>
            : GetScalarType<T[P], PessoaJuridicaGroupByOutputType[P]>
        }
      >
    >


  export type PessoaJuridicaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cnpj?: boolean
    ie?: boolean
    fantasia?: boolean
    registro?: boolean | RegistroDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pessoaJuridica"]>

  export type PessoaJuridicaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cnpj?: boolean
    ie?: boolean
    fantasia?: boolean
    registro?: boolean | RegistroDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pessoaJuridica"]>

  export type PessoaJuridicaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cnpj?: boolean
    ie?: boolean
    fantasia?: boolean
    registro?: boolean | RegistroDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pessoaJuridica"]>

  export type PessoaJuridicaSelectScalar = {
    id?: boolean
    cnpj?: boolean
    ie?: boolean
    fantasia?: boolean
  }

  export type PessoaJuridicaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "cnpj" | "ie" | "fantasia", ExtArgs["result"]["pessoaJuridica"]>
  export type PessoaJuridicaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    registro?: boolean | RegistroDefaultArgs<ExtArgs>
  }
  export type PessoaJuridicaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    registro?: boolean | RegistroDefaultArgs<ExtArgs>
  }
  export type PessoaJuridicaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    registro?: boolean | RegistroDefaultArgs<ExtArgs>
  }

  export type $PessoaJuridicaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PessoaJuridica"
    objects: {
      registro: Prisma.$RegistroPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      cnpj: string
      ie: string | null
      fantasia: string | null
    }, ExtArgs["result"]["pessoaJuridica"]>
    composites: {}
  }

  type PessoaJuridicaGetPayload<S extends boolean | null | undefined | PessoaJuridicaDefaultArgs> = $Result.GetResult<Prisma.$PessoaJuridicaPayload, S>

  type PessoaJuridicaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PessoaJuridicaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PessoaJuridicaCountAggregateInputType | true
    }

  export interface PessoaJuridicaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PessoaJuridica'], meta: { name: 'PessoaJuridica' } }
    /**
     * Find zero or one PessoaJuridica that matches the filter.
     * @param {PessoaJuridicaFindUniqueArgs} args - Arguments to find a PessoaJuridica
     * @example
     * // Get one PessoaJuridica
     * const pessoaJuridica = await prisma.pessoaJuridica.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PessoaJuridicaFindUniqueArgs>(args: SelectSubset<T, PessoaJuridicaFindUniqueArgs<ExtArgs>>): Prisma__PessoaJuridicaClient<$Result.GetResult<Prisma.$PessoaJuridicaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PessoaJuridica that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PessoaJuridicaFindUniqueOrThrowArgs} args - Arguments to find a PessoaJuridica
     * @example
     * // Get one PessoaJuridica
     * const pessoaJuridica = await prisma.pessoaJuridica.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PessoaJuridicaFindUniqueOrThrowArgs>(args: SelectSubset<T, PessoaJuridicaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PessoaJuridicaClient<$Result.GetResult<Prisma.$PessoaJuridicaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PessoaJuridica that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PessoaJuridicaFindFirstArgs} args - Arguments to find a PessoaJuridica
     * @example
     * // Get one PessoaJuridica
     * const pessoaJuridica = await prisma.pessoaJuridica.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PessoaJuridicaFindFirstArgs>(args?: SelectSubset<T, PessoaJuridicaFindFirstArgs<ExtArgs>>): Prisma__PessoaJuridicaClient<$Result.GetResult<Prisma.$PessoaJuridicaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PessoaJuridica that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PessoaJuridicaFindFirstOrThrowArgs} args - Arguments to find a PessoaJuridica
     * @example
     * // Get one PessoaJuridica
     * const pessoaJuridica = await prisma.pessoaJuridica.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PessoaJuridicaFindFirstOrThrowArgs>(args?: SelectSubset<T, PessoaJuridicaFindFirstOrThrowArgs<ExtArgs>>): Prisma__PessoaJuridicaClient<$Result.GetResult<Prisma.$PessoaJuridicaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PessoaJuridicas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PessoaJuridicaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PessoaJuridicas
     * const pessoaJuridicas = await prisma.pessoaJuridica.findMany()
     * 
     * // Get first 10 PessoaJuridicas
     * const pessoaJuridicas = await prisma.pessoaJuridica.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const pessoaJuridicaWithIdOnly = await prisma.pessoaJuridica.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PessoaJuridicaFindManyArgs>(args?: SelectSubset<T, PessoaJuridicaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PessoaJuridicaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PessoaJuridica.
     * @param {PessoaJuridicaCreateArgs} args - Arguments to create a PessoaJuridica.
     * @example
     * // Create one PessoaJuridica
     * const PessoaJuridica = await prisma.pessoaJuridica.create({
     *   data: {
     *     // ... data to create a PessoaJuridica
     *   }
     * })
     * 
     */
    create<T extends PessoaJuridicaCreateArgs>(args: SelectSubset<T, PessoaJuridicaCreateArgs<ExtArgs>>): Prisma__PessoaJuridicaClient<$Result.GetResult<Prisma.$PessoaJuridicaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PessoaJuridicas.
     * @param {PessoaJuridicaCreateManyArgs} args - Arguments to create many PessoaJuridicas.
     * @example
     * // Create many PessoaJuridicas
     * const pessoaJuridica = await prisma.pessoaJuridica.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PessoaJuridicaCreateManyArgs>(args?: SelectSubset<T, PessoaJuridicaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PessoaJuridicas and returns the data saved in the database.
     * @param {PessoaJuridicaCreateManyAndReturnArgs} args - Arguments to create many PessoaJuridicas.
     * @example
     * // Create many PessoaJuridicas
     * const pessoaJuridica = await prisma.pessoaJuridica.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PessoaJuridicas and only return the `id`
     * const pessoaJuridicaWithIdOnly = await prisma.pessoaJuridica.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PessoaJuridicaCreateManyAndReturnArgs>(args?: SelectSubset<T, PessoaJuridicaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PessoaJuridicaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PessoaJuridica.
     * @param {PessoaJuridicaDeleteArgs} args - Arguments to delete one PessoaJuridica.
     * @example
     * // Delete one PessoaJuridica
     * const PessoaJuridica = await prisma.pessoaJuridica.delete({
     *   where: {
     *     // ... filter to delete one PessoaJuridica
     *   }
     * })
     * 
     */
    delete<T extends PessoaJuridicaDeleteArgs>(args: SelectSubset<T, PessoaJuridicaDeleteArgs<ExtArgs>>): Prisma__PessoaJuridicaClient<$Result.GetResult<Prisma.$PessoaJuridicaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PessoaJuridica.
     * @param {PessoaJuridicaUpdateArgs} args - Arguments to update one PessoaJuridica.
     * @example
     * // Update one PessoaJuridica
     * const pessoaJuridica = await prisma.pessoaJuridica.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PessoaJuridicaUpdateArgs>(args: SelectSubset<T, PessoaJuridicaUpdateArgs<ExtArgs>>): Prisma__PessoaJuridicaClient<$Result.GetResult<Prisma.$PessoaJuridicaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PessoaJuridicas.
     * @param {PessoaJuridicaDeleteManyArgs} args - Arguments to filter PessoaJuridicas to delete.
     * @example
     * // Delete a few PessoaJuridicas
     * const { count } = await prisma.pessoaJuridica.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PessoaJuridicaDeleteManyArgs>(args?: SelectSubset<T, PessoaJuridicaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PessoaJuridicas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PessoaJuridicaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PessoaJuridicas
     * const pessoaJuridica = await prisma.pessoaJuridica.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PessoaJuridicaUpdateManyArgs>(args: SelectSubset<T, PessoaJuridicaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PessoaJuridicas and returns the data updated in the database.
     * @param {PessoaJuridicaUpdateManyAndReturnArgs} args - Arguments to update many PessoaJuridicas.
     * @example
     * // Update many PessoaJuridicas
     * const pessoaJuridica = await prisma.pessoaJuridica.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PessoaJuridicas and only return the `id`
     * const pessoaJuridicaWithIdOnly = await prisma.pessoaJuridica.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PessoaJuridicaUpdateManyAndReturnArgs>(args: SelectSubset<T, PessoaJuridicaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PessoaJuridicaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PessoaJuridica.
     * @param {PessoaJuridicaUpsertArgs} args - Arguments to update or create a PessoaJuridica.
     * @example
     * // Update or create a PessoaJuridica
     * const pessoaJuridica = await prisma.pessoaJuridica.upsert({
     *   create: {
     *     // ... data to create a PessoaJuridica
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PessoaJuridica we want to update
     *   }
     * })
     */
    upsert<T extends PessoaJuridicaUpsertArgs>(args: SelectSubset<T, PessoaJuridicaUpsertArgs<ExtArgs>>): Prisma__PessoaJuridicaClient<$Result.GetResult<Prisma.$PessoaJuridicaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PessoaJuridicas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PessoaJuridicaCountArgs} args - Arguments to filter PessoaJuridicas to count.
     * @example
     * // Count the number of PessoaJuridicas
     * const count = await prisma.pessoaJuridica.count({
     *   where: {
     *     // ... the filter for the PessoaJuridicas we want to count
     *   }
     * })
    **/
    count<T extends PessoaJuridicaCountArgs>(
      args?: Subset<T, PessoaJuridicaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PessoaJuridicaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PessoaJuridica.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PessoaJuridicaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PessoaJuridicaAggregateArgs>(args: Subset<T, PessoaJuridicaAggregateArgs>): Prisma.PrismaPromise<GetPessoaJuridicaAggregateType<T>>

    /**
     * Group by PessoaJuridica.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PessoaJuridicaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PessoaJuridicaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PessoaJuridicaGroupByArgs['orderBy'] }
        : { orderBy?: PessoaJuridicaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PessoaJuridicaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPessoaJuridicaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PessoaJuridica model
   */
  readonly fields: PessoaJuridicaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PessoaJuridica.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PessoaJuridicaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    registro<T extends RegistroDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RegistroDefaultArgs<ExtArgs>>): Prisma__RegistroClient<$Result.GetResult<Prisma.$RegistroPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PessoaJuridica model
   */
  interface PessoaJuridicaFieldRefs {
    readonly id: FieldRef<"PessoaJuridica", 'Int'>
    readonly cnpj: FieldRef<"PessoaJuridica", 'String'>
    readonly ie: FieldRef<"PessoaJuridica", 'String'>
    readonly fantasia: FieldRef<"PessoaJuridica", 'String'>
  }
    

  // Custom InputTypes
  /**
   * PessoaJuridica findUnique
   */
  export type PessoaJuridicaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PessoaJuridica
     */
    select?: PessoaJuridicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PessoaJuridica
     */
    omit?: PessoaJuridicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PessoaJuridicaInclude<ExtArgs> | null
    /**
     * Filter, which PessoaJuridica to fetch.
     */
    where: PessoaJuridicaWhereUniqueInput
  }

  /**
   * PessoaJuridica findUniqueOrThrow
   */
  export type PessoaJuridicaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PessoaJuridica
     */
    select?: PessoaJuridicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PessoaJuridica
     */
    omit?: PessoaJuridicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PessoaJuridicaInclude<ExtArgs> | null
    /**
     * Filter, which PessoaJuridica to fetch.
     */
    where: PessoaJuridicaWhereUniqueInput
  }

  /**
   * PessoaJuridica findFirst
   */
  export type PessoaJuridicaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PessoaJuridica
     */
    select?: PessoaJuridicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PessoaJuridica
     */
    omit?: PessoaJuridicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PessoaJuridicaInclude<ExtArgs> | null
    /**
     * Filter, which PessoaJuridica to fetch.
     */
    where?: PessoaJuridicaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PessoaJuridicas to fetch.
     */
    orderBy?: PessoaJuridicaOrderByWithRelationInput | PessoaJuridicaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PessoaJuridicas.
     */
    cursor?: PessoaJuridicaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PessoaJuridicas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PessoaJuridicas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PessoaJuridicas.
     */
    distinct?: PessoaJuridicaScalarFieldEnum | PessoaJuridicaScalarFieldEnum[]
  }

  /**
   * PessoaJuridica findFirstOrThrow
   */
  export type PessoaJuridicaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PessoaJuridica
     */
    select?: PessoaJuridicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PessoaJuridica
     */
    omit?: PessoaJuridicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PessoaJuridicaInclude<ExtArgs> | null
    /**
     * Filter, which PessoaJuridica to fetch.
     */
    where?: PessoaJuridicaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PessoaJuridicas to fetch.
     */
    orderBy?: PessoaJuridicaOrderByWithRelationInput | PessoaJuridicaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PessoaJuridicas.
     */
    cursor?: PessoaJuridicaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PessoaJuridicas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PessoaJuridicas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PessoaJuridicas.
     */
    distinct?: PessoaJuridicaScalarFieldEnum | PessoaJuridicaScalarFieldEnum[]
  }

  /**
   * PessoaJuridica findMany
   */
  export type PessoaJuridicaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PessoaJuridica
     */
    select?: PessoaJuridicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PessoaJuridica
     */
    omit?: PessoaJuridicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PessoaJuridicaInclude<ExtArgs> | null
    /**
     * Filter, which PessoaJuridicas to fetch.
     */
    where?: PessoaJuridicaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PessoaJuridicas to fetch.
     */
    orderBy?: PessoaJuridicaOrderByWithRelationInput | PessoaJuridicaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PessoaJuridicas.
     */
    cursor?: PessoaJuridicaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PessoaJuridicas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PessoaJuridicas.
     */
    skip?: number
    distinct?: PessoaJuridicaScalarFieldEnum | PessoaJuridicaScalarFieldEnum[]
  }

  /**
   * PessoaJuridica create
   */
  export type PessoaJuridicaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PessoaJuridica
     */
    select?: PessoaJuridicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PessoaJuridica
     */
    omit?: PessoaJuridicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PessoaJuridicaInclude<ExtArgs> | null
    /**
     * The data needed to create a PessoaJuridica.
     */
    data: XOR<PessoaJuridicaCreateInput, PessoaJuridicaUncheckedCreateInput>
  }

  /**
   * PessoaJuridica createMany
   */
  export type PessoaJuridicaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PessoaJuridicas.
     */
    data: PessoaJuridicaCreateManyInput | PessoaJuridicaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PessoaJuridica createManyAndReturn
   */
  export type PessoaJuridicaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PessoaJuridica
     */
    select?: PessoaJuridicaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PessoaJuridica
     */
    omit?: PessoaJuridicaOmit<ExtArgs> | null
    /**
     * The data used to create many PessoaJuridicas.
     */
    data: PessoaJuridicaCreateManyInput | PessoaJuridicaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PessoaJuridicaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PessoaJuridica update
   */
  export type PessoaJuridicaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PessoaJuridica
     */
    select?: PessoaJuridicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PessoaJuridica
     */
    omit?: PessoaJuridicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PessoaJuridicaInclude<ExtArgs> | null
    /**
     * The data needed to update a PessoaJuridica.
     */
    data: XOR<PessoaJuridicaUpdateInput, PessoaJuridicaUncheckedUpdateInput>
    /**
     * Choose, which PessoaJuridica to update.
     */
    where: PessoaJuridicaWhereUniqueInput
  }

  /**
   * PessoaJuridica updateMany
   */
  export type PessoaJuridicaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PessoaJuridicas.
     */
    data: XOR<PessoaJuridicaUpdateManyMutationInput, PessoaJuridicaUncheckedUpdateManyInput>
    /**
     * Filter which PessoaJuridicas to update
     */
    where?: PessoaJuridicaWhereInput
    /**
     * Limit how many PessoaJuridicas to update.
     */
    limit?: number
  }

  /**
   * PessoaJuridica updateManyAndReturn
   */
  export type PessoaJuridicaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PessoaJuridica
     */
    select?: PessoaJuridicaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PessoaJuridica
     */
    omit?: PessoaJuridicaOmit<ExtArgs> | null
    /**
     * The data used to update PessoaJuridicas.
     */
    data: XOR<PessoaJuridicaUpdateManyMutationInput, PessoaJuridicaUncheckedUpdateManyInput>
    /**
     * Filter which PessoaJuridicas to update
     */
    where?: PessoaJuridicaWhereInput
    /**
     * Limit how many PessoaJuridicas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PessoaJuridicaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * PessoaJuridica upsert
   */
  export type PessoaJuridicaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PessoaJuridica
     */
    select?: PessoaJuridicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PessoaJuridica
     */
    omit?: PessoaJuridicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PessoaJuridicaInclude<ExtArgs> | null
    /**
     * The filter to search for the PessoaJuridica to update in case it exists.
     */
    where: PessoaJuridicaWhereUniqueInput
    /**
     * In case the PessoaJuridica found by the `where` argument doesn't exist, create a new PessoaJuridica with this data.
     */
    create: XOR<PessoaJuridicaCreateInput, PessoaJuridicaUncheckedCreateInput>
    /**
     * In case the PessoaJuridica was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PessoaJuridicaUpdateInput, PessoaJuridicaUncheckedUpdateInput>
  }

  /**
   * PessoaJuridica delete
   */
  export type PessoaJuridicaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PessoaJuridica
     */
    select?: PessoaJuridicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PessoaJuridica
     */
    omit?: PessoaJuridicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PessoaJuridicaInclude<ExtArgs> | null
    /**
     * Filter which PessoaJuridica to delete.
     */
    where: PessoaJuridicaWhereUniqueInput
  }

  /**
   * PessoaJuridica deleteMany
   */
  export type PessoaJuridicaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PessoaJuridicas to delete
     */
    where?: PessoaJuridicaWhereInput
    /**
     * Limit how many PessoaJuridicas to delete.
     */
    limit?: number
  }

  /**
   * PessoaJuridica without action
   */
  export type PessoaJuridicaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PessoaJuridica
     */
    select?: PessoaJuridicaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PessoaJuridica
     */
    omit?: PessoaJuridicaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PessoaJuridicaInclude<ExtArgs> | null
  }


  /**
   * Model SaldoFinanceiro
   */

  export type AggregateSaldoFinanceiro = {
    _count: SaldoFinanceiroCountAggregateOutputType | null
    _avg: SaldoFinanceiroAvgAggregateOutputType | null
    _sum: SaldoFinanceiroSumAggregateOutputType | null
    _min: SaldoFinanceiroMinAggregateOutputType | null
    _max: SaldoFinanceiroMaxAggregateOutputType | null
  }

  export type SaldoFinanceiroAvgAggregateOutputType = {
    id: number | null
    regID: number | null
    saldo: Decimal | null
  }

  export type SaldoFinanceiroSumAggregateOutputType = {
    id: number | null
    regID: number | null
    saldo: Decimal | null
  }

  export type SaldoFinanceiroMinAggregateOutputType = {
    id: number | null
    regID: number | null
    saldo: Decimal | null
  }

  export type SaldoFinanceiroMaxAggregateOutputType = {
    id: number | null
    regID: number | null
    saldo: Decimal | null
  }

  export type SaldoFinanceiroCountAggregateOutputType = {
    id: number
    regID: number
    saldo: number
    _all: number
  }


  export type SaldoFinanceiroAvgAggregateInputType = {
    id?: true
    regID?: true
    saldo?: true
  }

  export type SaldoFinanceiroSumAggregateInputType = {
    id?: true
    regID?: true
    saldo?: true
  }

  export type SaldoFinanceiroMinAggregateInputType = {
    id?: true
    regID?: true
    saldo?: true
  }

  export type SaldoFinanceiroMaxAggregateInputType = {
    id?: true
    regID?: true
    saldo?: true
  }

  export type SaldoFinanceiroCountAggregateInputType = {
    id?: true
    regID?: true
    saldo?: true
    _all?: true
  }

  export type SaldoFinanceiroAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SaldoFinanceiro to aggregate.
     */
    where?: SaldoFinanceiroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SaldoFinanceiros to fetch.
     */
    orderBy?: SaldoFinanceiroOrderByWithRelationInput | SaldoFinanceiroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SaldoFinanceiroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SaldoFinanceiros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SaldoFinanceiros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SaldoFinanceiros
    **/
    _count?: true | SaldoFinanceiroCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SaldoFinanceiroAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SaldoFinanceiroSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SaldoFinanceiroMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SaldoFinanceiroMaxAggregateInputType
  }

  export type GetSaldoFinanceiroAggregateType<T extends SaldoFinanceiroAggregateArgs> = {
        [P in keyof T & keyof AggregateSaldoFinanceiro]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSaldoFinanceiro[P]>
      : GetScalarType<T[P], AggregateSaldoFinanceiro[P]>
  }




  export type SaldoFinanceiroGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SaldoFinanceiroWhereInput
    orderBy?: SaldoFinanceiroOrderByWithAggregationInput | SaldoFinanceiroOrderByWithAggregationInput[]
    by: SaldoFinanceiroScalarFieldEnum[] | SaldoFinanceiroScalarFieldEnum
    having?: SaldoFinanceiroScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SaldoFinanceiroCountAggregateInputType | true
    _avg?: SaldoFinanceiroAvgAggregateInputType
    _sum?: SaldoFinanceiroSumAggregateInputType
    _min?: SaldoFinanceiroMinAggregateInputType
    _max?: SaldoFinanceiroMaxAggregateInputType
  }

  export type SaldoFinanceiroGroupByOutputType = {
    id: number
    regID: number
    saldo: Decimal
    _count: SaldoFinanceiroCountAggregateOutputType | null
    _avg: SaldoFinanceiroAvgAggregateOutputType | null
    _sum: SaldoFinanceiroSumAggregateOutputType | null
    _min: SaldoFinanceiroMinAggregateOutputType | null
    _max: SaldoFinanceiroMaxAggregateOutputType | null
  }

  type GetSaldoFinanceiroGroupByPayload<T extends SaldoFinanceiroGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SaldoFinanceiroGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SaldoFinanceiroGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SaldoFinanceiroGroupByOutputType[P]>
            : GetScalarType<T[P], SaldoFinanceiroGroupByOutputType[P]>
        }
      >
    >


  export type SaldoFinanceiroSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    regID?: boolean
    saldo?: boolean
    registro?: boolean | RegistroDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["saldoFinanceiro"]>

  export type SaldoFinanceiroSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    regID?: boolean
    saldo?: boolean
    registro?: boolean | RegistroDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["saldoFinanceiro"]>

  export type SaldoFinanceiroSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    regID?: boolean
    saldo?: boolean
    registro?: boolean | RegistroDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["saldoFinanceiro"]>

  export type SaldoFinanceiroSelectScalar = {
    id?: boolean
    regID?: boolean
    saldo?: boolean
  }

  export type SaldoFinanceiroOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "regID" | "saldo", ExtArgs["result"]["saldoFinanceiro"]>
  export type SaldoFinanceiroInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    registro?: boolean | RegistroDefaultArgs<ExtArgs>
  }
  export type SaldoFinanceiroIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    registro?: boolean | RegistroDefaultArgs<ExtArgs>
  }
  export type SaldoFinanceiroIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    registro?: boolean | RegistroDefaultArgs<ExtArgs>
  }

  export type $SaldoFinanceiroPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SaldoFinanceiro"
    objects: {
      registro: Prisma.$RegistroPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      regID: number
      saldo: Prisma.Decimal
    }, ExtArgs["result"]["saldoFinanceiro"]>
    composites: {}
  }

  type SaldoFinanceiroGetPayload<S extends boolean | null | undefined | SaldoFinanceiroDefaultArgs> = $Result.GetResult<Prisma.$SaldoFinanceiroPayload, S>

  type SaldoFinanceiroCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SaldoFinanceiroFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SaldoFinanceiroCountAggregateInputType | true
    }

  export interface SaldoFinanceiroDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SaldoFinanceiro'], meta: { name: 'SaldoFinanceiro' } }
    /**
     * Find zero or one SaldoFinanceiro that matches the filter.
     * @param {SaldoFinanceiroFindUniqueArgs} args - Arguments to find a SaldoFinanceiro
     * @example
     * // Get one SaldoFinanceiro
     * const saldoFinanceiro = await prisma.saldoFinanceiro.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SaldoFinanceiroFindUniqueArgs>(args: SelectSubset<T, SaldoFinanceiroFindUniqueArgs<ExtArgs>>): Prisma__SaldoFinanceiroClient<$Result.GetResult<Prisma.$SaldoFinanceiroPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SaldoFinanceiro that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SaldoFinanceiroFindUniqueOrThrowArgs} args - Arguments to find a SaldoFinanceiro
     * @example
     * // Get one SaldoFinanceiro
     * const saldoFinanceiro = await prisma.saldoFinanceiro.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SaldoFinanceiroFindUniqueOrThrowArgs>(args: SelectSubset<T, SaldoFinanceiroFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SaldoFinanceiroClient<$Result.GetResult<Prisma.$SaldoFinanceiroPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SaldoFinanceiro that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SaldoFinanceiroFindFirstArgs} args - Arguments to find a SaldoFinanceiro
     * @example
     * // Get one SaldoFinanceiro
     * const saldoFinanceiro = await prisma.saldoFinanceiro.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SaldoFinanceiroFindFirstArgs>(args?: SelectSubset<T, SaldoFinanceiroFindFirstArgs<ExtArgs>>): Prisma__SaldoFinanceiroClient<$Result.GetResult<Prisma.$SaldoFinanceiroPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SaldoFinanceiro that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SaldoFinanceiroFindFirstOrThrowArgs} args - Arguments to find a SaldoFinanceiro
     * @example
     * // Get one SaldoFinanceiro
     * const saldoFinanceiro = await prisma.saldoFinanceiro.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SaldoFinanceiroFindFirstOrThrowArgs>(args?: SelectSubset<T, SaldoFinanceiroFindFirstOrThrowArgs<ExtArgs>>): Prisma__SaldoFinanceiroClient<$Result.GetResult<Prisma.$SaldoFinanceiroPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SaldoFinanceiros that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SaldoFinanceiroFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SaldoFinanceiros
     * const saldoFinanceiros = await prisma.saldoFinanceiro.findMany()
     * 
     * // Get first 10 SaldoFinanceiros
     * const saldoFinanceiros = await prisma.saldoFinanceiro.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const saldoFinanceiroWithIdOnly = await prisma.saldoFinanceiro.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SaldoFinanceiroFindManyArgs>(args?: SelectSubset<T, SaldoFinanceiroFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SaldoFinanceiroPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SaldoFinanceiro.
     * @param {SaldoFinanceiroCreateArgs} args - Arguments to create a SaldoFinanceiro.
     * @example
     * // Create one SaldoFinanceiro
     * const SaldoFinanceiro = await prisma.saldoFinanceiro.create({
     *   data: {
     *     // ... data to create a SaldoFinanceiro
     *   }
     * })
     * 
     */
    create<T extends SaldoFinanceiroCreateArgs>(args: SelectSubset<T, SaldoFinanceiroCreateArgs<ExtArgs>>): Prisma__SaldoFinanceiroClient<$Result.GetResult<Prisma.$SaldoFinanceiroPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SaldoFinanceiros.
     * @param {SaldoFinanceiroCreateManyArgs} args - Arguments to create many SaldoFinanceiros.
     * @example
     * // Create many SaldoFinanceiros
     * const saldoFinanceiro = await prisma.saldoFinanceiro.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SaldoFinanceiroCreateManyArgs>(args?: SelectSubset<T, SaldoFinanceiroCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SaldoFinanceiros and returns the data saved in the database.
     * @param {SaldoFinanceiroCreateManyAndReturnArgs} args - Arguments to create many SaldoFinanceiros.
     * @example
     * // Create many SaldoFinanceiros
     * const saldoFinanceiro = await prisma.saldoFinanceiro.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SaldoFinanceiros and only return the `id`
     * const saldoFinanceiroWithIdOnly = await prisma.saldoFinanceiro.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SaldoFinanceiroCreateManyAndReturnArgs>(args?: SelectSubset<T, SaldoFinanceiroCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SaldoFinanceiroPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SaldoFinanceiro.
     * @param {SaldoFinanceiroDeleteArgs} args - Arguments to delete one SaldoFinanceiro.
     * @example
     * // Delete one SaldoFinanceiro
     * const SaldoFinanceiro = await prisma.saldoFinanceiro.delete({
     *   where: {
     *     // ... filter to delete one SaldoFinanceiro
     *   }
     * })
     * 
     */
    delete<T extends SaldoFinanceiroDeleteArgs>(args: SelectSubset<T, SaldoFinanceiroDeleteArgs<ExtArgs>>): Prisma__SaldoFinanceiroClient<$Result.GetResult<Prisma.$SaldoFinanceiroPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SaldoFinanceiro.
     * @param {SaldoFinanceiroUpdateArgs} args - Arguments to update one SaldoFinanceiro.
     * @example
     * // Update one SaldoFinanceiro
     * const saldoFinanceiro = await prisma.saldoFinanceiro.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SaldoFinanceiroUpdateArgs>(args: SelectSubset<T, SaldoFinanceiroUpdateArgs<ExtArgs>>): Prisma__SaldoFinanceiroClient<$Result.GetResult<Prisma.$SaldoFinanceiroPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SaldoFinanceiros.
     * @param {SaldoFinanceiroDeleteManyArgs} args - Arguments to filter SaldoFinanceiros to delete.
     * @example
     * // Delete a few SaldoFinanceiros
     * const { count } = await prisma.saldoFinanceiro.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SaldoFinanceiroDeleteManyArgs>(args?: SelectSubset<T, SaldoFinanceiroDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SaldoFinanceiros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SaldoFinanceiroUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SaldoFinanceiros
     * const saldoFinanceiro = await prisma.saldoFinanceiro.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SaldoFinanceiroUpdateManyArgs>(args: SelectSubset<T, SaldoFinanceiroUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SaldoFinanceiros and returns the data updated in the database.
     * @param {SaldoFinanceiroUpdateManyAndReturnArgs} args - Arguments to update many SaldoFinanceiros.
     * @example
     * // Update many SaldoFinanceiros
     * const saldoFinanceiro = await prisma.saldoFinanceiro.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SaldoFinanceiros and only return the `id`
     * const saldoFinanceiroWithIdOnly = await prisma.saldoFinanceiro.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SaldoFinanceiroUpdateManyAndReturnArgs>(args: SelectSubset<T, SaldoFinanceiroUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SaldoFinanceiroPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SaldoFinanceiro.
     * @param {SaldoFinanceiroUpsertArgs} args - Arguments to update or create a SaldoFinanceiro.
     * @example
     * // Update or create a SaldoFinanceiro
     * const saldoFinanceiro = await prisma.saldoFinanceiro.upsert({
     *   create: {
     *     // ... data to create a SaldoFinanceiro
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SaldoFinanceiro we want to update
     *   }
     * })
     */
    upsert<T extends SaldoFinanceiroUpsertArgs>(args: SelectSubset<T, SaldoFinanceiroUpsertArgs<ExtArgs>>): Prisma__SaldoFinanceiroClient<$Result.GetResult<Prisma.$SaldoFinanceiroPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SaldoFinanceiros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SaldoFinanceiroCountArgs} args - Arguments to filter SaldoFinanceiros to count.
     * @example
     * // Count the number of SaldoFinanceiros
     * const count = await prisma.saldoFinanceiro.count({
     *   where: {
     *     // ... the filter for the SaldoFinanceiros we want to count
     *   }
     * })
    **/
    count<T extends SaldoFinanceiroCountArgs>(
      args?: Subset<T, SaldoFinanceiroCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SaldoFinanceiroCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SaldoFinanceiro.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SaldoFinanceiroAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SaldoFinanceiroAggregateArgs>(args: Subset<T, SaldoFinanceiroAggregateArgs>): Prisma.PrismaPromise<GetSaldoFinanceiroAggregateType<T>>

    /**
     * Group by SaldoFinanceiro.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SaldoFinanceiroGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SaldoFinanceiroGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SaldoFinanceiroGroupByArgs['orderBy'] }
        : { orderBy?: SaldoFinanceiroGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SaldoFinanceiroGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSaldoFinanceiroGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SaldoFinanceiro model
   */
  readonly fields: SaldoFinanceiroFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SaldoFinanceiro.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SaldoFinanceiroClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    registro<T extends RegistroDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RegistroDefaultArgs<ExtArgs>>): Prisma__RegistroClient<$Result.GetResult<Prisma.$RegistroPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SaldoFinanceiro model
   */
  interface SaldoFinanceiroFieldRefs {
    readonly id: FieldRef<"SaldoFinanceiro", 'Int'>
    readonly regID: FieldRef<"SaldoFinanceiro", 'Int'>
    readonly saldo: FieldRef<"SaldoFinanceiro", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * SaldoFinanceiro findUnique
   */
  export type SaldoFinanceiroFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SaldoFinanceiro
     */
    select?: SaldoFinanceiroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SaldoFinanceiro
     */
    omit?: SaldoFinanceiroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SaldoFinanceiroInclude<ExtArgs> | null
    /**
     * Filter, which SaldoFinanceiro to fetch.
     */
    where: SaldoFinanceiroWhereUniqueInput
  }

  /**
   * SaldoFinanceiro findUniqueOrThrow
   */
  export type SaldoFinanceiroFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SaldoFinanceiro
     */
    select?: SaldoFinanceiroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SaldoFinanceiro
     */
    omit?: SaldoFinanceiroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SaldoFinanceiroInclude<ExtArgs> | null
    /**
     * Filter, which SaldoFinanceiro to fetch.
     */
    where: SaldoFinanceiroWhereUniqueInput
  }

  /**
   * SaldoFinanceiro findFirst
   */
  export type SaldoFinanceiroFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SaldoFinanceiro
     */
    select?: SaldoFinanceiroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SaldoFinanceiro
     */
    omit?: SaldoFinanceiroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SaldoFinanceiroInclude<ExtArgs> | null
    /**
     * Filter, which SaldoFinanceiro to fetch.
     */
    where?: SaldoFinanceiroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SaldoFinanceiros to fetch.
     */
    orderBy?: SaldoFinanceiroOrderByWithRelationInput | SaldoFinanceiroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SaldoFinanceiros.
     */
    cursor?: SaldoFinanceiroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SaldoFinanceiros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SaldoFinanceiros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SaldoFinanceiros.
     */
    distinct?: SaldoFinanceiroScalarFieldEnum | SaldoFinanceiroScalarFieldEnum[]
  }

  /**
   * SaldoFinanceiro findFirstOrThrow
   */
  export type SaldoFinanceiroFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SaldoFinanceiro
     */
    select?: SaldoFinanceiroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SaldoFinanceiro
     */
    omit?: SaldoFinanceiroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SaldoFinanceiroInclude<ExtArgs> | null
    /**
     * Filter, which SaldoFinanceiro to fetch.
     */
    where?: SaldoFinanceiroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SaldoFinanceiros to fetch.
     */
    orderBy?: SaldoFinanceiroOrderByWithRelationInput | SaldoFinanceiroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SaldoFinanceiros.
     */
    cursor?: SaldoFinanceiroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SaldoFinanceiros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SaldoFinanceiros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SaldoFinanceiros.
     */
    distinct?: SaldoFinanceiroScalarFieldEnum | SaldoFinanceiroScalarFieldEnum[]
  }

  /**
   * SaldoFinanceiro findMany
   */
  export type SaldoFinanceiroFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SaldoFinanceiro
     */
    select?: SaldoFinanceiroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SaldoFinanceiro
     */
    omit?: SaldoFinanceiroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SaldoFinanceiroInclude<ExtArgs> | null
    /**
     * Filter, which SaldoFinanceiros to fetch.
     */
    where?: SaldoFinanceiroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SaldoFinanceiros to fetch.
     */
    orderBy?: SaldoFinanceiroOrderByWithRelationInput | SaldoFinanceiroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SaldoFinanceiros.
     */
    cursor?: SaldoFinanceiroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SaldoFinanceiros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SaldoFinanceiros.
     */
    skip?: number
    distinct?: SaldoFinanceiroScalarFieldEnum | SaldoFinanceiroScalarFieldEnum[]
  }

  /**
   * SaldoFinanceiro create
   */
  export type SaldoFinanceiroCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SaldoFinanceiro
     */
    select?: SaldoFinanceiroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SaldoFinanceiro
     */
    omit?: SaldoFinanceiroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SaldoFinanceiroInclude<ExtArgs> | null
    /**
     * The data needed to create a SaldoFinanceiro.
     */
    data: XOR<SaldoFinanceiroCreateInput, SaldoFinanceiroUncheckedCreateInput>
  }

  /**
   * SaldoFinanceiro createMany
   */
  export type SaldoFinanceiroCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SaldoFinanceiros.
     */
    data: SaldoFinanceiroCreateManyInput | SaldoFinanceiroCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SaldoFinanceiro createManyAndReturn
   */
  export type SaldoFinanceiroCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SaldoFinanceiro
     */
    select?: SaldoFinanceiroSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SaldoFinanceiro
     */
    omit?: SaldoFinanceiroOmit<ExtArgs> | null
    /**
     * The data used to create many SaldoFinanceiros.
     */
    data: SaldoFinanceiroCreateManyInput | SaldoFinanceiroCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SaldoFinanceiroIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SaldoFinanceiro update
   */
  export type SaldoFinanceiroUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SaldoFinanceiro
     */
    select?: SaldoFinanceiroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SaldoFinanceiro
     */
    omit?: SaldoFinanceiroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SaldoFinanceiroInclude<ExtArgs> | null
    /**
     * The data needed to update a SaldoFinanceiro.
     */
    data: XOR<SaldoFinanceiroUpdateInput, SaldoFinanceiroUncheckedUpdateInput>
    /**
     * Choose, which SaldoFinanceiro to update.
     */
    where: SaldoFinanceiroWhereUniqueInput
  }

  /**
   * SaldoFinanceiro updateMany
   */
  export type SaldoFinanceiroUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SaldoFinanceiros.
     */
    data: XOR<SaldoFinanceiroUpdateManyMutationInput, SaldoFinanceiroUncheckedUpdateManyInput>
    /**
     * Filter which SaldoFinanceiros to update
     */
    where?: SaldoFinanceiroWhereInput
    /**
     * Limit how many SaldoFinanceiros to update.
     */
    limit?: number
  }

  /**
   * SaldoFinanceiro updateManyAndReturn
   */
  export type SaldoFinanceiroUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SaldoFinanceiro
     */
    select?: SaldoFinanceiroSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SaldoFinanceiro
     */
    omit?: SaldoFinanceiroOmit<ExtArgs> | null
    /**
     * The data used to update SaldoFinanceiros.
     */
    data: XOR<SaldoFinanceiroUpdateManyMutationInput, SaldoFinanceiroUncheckedUpdateManyInput>
    /**
     * Filter which SaldoFinanceiros to update
     */
    where?: SaldoFinanceiroWhereInput
    /**
     * Limit how many SaldoFinanceiros to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SaldoFinanceiroIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * SaldoFinanceiro upsert
   */
  export type SaldoFinanceiroUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SaldoFinanceiro
     */
    select?: SaldoFinanceiroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SaldoFinanceiro
     */
    omit?: SaldoFinanceiroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SaldoFinanceiroInclude<ExtArgs> | null
    /**
     * The filter to search for the SaldoFinanceiro to update in case it exists.
     */
    where: SaldoFinanceiroWhereUniqueInput
    /**
     * In case the SaldoFinanceiro found by the `where` argument doesn't exist, create a new SaldoFinanceiro with this data.
     */
    create: XOR<SaldoFinanceiroCreateInput, SaldoFinanceiroUncheckedCreateInput>
    /**
     * In case the SaldoFinanceiro was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SaldoFinanceiroUpdateInput, SaldoFinanceiroUncheckedUpdateInput>
  }

  /**
   * SaldoFinanceiro delete
   */
  export type SaldoFinanceiroDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SaldoFinanceiro
     */
    select?: SaldoFinanceiroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SaldoFinanceiro
     */
    omit?: SaldoFinanceiroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SaldoFinanceiroInclude<ExtArgs> | null
    /**
     * Filter which SaldoFinanceiro to delete.
     */
    where: SaldoFinanceiroWhereUniqueInput
  }

  /**
   * SaldoFinanceiro deleteMany
   */
  export type SaldoFinanceiroDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SaldoFinanceiros to delete
     */
    where?: SaldoFinanceiroWhereInput
    /**
     * Limit how many SaldoFinanceiros to delete.
     */
    limit?: number
  }

  /**
   * SaldoFinanceiro without action
   */
  export type SaldoFinanceiroDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SaldoFinanceiro
     */
    select?: SaldoFinanceiroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SaldoFinanceiro
     */
    omit?: SaldoFinanceiroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SaldoFinanceiroInclude<ExtArgs> | null
  }


  /**
   * Model Endereco
   */

  export type AggregateEndereco = {
    _count: EnderecoCountAggregateOutputType | null
    _avg: EnderecoAvgAggregateOutputType | null
    _sum: EnderecoSumAggregateOutputType | null
    _min: EnderecoMinAggregateOutputType | null
    _max: EnderecoMaxAggregateOutputType | null
  }

  export type EnderecoAvgAggregateOutputType = {
    id: number | null
    regID: number | null
  }

  export type EnderecoSumAggregateOutputType = {
    id: number | null
    regID: number | null
  }

  export type EnderecoMinAggregateOutputType = {
    id: number | null
    regID: number | null
    estado: string | null
    cidade: string | null
    bairro: string | null
    logradouro: string | null
    numero: string | null
    complemento: string | null
  }

  export type EnderecoMaxAggregateOutputType = {
    id: number | null
    regID: number | null
    estado: string | null
    cidade: string | null
    bairro: string | null
    logradouro: string | null
    numero: string | null
    complemento: string | null
  }

  export type EnderecoCountAggregateOutputType = {
    id: number
    regID: number
    estado: number
    cidade: number
    bairro: number
    logradouro: number
    numero: number
    complemento: number
    _all: number
  }


  export type EnderecoAvgAggregateInputType = {
    id?: true
    regID?: true
  }

  export type EnderecoSumAggregateInputType = {
    id?: true
    regID?: true
  }

  export type EnderecoMinAggregateInputType = {
    id?: true
    regID?: true
    estado?: true
    cidade?: true
    bairro?: true
    logradouro?: true
    numero?: true
    complemento?: true
  }

  export type EnderecoMaxAggregateInputType = {
    id?: true
    regID?: true
    estado?: true
    cidade?: true
    bairro?: true
    logradouro?: true
    numero?: true
    complemento?: true
  }

  export type EnderecoCountAggregateInputType = {
    id?: true
    regID?: true
    estado?: true
    cidade?: true
    bairro?: true
    logradouro?: true
    numero?: true
    complemento?: true
    _all?: true
  }

  export type EnderecoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Endereco to aggregate.
     */
    where?: EnderecoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Enderecos to fetch.
     */
    orderBy?: EnderecoOrderByWithRelationInput | EnderecoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EnderecoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Enderecos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Enderecos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Enderecos
    **/
    _count?: true | EnderecoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EnderecoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EnderecoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EnderecoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EnderecoMaxAggregateInputType
  }

  export type GetEnderecoAggregateType<T extends EnderecoAggregateArgs> = {
        [P in keyof T & keyof AggregateEndereco]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEndereco[P]>
      : GetScalarType<T[P], AggregateEndereco[P]>
  }




  export type EnderecoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EnderecoWhereInput
    orderBy?: EnderecoOrderByWithAggregationInput | EnderecoOrderByWithAggregationInput[]
    by: EnderecoScalarFieldEnum[] | EnderecoScalarFieldEnum
    having?: EnderecoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EnderecoCountAggregateInputType | true
    _avg?: EnderecoAvgAggregateInputType
    _sum?: EnderecoSumAggregateInputType
    _min?: EnderecoMinAggregateInputType
    _max?: EnderecoMaxAggregateInputType
  }

  export type EnderecoGroupByOutputType = {
    id: number
    regID: number
    estado: string | null
    cidade: string | null
    bairro: string | null
    logradouro: string | null
    numero: string | null
    complemento: string | null
    _count: EnderecoCountAggregateOutputType | null
    _avg: EnderecoAvgAggregateOutputType | null
    _sum: EnderecoSumAggregateOutputType | null
    _min: EnderecoMinAggregateOutputType | null
    _max: EnderecoMaxAggregateOutputType | null
  }

  type GetEnderecoGroupByPayload<T extends EnderecoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EnderecoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EnderecoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EnderecoGroupByOutputType[P]>
            : GetScalarType<T[P], EnderecoGroupByOutputType[P]>
        }
      >
    >


  export type EnderecoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    regID?: boolean
    estado?: boolean
    cidade?: boolean
    bairro?: boolean
    logradouro?: boolean
    numero?: boolean
    complemento?: boolean
    registro?: boolean | RegistroDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["endereco"]>

  export type EnderecoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    regID?: boolean
    estado?: boolean
    cidade?: boolean
    bairro?: boolean
    logradouro?: boolean
    numero?: boolean
    complemento?: boolean
    registro?: boolean | RegistroDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["endereco"]>

  export type EnderecoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    regID?: boolean
    estado?: boolean
    cidade?: boolean
    bairro?: boolean
    logradouro?: boolean
    numero?: boolean
    complemento?: boolean
    registro?: boolean | RegistroDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["endereco"]>

  export type EnderecoSelectScalar = {
    id?: boolean
    regID?: boolean
    estado?: boolean
    cidade?: boolean
    bairro?: boolean
    logradouro?: boolean
    numero?: boolean
    complemento?: boolean
  }

  export type EnderecoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "regID" | "estado" | "cidade" | "bairro" | "logradouro" | "numero" | "complemento", ExtArgs["result"]["endereco"]>
  export type EnderecoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    registro?: boolean | RegistroDefaultArgs<ExtArgs>
  }
  export type EnderecoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    registro?: boolean | RegistroDefaultArgs<ExtArgs>
  }
  export type EnderecoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    registro?: boolean | RegistroDefaultArgs<ExtArgs>
  }

  export type $EnderecoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Endereco"
    objects: {
      registro: Prisma.$RegistroPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      regID: number
      estado: string | null
      cidade: string | null
      bairro: string | null
      logradouro: string | null
      numero: string | null
      complemento: string | null
    }, ExtArgs["result"]["endereco"]>
    composites: {}
  }

  type EnderecoGetPayload<S extends boolean | null | undefined | EnderecoDefaultArgs> = $Result.GetResult<Prisma.$EnderecoPayload, S>

  type EnderecoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EnderecoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EnderecoCountAggregateInputType | true
    }

  export interface EnderecoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Endereco'], meta: { name: 'Endereco' } }
    /**
     * Find zero or one Endereco that matches the filter.
     * @param {EnderecoFindUniqueArgs} args - Arguments to find a Endereco
     * @example
     * // Get one Endereco
     * const endereco = await prisma.endereco.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EnderecoFindUniqueArgs>(args: SelectSubset<T, EnderecoFindUniqueArgs<ExtArgs>>): Prisma__EnderecoClient<$Result.GetResult<Prisma.$EnderecoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Endereco that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EnderecoFindUniqueOrThrowArgs} args - Arguments to find a Endereco
     * @example
     * // Get one Endereco
     * const endereco = await prisma.endereco.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EnderecoFindUniqueOrThrowArgs>(args: SelectSubset<T, EnderecoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EnderecoClient<$Result.GetResult<Prisma.$EnderecoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Endereco that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EnderecoFindFirstArgs} args - Arguments to find a Endereco
     * @example
     * // Get one Endereco
     * const endereco = await prisma.endereco.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EnderecoFindFirstArgs>(args?: SelectSubset<T, EnderecoFindFirstArgs<ExtArgs>>): Prisma__EnderecoClient<$Result.GetResult<Prisma.$EnderecoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Endereco that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EnderecoFindFirstOrThrowArgs} args - Arguments to find a Endereco
     * @example
     * // Get one Endereco
     * const endereco = await prisma.endereco.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EnderecoFindFirstOrThrowArgs>(args?: SelectSubset<T, EnderecoFindFirstOrThrowArgs<ExtArgs>>): Prisma__EnderecoClient<$Result.GetResult<Prisma.$EnderecoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Enderecos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EnderecoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Enderecos
     * const enderecos = await prisma.endereco.findMany()
     * 
     * // Get first 10 Enderecos
     * const enderecos = await prisma.endereco.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const enderecoWithIdOnly = await prisma.endereco.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EnderecoFindManyArgs>(args?: SelectSubset<T, EnderecoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EnderecoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Endereco.
     * @param {EnderecoCreateArgs} args - Arguments to create a Endereco.
     * @example
     * // Create one Endereco
     * const Endereco = await prisma.endereco.create({
     *   data: {
     *     // ... data to create a Endereco
     *   }
     * })
     * 
     */
    create<T extends EnderecoCreateArgs>(args: SelectSubset<T, EnderecoCreateArgs<ExtArgs>>): Prisma__EnderecoClient<$Result.GetResult<Prisma.$EnderecoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Enderecos.
     * @param {EnderecoCreateManyArgs} args - Arguments to create many Enderecos.
     * @example
     * // Create many Enderecos
     * const endereco = await prisma.endereco.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EnderecoCreateManyArgs>(args?: SelectSubset<T, EnderecoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Enderecos and returns the data saved in the database.
     * @param {EnderecoCreateManyAndReturnArgs} args - Arguments to create many Enderecos.
     * @example
     * // Create many Enderecos
     * const endereco = await prisma.endereco.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Enderecos and only return the `id`
     * const enderecoWithIdOnly = await prisma.endereco.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EnderecoCreateManyAndReturnArgs>(args?: SelectSubset<T, EnderecoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EnderecoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Endereco.
     * @param {EnderecoDeleteArgs} args - Arguments to delete one Endereco.
     * @example
     * // Delete one Endereco
     * const Endereco = await prisma.endereco.delete({
     *   where: {
     *     // ... filter to delete one Endereco
     *   }
     * })
     * 
     */
    delete<T extends EnderecoDeleteArgs>(args: SelectSubset<T, EnderecoDeleteArgs<ExtArgs>>): Prisma__EnderecoClient<$Result.GetResult<Prisma.$EnderecoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Endereco.
     * @param {EnderecoUpdateArgs} args - Arguments to update one Endereco.
     * @example
     * // Update one Endereco
     * const endereco = await prisma.endereco.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EnderecoUpdateArgs>(args: SelectSubset<T, EnderecoUpdateArgs<ExtArgs>>): Prisma__EnderecoClient<$Result.GetResult<Prisma.$EnderecoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Enderecos.
     * @param {EnderecoDeleteManyArgs} args - Arguments to filter Enderecos to delete.
     * @example
     * // Delete a few Enderecos
     * const { count } = await prisma.endereco.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EnderecoDeleteManyArgs>(args?: SelectSubset<T, EnderecoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Enderecos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EnderecoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Enderecos
     * const endereco = await prisma.endereco.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EnderecoUpdateManyArgs>(args: SelectSubset<T, EnderecoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Enderecos and returns the data updated in the database.
     * @param {EnderecoUpdateManyAndReturnArgs} args - Arguments to update many Enderecos.
     * @example
     * // Update many Enderecos
     * const endereco = await prisma.endereco.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Enderecos and only return the `id`
     * const enderecoWithIdOnly = await prisma.endereco.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EnderecoUpdateManyAndReturnArgs>(args: SelectSubset<T, EnderecoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EnderecoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Endereco.
     * @param {EnderecoUpsertArgs} args - Arguments to update or create a Endereco.
     * @example
     * // Update or create a Endereco
     * const endereco = await prisma.endereco.upsert({
     *   create: {
     *     // ... data to create a Endereco
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Endereco we want to update
     *   }
     * })
     */
    upsert<T extends EnderecoUpsertArgs>(args: SelectSubset<T, EnderecoUpsertArgs<ExtArgs>>): Prisma__EnderecoClient<$Result.GetResult<Prisma.$EnderecoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Enderecos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EnderecoCountArgs} args - Arguments to filter Enderecos to count.
     * @example
     * // Count the number of Enderecos
     * const count = await prisma.endereco.count({
     *   where: {
     *     // ... the filter for the Enderecos we want to count
     *   }
     * })
    **/
    count<T extends EnderecoCountArgs>(
      args?: Subset<T, EnderecoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EnderecoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Endereco.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EnderecoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EnderecoAggregateArgs>(args: Subset<T, EnderecoAggregateArgs>): Prisma.PrismaPromise<GetEnderecoAggregateType<T>>

    /**
     * Group by Endereco.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EnderecoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EnderecoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EnderecoGroupByArgs['orderBy'] }
        : { orderBy?: EnderecoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EnderecoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEnderecoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Endereco model
   */
  readonly fields: EnderecoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Endereco.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EnderecoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    registro<T extends RegistroDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RegistroDefaultArgs<ExtArgs>>): Prisma__RegistroClient<$Result.GetResult<Prisma.$RegistroPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Endereco model
   */
  interface EnderecoFieldRefs {
    readonly id: FieldRef<"Endereco", 'Int'>
    readonly regID: FieldRef<"Endereco", 'Int'>
    readonly estado: FieldRef<"Endereco", 'String'>
    readonly cidade: FieldRef<"Endereco", 'String'>
    readonly bairro: FieldRef<"Endereco", 'String'>
    readonly logradouro: FieldRef<"Endereco", 'String'>
    readonly numero: FieldRef<"Endereco", 'String'>
    readonly complemento: FieldRef<"Endereco", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Endereco findUnique
   */
  export type EnderecoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Endereco
     */
    select?: EnderecoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Endereco
     */
    omit?: EnderecoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoInclude<ExtArgs> | null
    /**
     * Filter, which Endereco to fetch.
     */
    where: EnderecoWhereUniqueInput
  }

  /**
   * Endereco findUniqueOrThrow
   */
  export type EnderecoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Endereco
     */
    select?: EnderecoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Endereco
     */
    omit?: EnderecoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoInclude<ExtArgs> | null
    /**
     * Filter, which Endereco to fetch.
     */
    where: EnderecoWhereUniqueInput
  }

  /**
   * Endereco findFirst
   */
  export type EnderecoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Endereco
     */
    select?: EnderecoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Endereco
     */
    omit?: EnderecoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoInclude<ExtArgs> | null
    /**
     * Filter, which Endereco to fetch.
     */
    where?: EnderecoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Enderecos to fetch.
     */
    orderBy?: EnderecoOrderByWithRelationInput | EnderecoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Enderecos.
     */
    cursor?: EnderecoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Enderecos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Enderecos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Enderecos.
     */
    distinct?: EnderecoScalarFieldEnum | EnderecoScalarFieldEnum[]
  }

  /**
   * Endereco findFirstOrThrow
   */
  export type EnderecoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Endereco
     */
    select?: EnderecoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Endereco
     */
    omit?: EnderecoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoInclude<ExtArgs> | null
    /**
     * Filter, which Endereco to fetch.
     */
    where?: EnderecoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Enderecos to fetch.
     */
    orderBy?: EnderecoOrderByWithRelationInput | EnderecoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Enderecos.
     */
    cursor?: EnderecoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Enderecos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Enderecos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Enderecos.
     */
    distinct?: EnderecoScalarFieldEnum | EnderecoScalarFieldEnum[]
  }

  /**
   * Endereco findMany
   */
  export type EnderecoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Endereco
     */
    select?: EnderecoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Endereco
     */
    omit?: EnderecoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoInclude<ExtArgs> | null
    /**
     * Filter, which Enderecos to fetch.
     */
    where?: EnderecoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Enderecos to fetch.
     */
    orderBy?: EnderecoOrderByWithRelationInput | EnderecoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Enderecos.
     */
    cursor?: EnderecoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Enderecos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Enderecos.
     */
    skip?: number
    distinct?: EnderecoScalarFieldEnum | EnderecoScalarFieldEnum[]
  }

  /**
   * Endereco create
   */
  export type EnderecoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Endereco
     */
    select?: EnderecoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Endereco
     */
    omit?: EnderecoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoInclude<ExtArgs> | null
    /**
     * The data needed to create a Endereco.
     */
    data: XOR<EnderecoCreateInput, EnderecoUncheckedCreateInput>
  }

  /**
   * Endereco createMany
   */
  export type EnderecoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Enderecos.
     */
    data: EnderecoCreateManyInput | EnderecoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Endereco createManyAndReturn
   */
  export type EnderecoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Endereco
     */
    select?: EnderecoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Endereco
     */
    omit?: EnderecoOmit<ExtArgs> | null
    /**
     * The data used to create many Enderecos.
     */
    data: EnderecoCreateManyInput | EnderecoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Endereco update
   */
  export type EnderecoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Endereco
     */
    select?: EnderecoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Endereco
     */
    omit?: EnderecoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoInclude<ExtArgs> | null
    /**
     * The data needed to update a Endereco.
     */
    data: XOR<EnderecoUpdateInput, EnderecoUncheckedUpdateInput>
    /**
     * Choose, which Endereco to update.
     */
    where: EnderecoWhereUniqueInput
  }

  /**
   * Endereco updateMany
   */
  export type EnderecoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Enderecos.
     */
    data: XOR<EnderecoUpdateManyMutationInput, EnderecoUncheckedUpdateManyInput>
    /**
     * Filter which Enderecos to update
     */
    where?: EnderecoWhereInput
    /**
     * Limit how many Enderecos to update.
     */
    limit?: number
  }

  /**
   * Endereco updateManyAndReturn
   */
  export type EnderecoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Endereco
     */
    select?: EnderecoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Endereco
     */
    omit?: EnderecoOmit<ExtArgs> | null
    /**
     * The data used to update Enderecos.
     */
    data: XOR<EnderecoUpdateManyMutationInput, EnderecoUncheckedUpdateManyInput>
    /**
     * Filter which Enderecos to update
     */
    where?: EnderecoWhereInput
    /**
     * Limit how many Enderecos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Endereco upsert
   */
  export type EnderecoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Endereco
     */
    select?: EnderecoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Endereco
     */
    omit?: EnderecoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoInclude<ExtArgs> | null
    /**
     * The filter to search for the Endereco to update in case it exists.
     */
    where: EnderecoWhereUniqueInput
    /**
     * In case the Endereco found by the `where` argument doesn't exist, create a new Endereco with this data.
     */
    create: XOR<EnderecoCreateInput, EnderecoUncheckedCreateInput>
    /**
     * In case the Endereco was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EnderecoUpdateInput, EnderecoUncheckedUpdateInput>
  }

  /**
   * Endereco delete
   */
  export type EnderecoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Endereco
     */
    select?: EnderecoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Endereco
     */
    omit?: EnderecoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoInclude<ExtArgs> | null
    /**
     * Filter which Endereco to delete.
     */
    where: EnderecoWhereUniqueInput
  }

  /**
   * Endereco deleteMany
   */
  export type EnderecoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Enderecos to delete
     */
    where?: EnderecoWhereInput
    /**
     * Limit how many Enderecos to delete.
     */
    limit?: number
  }

  /**
   * Endereco without action
   */
  export type EnderecoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Endereco
     */
    select?: EnderecoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Endereco
     */
    omit?: EnderecoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EnderecoInclude<ExtArgs> | null
  }


  /**
   * Model DadosPagamento
   */

  export type AggregateDadosPagamento = {
    _count: DadosPagamentoCountAggregateOutputType | null
    _avg: DadosPagamentoAvgAggregateOutputType | null
    _sum: DadosPagamentoSumAggregateOutputType | null
    _min: DadosPagamentoMinAggregateOutputType | null
    _max: DadosPagamentoMaxAggregateOutputType | null
  }

  export type DadosPagamentoAvgAggregateOutputType = {
    id: number | null
    agencia: number | null
    conta: number | null
    regID: number | null
  }

  export type DadosPagamentoSumAggregateOutputType = {
    id: number | null
    agencia: number | null
    conta: number | null
    regID: number | null
  }

  export type DadosPagamentoMinAggregateOutputType = {
    id: number | null
    banco: string | null
    agencia: number | null
    conta: number | null
    chave: string | null
    cpf: string | null
    regID: number | null
  }

  export type DadosPagamentoMaxAggregateOutputType = {
    id: number | null
    banco: string | null
    agencia: number | null
    conta: number | null
    chave: string | null
    cpf: string | null
    regID: number | null
  }

  export type DadosPagamentoCountAggregateOutputType = {
    id: number
    banco: number
    agencia: number
    conta: number
    chave: number
    cpf: number
    regID: number
    _all: number
  }


  export type DadosPagamentoAvgAggregateInputType = {
    id?: true
    agencia?: true
    conta?: true
    regID?: true
  }

  export type DadosPagamentoSumAggregateInputType = {
    id?: true
    agencia?: true
    conta?: true
    regID?: true
  }

  export type DadosPagamentoMinAggregateInputType = {
    id?: true
    banco?: true
    agencia?: true
    conta?: true
    chave?: true
    cpf?: true
    regID?: true
  }

  export type DadosPagamentoMaxAggregateInputType = {
    id?: true
    banco?: true
    agencia?: true
    conta?: true
    chave?: true
    cpf?: true
    regID?: true
  }

  export type DadosPagamentoCountAggregateInputType = {
    id?: true
    banco?: true
    agencia?: true
    conta?: true
    chave?: true
    cpf?: true
    regID?: true
    _all?: true
  }

  export type DadosPagamentoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DadosPagamento to aggregate.
     */
    where?: DadosPagamentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DadosPagamentos to fetch.
     */
    orderBy?: DadosPagamentoOrderByWithRelationInput | DadosPagamentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DadosPagamentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DadosPagamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DadosPagamentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DadosPagamentos
    **/
    _count?: true | DadosPagamentoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DadosPagamentoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DadosPagamentoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DadosPagamentoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DadosPagamentoMaxAggregateInputType
  }

  export type GetDadosPagamentoAggregateType<T extends DadosPagamentoAggregateArgs> = {
        [P in keyof T & keyof AggregateDadosPagamento]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDadosPagamento[P]>
      : GetScalarType<T[P], AggregateDadosPagamento[P]>
  }




  export type DadosPagamentoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DadosPagamentoWhereInput
    orderBy?: DadosPagamentoOrderByWithAggregationInput | DadosPagamentoOrderByWithAggregationInput[]
    by: DadosPagamentoScalarFieldEnum[] | DadosPagamentoScalarFieldEnum
    having?: DadosPagamentoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DadosPagamentoCountAggregateInputType | true
    _avg?: DadosPagamentoAvgAggregateInputType
    _sum?: DadosPagamentoSumAggregateInputType
    _min?: DadosPagamentoMinAggregateInputType
    _max?: DadosPagamentoMaxAggregateInputType
  }

  export type DadosPagamentoGroupByOutputType = {
    id: number
    banco: string | null
    agencia: number | null
    conta: number | null
    chave: string | null
    cpf: string | null
    regID: number
    _count: DadosPagamentoCountAggregateOutputType | null
    _avg: DadosPagamentoAvgAggregateOutputType | null
    _sum: DadosPagamentoSumAggregateOutputType | null
    _min: DadosPagamentoMinAggregateOutputType | null
    _max: DadosPagamentoMaxAggregateOutputType | null
  }

  type GetDadosPagamentoGroupByPayload<T extends DadosPagamentoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DadosPagamentoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DadosPagamentoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DadosPagamentoGroupByOutputType[P]>
            : GetScalarType<T[P], DadosPagamentoGroupByOutputType[P]>
        }
      >
    >


  export type DadosPagamentoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    banco?: boolean
    agencia?: boolean
    conta?: boolean
    chave?: boolean
    cpf?: boolean
    regID?: boolean
    registro?: boolean | RegistroDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["dadosPagamento"]>

  export type DadosPagamentoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    banco?: boolean
    agencia?: boolean
    conta?: boolean
    chave?: boolean
    cpf?: boolean
    regID?: boolean
    registro?: boolean | RegistroDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["dadosPagamento"]>

  export type DadosPagamentoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    banco?: boolean
    agencia?: boolean
    conta?: boolean
    chave?: boolean
    cpf?: boolean
    regID?: boolean
    registro?: boolean | RegistroDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["dadosPagamento"]>

  export type DadosPagamentoSelectScalar = {
    id?: boolean
    banco?: boolean
    agencia?: boolean
    conta?: boolean
    chave?: boolean
    cpf?: boolean
    regID?: boolean
  }

  export type DadosPagamentoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "banco" | "agencia" | "conta" | "chave" | "cpf" | "regID", ExtArgs["result"]["dadosPagamento"]>
  export type DadosPagamentoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    registro?: boolean | RegistroDefaultArgs<ExtArgs>
  }
  export type DadosPagamentoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    registro?: boolean | RegistroDefaultArgs<ExtArgs>
  }
  export type DadosPagamentoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    registro?: boolean | RegistroDefaultArgs<ExtArgs>
  }

  export type $DadosPagamentoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DadosPagamento"
    objects: {
      registro: Prisma.$RegistroPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      banco: string | null
      agencia: number | null
      conta: number | null
      chave: string | null
      cpf: string | null
      regID: number
    }, ExtArgs["result"]["dadosPagamento"]>
    composites: {}
  }

  type DadosPagamentoGetPayload<S extends boolean | null | undefined | DadosPagamentoDefaultArgs> = $Result.GetResult<Prisma.$DadosPagamentoPayload, S>

  type DadosPagamentoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DadosPagamentoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DadosPagamentoCountAggregateInputType | true
    }

  export interface DadosPagamentoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DadosPagamento'], meta: { name: 'DadosPagamento' } }
    /**
     * Find zero or one DadosPagamento that matches the filter.
     * @param {DadosPagamentoFindUniqueArgs} args - Arguments to find a DadosPagamento
     * @example
     * // Get one DadosPagamento
     * const dadosPagamento = await prisma.dadosPagamento.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DadosPagamentoFindUniqueArgs>(args: SelectSubset<T, DadosPagamentoFindUniqueArgs<ExtArgs>>): Prisma__DadosPagamentoClient<$Result.GetResult<Prisma.$DadosPagamentoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one DadosPagamento that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DadosPagamentoFindUniqueOrThrowArgs} args - Arguments to find a DadosPagamento
     * @example
     * // Get one DadosPagamento
     * const dadosPagamento = await prisma.dadosPagamento.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DadosPagamentoFindUniqueOrThrowArgs>(args: SelectSubset<T, DadosPagamentoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DadosPagamentoClient<$Result.GetResult<Prisma.$DadosPagamentoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DadosPagamento that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DadosPagamentoFindFirstArgs} args - Arguments to find a DadosPagamento
     * @example
     * // Get one DadosPagamento
     * const dadosPagamento = await prisma.dadosPagamento.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DadosPagamentoFindFirstArgs>(args?: SelectSubset<T, DadosPagamentoFindFirstArgs<ExtArgs>>): Prisma__DadosPagamentoClient<$Result.GetResult<Prisma.$DadosPagamentoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DadosPagamento that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DadosPagamentoFindFirstOrThrowArgs} args - Arguments to find a DadosPagamento
     * @example
     * // Get one DadosPagamento
     * const dadosPagamento = await prisma.dadosPagamento.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DadosPagamentoFindFirstOrThrowArgs>(args?: SelectSubset<T, DadosPagamentoFindFirstOrThrowArgs<ExtArgs>>): Prisma__DadosPagamentoClient<$Result.GetResult<Prisma.$DadosPagamentoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more DadosPagamentos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DadosPagamentoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DadosPagamentos
     * const dadosPagamentos = await prisma.dadosPagamento.findMany()
     * 
     * // Get first 10 DadosPagamentos
     * const dadosPagamentos = await prisma.dadosPagamento.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const dadosPagamentoWithIdOnly = await prisma.dadosPagamento.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DadosPagamentoFindManyArgs>(args?: SelectSubset<T, DadosPagamentoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DadosPagamentoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a DadosPagamento.
     * @param {DadosPagamentoCreateArgs} args - Arguments to create a DadosPagamento.
     * @example
     * // Create one DadosPagamento
     * const DadosPagamento = await prisma.dadosPagamento.create({
     *   data: {
     *     // ... data to create a DadosPagamento
     *   }
     * })
     * 
     */
    create<T extends DadosPagamentoCreateArgs>(args: SelectSubset<T, DadosPagamentoCreateArgs<ExtArgs>>): Prisma__DadosPagamentoClient<$Result.GetResult<Prisma.$DadosPagamentoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many DadosPagamentos.
     * @param {DadosPagamentoCreateManyArgs} args - Arguments to create many DadosPagamentos.
     * @example
     * // Create many DadosPagamentos
     * const dadosPagamento = await prisma.dadosPagamento.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DadosPagamentoCreateManyArgs>(args?: SelectSubset<T, DadosPagamentoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many DadosPagamentos and returns the data saved in the database.
     * @param {DadosPagamentoCreateManyAndReturnArgs} args - Arguments to create many DadosPagamentos.
     * @example
     * // Create many DadosPagamentos
     * const dadosPagamento = await prisma.dadosPagamento.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many DadosPagamentos and only return the `id`
     * const dadosPagamentoWithIdOnly = await prisma.dadosPagamento.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DadosPagamentoCreateManyAndReturnArgs>(args?: SelectSubset<T, DadosPagamentoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DadosPagamentoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a DadosPagamento.
     * @param {DadosPagamentoDeleteArgs} args - Arguments to delete one DadosPagamento.
     * @example
     * // Delete one DadosPagamento
     * const DadosPagamento = await prisma.dadosPagamento.delete({
     *   where: {
     *     // ... filter to delete one DadosPagamento
     *   }
     * })
     * 
     */
    delete<T extends DadosPagamentoDeleteArgs>(args: SelectSubset<T, DadosPagamentoDeleteArgs<ExtArgs>>): Prisma__DadosPagamentoClient<$Result.GetResult<Prisma.$DadosPagamentoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one DadosPagamento.
     * @param {DadosPagamentoUpdateArgs} args - Arguments to update one DadosPagamento.
     * @example
     * // Update one DadosPagamento
     * const dadosPagamento = await prisma.dadosPagamento.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DadosPagamentoUpdateArgs>(args: SelectSubset<T, DadosPagamentoUpdateArgs<ExtArgs>>): Prisma__DadosPagamentoClient<$Result.GetResult<Prisma.$DadosPagamentoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more DadosPagamentos.
     * @param {DadosPagamentoDeleteManyArgs} args - Arguments to filter DadosPagamentos to delete.
     * @example
     * // Delete a few DadosPagamentos
     * const { count } = await prisma.dadosPagamento.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DadosPagamentoDeleteManyArgs>(args?: SelectSubset<T, DadosPagamentoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DadosPagamentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DadosPagamentoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DadosPagamentos
     * const dadosPagamento = await prisma.dadosPagamento.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DadosPagamentoUpdateManyArgs>(args: SelectSubset<T, DadosPagamentoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DadosPagamentos and returns the data updated in the database.
     * @param {DadosPagamentoUpdateManyAndReturnArgs} args - Arguments to update many DadosPagamentos.
     * @example
     * // Update many DadosPagamentos
     * const dadosPagamento = await prisma.dadosPagamento.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more DadosPagamentos and only return the `id`
     * const dadosPagamentoWithIdOnly = await prisma.dadosPagamento.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends DadosPagamentoUpdateManyAndReturnArgs>(args: SelectSubset<T, DadosPagamentoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DadosPagamentoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one DadosPagamento.
     * @param {DadosPagamentoUpsertArgs} args - Arguments to update or create a DadosPagamento.
     * @example
     * // Update or create a DadosPagamento
     * const dadosPagamento = await prisma.dadosPagamento.upsert({
     *   create: {
     *     // ... data to create a DadosPagamento
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DadosPagamento we want to update
     *   }
     * })
     */
    upsert<T extends DadosPagamentoUpsertArgs>(args: SelectSubset<T, DadosPagamentoUpsertArgs<ExtArgs>>): Prisma__DadosPagamentoClient<$Result.GetResult<Prisma.$DadosPagamentoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of DadosPagamentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DadosPagamentoCountArgs} args - Arguments to filter DadosPagamentos to count.
     * @example
     * // Count the number of DadosPagamentos
     * const count = await prisma.dadosPagamento.count({
     *   where: {
     *     // ... the filter for the DadosPagamentos we want to count
     *   }
     * })
    **/
    count<T extends DadosPagamentoCountArgs>(
      args?: Subset<T, DadosPagamentoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DadosPagamentoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DadosPagamento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DadosPagamentoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DadosPagamentoAggregateArgs>(args: Subset<T, DadosPagamentoAggregateArgs>): Prisma.PrismaPromise<GetDadosPagamentoAggregateType<T>>

    /**
     * Group by DadosPagamento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DadosPagamentoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DadosPagamentoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DadosPagamentoGroupByArgs['orderBy'] }
        : { orderBy?: DadosPagamentoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DadosPagamentoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDadosPagamentoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DadosPagamento model
   */
  readonly fields: DadosPagamentoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for DadosPagamento.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DadosPagamentoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    registro<T extends RegistroDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RegistroDefaultArgs<ExtArgs>>): Prisma__RegistroClient<$Result.GetResult<Prisma.$RegistroPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the DadosPagamento model
   */
  interface DadosPagamentoFieldRefs {
    readonly id: FieldRef<"DadosPagamento", 'Int'>
    readonly banco: FieldRef<"DadosPagamento", 'String'>
    readonly agencia: FieldRef<"DadosPagamento", 'Int'>
    readonly conta: FieldRef<"DadosPagamento", 'Int'>
    readonly chave: FieldRef<"DadosPagamento", 'String'>
    readonly cpf: FieldRef<"DadosPagamento", 'String'>
    readonly regID: FieldRef<"DadosPagamento", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * DadosPagamento findUnique
   */
  export type DadosPagamentoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DadosPagamento
     */
    select?: DadosPagamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DadosPagamento
     */
    omit?: DadosPagamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DadosPagamentoInclude<ExtArgs> | null
    /**
     * Filter, which DadosPagamento to fetch.
     */
    where: DadosPagamentoWhereUniqueInput
  }

  /**
   * DadosPagamento findUniqueOrThrow
   */
  export type DadosPagamentoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DadosPagamento
     */
    select?: DadosPagamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DadosPagamento
     */
    omit?: DadosPagamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DadosPagamentoInclude<ExtArgs> | null
    /**
     * Filter, which DadosPagamento to fetch.
     */
    where: DadosPagamentoWhereUniqueInput
  }

  /**
   * DadosPagamento findFirst
   */
  export type DadosPagamentoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DadosPagamento
     */
    select?: DadosPagamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DadosPagamento
     */
    omit?: DadosPagamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DadosPagamentoInclude<ExtArgs> | null
    /**
     * Filter, which DadosPagamento to fetch.
     */
    where?: DadosPagamentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DadosPagamentos to fetch.
     */
    orderBy?: DadosPagamentoOrderByWithRelationInput | DadosPagamentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DadosPagamentos.
     */
    cursor?: DadosPagamentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DadosPagamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DadosPagamentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DadosPagamentos.
     */
    distinct?: DadosPagamentoScalarFieldEnum | DadosPagamentoScalarFieldEnum[]
  }

  /**
   * DadosPagamento findFirstOrThrow
   */
  export type DadosPagamentoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DadosPagamento
     */
    select?: DadosPagamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DadosPagamento
     */
    omit?: DadosPagamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DadosPagamentoInclude<ExtArgs> | null
    /**
     * Filter, which DadosPagamento to fetch.
     */
    where?: DadosPagamentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DadosPagamentos to fetch.
     */
    orderBy?: DadosPagamentoOrderByWithRelationInput | DadosPagamentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DadosPagamentos.
     */
    cursor?: DadosPagamentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DadosPagamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DadosPagamentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DadosPagamentos.
     */
    distinct?: DadosPagamentoScalarFieldEnum | DadosPagamentoScalarFieldEnum[]
  }

  /**
   * DadosPagamento findMany
   */
  export type DadosPagamentoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DadosPagamento
     */
    select?: DadosPagamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DadosPagamento
     */
    omit?: DadosPagamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DadosPagamentoInclude<ExtArgs> | null
    /**
     * Filter, which DadosPagamentos to fetch.
     */
    where?: DadosPagamentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DadosPagamentos to fetch.
     */
    orderBy?: DadosPagamentoOrderByWithRelationInput | DadosPagamentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DadosPagamentos.
     */
    cursor?: DadosPagamentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DadosPagamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DadosPagamentos.
     */
    skip?: number
    distinct?: DadosPagamentoScalarFieldEnum | DadosPagamentoScalarFieldEnum[]
  }

  /**
   * DadosPagamento create
   */
  export type DadosPagamentoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DadosPagamento
     */
    select?: DadosPagamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DadosPagamento
     */
    omit?: DadosPagamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DadosPagamentoInclude<ExtArgs> | null
    /**
     * The data needed to create a DadosPagamento.
     */
    data: XOR<DadosPagamentoCreateInput, DadosPagamentoUncheckedCreateInput>
  }

  /**
   * DadosPagamento createMany
   */
  export type DadosPagamentoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DadosPagamentos.
     */
    data: DadosPagamentoCreateManyInput | DadosPagamentoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DadosPagamento createManyAndReturn
   */
  export type DadosPagamentoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DadosPagamento
     */
    select?: DadosPagamentoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the DadosPagamento
     */
    omit?: DadosPagamentoOmit<ExtArgs> | null
    /**
     * The data used to create many DadosPagamentos.
     */
    data: DadosPagamentoCreateManyInput | DadosPagamentoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DadosPagamentoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * DadosPagamento update
   */
  export type DadosPagamentoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DadosPagamento
     */
    select?: DadosPagamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DadosPagamento
     */
    omit?: DadosPagamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DadosPagamentoInclude<ExtArgs> | null
    /**
     * The data needed to update a DadosPagamento.
     */
    data: XOR<DadosPagamentoUpdateInput, DadosPagamentoUncheckedUpdateInput>
    /**
     * Choose, which DadosPagamento to update.
     */
    where: DadosPagamentoWhereUniqueInput
  }

  /**
   * DadosPagamento updateMany
   */
  export type DadosPagamentoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DadosPagamentos.
     */
    data: XOR<DadosPagamentoUpdateManyMutationInput, DadosPagamentoUncheckedUpdateManyInput>
    /**
     * Filter which DadosPagamentos to update
     */
    where?: DadosPagamentoWhereInput
    /**
     * Limit how many DadosPagamentos to update.
     */
    limit?: number
  }

  /**
   * DadosPagamento updateManyAndReturn
   */
  export type DadosPagamentoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DadosPagamento
     */
    select?: DadosPagamentoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the DadosPagamento
     */
    omit?: DadosPagamentoOmit<ExtArgs> | null
    /**
     * The data used to update DadosPagamentos.
     */
    data: XOR<DadosPagamentoUpdateManyMutationInput, DadosPagamentoUncheckedUpdateManyInput>
    /**
     * Filter which DadosPagamentos to update
     */
    where?: DadosPagamentoWhereInput
    /**
     * Limit how many DadosPagamentos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DadosPagamentoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * DadosPagamento upsert
   */
  export type DadosPagamentoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DadosPagamento
     */
    select?: DadosPagamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DadosPagamento
     */
    omit?: DadosPagamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DadosPagamentoInclude<ExtArgs> | null
    /**
     * The filter to search for the DadosPagamento to update in case it exists.
     */
    where: DadosPagamentoWhereUniqueInput
    /**
     * In case the DadosPagamento found by the `where` argument doesn't exist, create a new DadosPagamento with this data.
     */
    create: XOR<DadosPagamentoCreateInput, DadosPagamentoUncheckedCreateInput>
    /**
     * In case the DadosPagamento was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DadosPagamentoUpdateInput, DadosPagamentoUncheckedUpdateInput>
  }

  /**
   * DadosPagamento delete
   */
  export type DadosPagamentoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DadosPagamento
     */
    select?: DadosPagamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DadosPagamento
     */
    omit?: DadosPagamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DadosPagamentoInclude<ExtArgs> | null
    /**
     * Filter which DadosPagamento to delete.
     */
    where: DadosPagamentoWhereUniqueInput
  }

  /**
   * DadosPagamento deleteMany
   */
  export type DadosPagamentoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DadosPagamentos to delete
     */
    where?: DadosPagamentoWhereInput
    /**
     * Limit how many DadosPagamentos to delete.
     */
    limit?: number
  }

  /**
   * DadosPagamento without action
   */
  export type DadosPagamentoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DadosPagamento
     */
    select?: DadosPagamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DadosPagamento
     */
    omit?: DadosPagamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DadosPagamentoInclude<ExtArgs> | null
  }


  /**
   * Model Tabela
   */

  export type AggregateTabela = {
    _count: TabelaCountAggregateOutputType | null
    _avg: TabelaAvgAggregateOutputType | null
    _sum: TabelaSumAggregateOutputType | null
    _min: TabelaMinAggregateOutputType | null
    _max: TabelaMaxAggregateOutputType | null
  }

  export type TabelaAvgAggregateOutputType = {
    id: number | null
  }

  export type TabelaSumAggregateOutputType = {
    id: number | null
  }

  export type TabelaMinAggregateOutputType = {
    id: number | null
    nome: string | null
    updatedAt: Date | null
  }

  export type TabelaMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    updatedAt: Date | null
  }

  export type TabelaCountAggregateOutputType = {
    id: number
    nome: number
    updatedAt: number
    _all: number
  }


  export type TabelaAvgAggregateInputType = {
    id?: true
  }

  export type TabelaSumAggregateInputType = {
    id?: true
  }

  export type TabelaMinAggregateInputType = {
    id?: true
    nome?: true
    updatedAt?: true
  }

  export type TabelaMaxAggregateInputType = {
    id?: true
    nome?: true
    updatedAt?: true
  }

  export type TabelaCountAggregateInputType = {
    id?: true
    nome?: true
    updatedAt?: true
    _all?: true
  }

  export type TabelaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Tabela to aggregate.
     */
    where?: TabelaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tabelas to fetch.
     */
    orderBy?: TabelaOrderByWithRelationInput | TabelaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TabelaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tabelas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tabelas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Tabelas
    **/
    _count?: true | TabelaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TabelaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TabelaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TabelaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TabelaMaxAggregateInputType
  }

  export type GetTabelaAggregateType<T extends TabelaAggregateArgs> = {
        [P in keyof T & keyof AggregateTabela]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTabela[P]>
      : GetScalarType<T[P], AggregateTabela[P]>
  }




  export type TabelaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TabelaWhereInput
    orderBy?: TabelaOrderByWithAggregationInput | TabelaOrderByWithAggregationInput[]
    by: TabelaScalarFieldEnum[] | TabelaScalarFieldEnum
    having?: TabelaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TabelaCountAggregateInputType | true
    _avg?: TabelaAvgAggregateInputType
    _sum?: TabelaSumAggregateInputType
    _min?: TabelaMinAggregateInputType
    _max?: TabelaMaxAggregateInputType
  }

  export type TabelaGroupByOutputType = {
    id: number
    nome: string
    updatedAt: Date
    _count: TabelaCountAggregateOutputType | null
    _avg: TabelaAvgAggregateOutputType | null
    _sum: TabelaSumAggregateOutputType | null
    _min: TabelaMinAggregateOutputType | null
    _max: TabelaMaxAggregateOutputType | null
  }

  type GetTabelaGroupByPayload<T extends TabelaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TabelaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TabelaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TabelaGroupByOutputType[P]>
            : GetScalarType<T[P], TabelaGroupByOutputType[P]>
        }
      >
    >


  export type TabelaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    updatedAt?: boolean
    materiais?: boolean | Tabela$materiaisArgs<ExtArgs>
    registros?: boolean | Tabela$registrosArgs<ExtArgs>
    _count?: boolean | TabelaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tabela"]>

  export type TabelaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["tabela"]>

  export type TabelaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["tabela"]>

  export type TabelaSelectScalar = {
    id?: boolean
    nome?: boolean
    updatedAt?: boolean
  }

  export type TabelaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nome" | "updatedAt", ExtArgs["result"]["tabela"]>
  export type TabelaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    materiais?: boolean | Tabela$materiaisArgs<ExtArgs>
    registros?: boolean | Tabela$registrosArgs<ExtArgs>
    _count?: boolean | TabelaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type TabelaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type TabelaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $TabelaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Tabela"
    objects: {
      materiais: Prisma.$PrecoPorTabelaPayload<ExtArgs>[]
      registros: Prisma.$RegistroPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      updatedAt: Date
    }, ExtArgs["result"]["tabela"]>
    composites: {}
  }

  type TabelaGetPayload<S extends boolean | null | undefined | TabelaDefaultArgs> = $Result.GetResult<Prisma.$TabelaPayload, S>

  type TabelaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TabelaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TabelaCountAggregateInputType | true
    }

  export interface TabelaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Tabela'], meta: { name: 'Tabela' } }
    /**
     * Find zero or one Tabela that matches the filter.
     * @param {TabelaFindUniqueArgs} args - Arguments to find a Tabela
     * @example
     * // Get one Tabela
     * const tabela = await prisma.tabela.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TabelaFindUniqueArgs>(args: SelectSubset<T, TabelaFindUniqueArgs<ExtArgs>>): Prisma__TabelaClient<$Result.GetResult<Prisma.$TabelaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Tabela that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TabelaFindUniqueOrThrowArgs} args - Arguments to find a Tabela
     * @example
     * // Get one Tabela
     * const tabela = await prisma.tabela.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TabelaFindUniqueOrThrowArgs>(args: SelectSubset<T, TabelaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TabelaClient<$Result.GetResult<Prisma.$TabelaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tabela that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TabelaFindFirstArgs} args - Arguments to find a Tabela
     * @example
     * // Get one Tabela
     * const tabela = await prisma.tabela.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TabelaFindFirstArgs>(args?: SelectSubset<T, TabelaFindFirstArgs<ExtArgs>>): Prisma__TabelaClient<$Result.GetResult<Prisma.$TabelaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tabela that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TabelaFindFirstOrThrowArgs} args - Arguments to find a Tabela
     * @example
     * // Get one Tabela
     * const tabela = await prisma.tabela.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TabelaFindFirstOrThrowArgs>(args?: SelectSubset<T, TabelaFindFirstOrThrowArgs<ExtArgs>>): Prisma__TabelaClient<$Result.GetResult<Prisma.$TabelaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tabelas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TabelaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tabelas
     * const tabelas = await prisma.tabela.findMany()
     * 
     * // Get first 10 Tabelas
     * const tabelas = await prisma.tabela.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tabelaWithIdOnly = await prisma.tabela.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TabelaFindManyArgs>(args?: SelectSubset<T, TabelaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TabelaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Tabela.
     * @param {TabelaCreateArgs} args - Arguments to create a Tabela.
     * @example
     * // Create one Tabela
     * const Tabela = await prisma.tabela.create({
     *   data: {
     *     // ... data to create a Tabela
     *   }
     * })
     * 
     */
    create<T extends TabelaCreateArgs>(args: SelectSubset<T, TabelaCreateArgs<ExtArgs>>): Prisma__TabelaClient<$Result.GetResult<Prisma.$TabelaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tabelas.
     * @param {TabelaCreateManyArgs} args - Arguments to create many Tabelas.
     * @example
     * // Create many Tabelas
     * const tabela = await prisma.tabela.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TabelaCreateManyArgs>(args?: SelectSubset<T, TabelaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Tabelas and returns the data saved in the database.
     * @param {TabelaCreateManyAndReturnArgs} args - Arguments to create many Tabelas.
     * @example
     * // Create many Tabelas
     * const tabela = await prisma.tabela.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Tabelas and only return the `id`
     * const tabelaWithIdOnly = await prisma.tabela.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TabelaCreateManyAndReturnArgs>(args?: SelectSubset<T, TabelaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TabelaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Tabela.
     * @param {TabelaDeleteArgs} args - Arguments to delete one Tabela.
     * @example
     * // Delete one Tabela
     * const Tabela = await prisma.tabela.delete({
     *   where: {
     *     // ... filter to delete one Tabela
     *   }
     * })
     * 
     */
    delete<T extends TabelaDeleteArgs>(args: SelectSubset<T, TabelaDeleteArgs<ExtArgs>>): Prisma__TabelaClient<$Result.GetResult<Prisma.$TabelaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Tabela.
     * @param {TabelaUpdateArgs} args - Arguments to update one Tabela.
     * @example
     * // Update one Tabela
     * const tabela = await prisma.tabela.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TabelaUpdateArgs>(args: SelectSubset<T, TabelaUpdateArgs<ExtArgs>>): Prisma__TabelaClient<$Result.GetResult<Prisma.$TabelaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tabelas.
     * @param {TabelaDeleteManyArgs} args - Arguments to filter Tabelas to delete.
     * @example
     * // Delete a few Tabelas
     * const { count } = await prisma.tabela.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TabelaDeleteManyArgs>(args?: SelectSubset<T, TabelaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tabelas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TabelaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tabelas
     * const tabela = await prisma.tabela.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TabelaUpdateManyArgs>(args: SelectSubset<T, TabelaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tabelas and returns the data updated in the database.
     * @param {TabelaUpdateManyAndReturnArgs} args - Arguments to update many Tabelas.
     * @example
     * // Update many Tabelas
     * const tabela = await prisma.tabela.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Tabelas and only return the `id`
     * const tabelaWithIdOnly = await prisma.tabela.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends TabelaUpdateManyAndReturnArgs>(args: SelectSubset<T, TabelaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TabelaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Tabela.
     * @param {TabelaUpsertArgs} args - Arguments to update or create a Tabela.
     * @example
     * // Update or create a Tabela
     * const tabela = await prisma.tabela.upsert({
     *   create: {
     *     // ... data to create a Tabela
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tabela we want to update
     *   }
     * })
     */
    upsert<T extends TabelaUpsertArgs>(args: SelectSubset<T, TabelaUpsertArgs<ExtArgs>>): Prisma__TabelaClient<$Result.GetResult<Prisma.$TabelaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tabelas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TabelaCountArgs} args - Arguments to filter Tabelas to count.
     * @example
     * // Count the number of Tabelas
     * const count = await prisma.tabela.count({
     *   where: {
     *     // ... the filter for the Tabelas we want to count
     *   }
     * })
    **/
    count<T extends TabelaCountArgs>(
      args?: Subset<T, TabelaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TabelaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tabela.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TabelaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TabelaAggregateArgs>(args: Subset<T, TabelaAggregateArgs>): Prisma.PrismaPromise<GetTabelaAggregateType<T>>

    /**
     * Group by Tabela.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TabelaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TabelaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TabelaGroupByArgs['orderBy'] }
        : { orderBy?: TabelaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TabelaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTabelaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Tabela model
   */
  readonly fields: TabelaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Tabela.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TabelaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    materiais<T extends Tabela$materiaisArgs<ExtArgs> = {}>(args?: Subset<T, Tabela$materiaisArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PrecoPorTabelaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    registros<T extends Tabela$registrosArgs<ExtArgs> = {}>(args?: Subset<T, Tabela$registrosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RegistroPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Tabela model
   */
  interface TabelaFieldRefs {
    readonly id: FieldRef<"Tabela", 'Int'>
    readonly nome: FieldRef<"Tabela", 'String'>
    readonly updatedAt: FieldRef<"Tabela", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Tabela findUnique
   */
  export type TabelaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tabela
     */
    select?: TabelaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tabela
     */
    omit?: TabelaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TabelaInclude<ExtArgs> | null
    /**
     * Filter, which Tabela to fetch.
     */
    where: TabelaWhereUniqueInput
  }

  /**
   * Tabela findUniqueOrThrow
   */
  export type TabelaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tabela
     */
    select?: TabelaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tabela
     */
    omit?: TabelaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TabelaInclude<ExtArgs> | null
    /**
     * Filter, which Tabela to fetch.
     */
    where: TabelaWhereUniqueInput
  }

  /**
   * Tabela findFirst
   */
  export type TabelaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tabela
     */
    select?: TabelaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tabela
     */
    omit?: TabelaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TabelaInclude<ExtArgs> | null
    /**
     * Filter, which Tabela to fetch.
     */
    where?: TabelaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tabelas to fetch.
     */
    orderBy?: TabelaOrderByWithRelationInput | TabelaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tabelas.
     */
    cursor?: TabelaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tabelas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tabelas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tabelas.
     */
    distinct?: TabelaScalarFieldEnum | TabelaScalarFieldEnum[]
  }

  /**
   * Tabela findFirstOrThrow
   */
  export type TabelaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tabela
     */
    select?: TabelaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tabela
     */
    omit?: TabelaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TabelaInclude<ExtArgs> | null
    /**
     * Filter, which Tabela to fetch.
     */
    where?: TabelaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tabelas to fetch.
     */
    orderBy?: TabelaOrderByWithRelationInput | TabelaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tabelas.
     */
    cursor?: TabelaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tabelas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tabelas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tabelas.
     */
    distinct?: TabelaScalarFieldEnum | TabelaScalarFieldEnum[]
  }

  /**
   * Tabela findMany
   */
  export type TabelaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tabela
     */
    select?: TabelaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tabela
     */
    omit?: TabelaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TabelaInclude<ExtArgs> | null
    /**
     * Filter, which Tabelas to fetch.
     */
    where?: TabelaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tabelas to fetch.
     */
    orderBy?: TabelaOrderByWithRelationInput | TabelaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Tabelas.
     */
    cursor?: TabelaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tabelas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tabelas.
     */
    skip?: number
    distinct?: TabelaScalarFieldEnum | TabelaScalarFieldEnum[]
  }

  /**
   * Tabela create
   */
  export type TabelaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tabela
     */
    select?: TabelaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tabela
     */
    omit?: TabelaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TabelaInclude<ExtArgs> | null
    /**
     * The data needed to create a Tabela.
     */
    data: XOR<TabelaCreateInput, TabelaUncheckedCreateInput>
  }

  /**
   * Tabela createMany
   */
  export type TabelaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Tabelas.
     */
    data: TabelaCreateManyInput | TabelaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Tabela createManyAndReturn
   */
  export type TabelaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tabela
     */
    select?: TabelaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Tabela
     */
    omit?: TabelaOmit<ExtArgs> | null
    /**
     * The data used to create many Tabelas.
     */
    data: TabelaCreateManyInput | TabelaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Tabela update
   */
  export type TabelaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tabela
     */
    select?: TabelaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tabela
     */
    omit?: TabelaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TabelaInclude<ExtArgs> | null
    /**
     * The data needed to update a Tabela.
     */
    data: XOR<TabelaUpdateInput, TabelaUncheckedUpdateInput>
    /**
     * Choose, which Tabela to update.
     */
    where: TabelaWhereUniqueInput
  }

  /**
   * Tabela updateMany
   */
  export type TabelaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Tabelas.
     */
    data: XOR<TabelaUpdateManyMutationInput, TabelaUncheckedUpdateManyInput>
    /**
     * Filter which Tabelas to update
     */
    where?: TabelaWhereInput
    /**
     * Limit how many Tabelas to update.
     */
    limit?: number
  }

  /**
   * Tabela updateManyAndReturn
   */
  export type TabelaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tabela
     */
    select?: TabelaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Tabela
     */
    omit?: TabelaOmit<ExtArgs> | null
    /**
     * The data used to update Tabelas.
     */
    data: XOR<TabelaUpdateManyMutationInput, TabelaUncheckedUpdateManyInput>
    /**
     * Filter which Tabelas to update
     */
    where?: TabelaWhereInput
    /**
     * Limit how many Tabelas to update.
     */
    limit?: number
  }

  /**
   * Tabela upsert
   */
  export type TabelaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tabela
     */
    select?: TabelaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tabela
     */
    omit?: TabelaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TabelaInclude<ExtArgs> | null
    /**
     * The filter to search for the Tabela to update in case it exists.
     */
    where: TabelaWhereUniqueInput
    /**
     * In case the Tabela found by the `where` argument doesn't exist, create a new Tabela with this data.
     */
    create: XOR<TabelaCreateInput, TabelaUncheckedCreateInput>
    /**
     * In case the Tabela was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TabelaUpdateInput, TabelaUncheckedUpdateInput>
  }

  /**
   * Tabela delete
   */
  export type TabelaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tabela
     */
    select?: TabelaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tabela
     */
    omit?: TabelaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TabelaInclude<ExtArgs> | null
    /**
     * Filter which Tabela to delete.
     */
    where: TabelaWhereUniqueInput
  }

  /**
   * Tabela deleteMany
   */
  export type TabelaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Tabelas to delete
     */
    where?: TabelaWhereInput
    /**
     * Limit how many Tabelas to delete.
     */
    limit?: number
  }

  /**
   * Tabela.materiais
   */
  export type Tabela$materiaisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PrecoPorTabela
     */
    select?: PrecoPorTabelaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PrecoPorTabela
     */
    omit?: PrecoPorTabelaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrecoPorTabelaInclude<ExtArgs> | null
    where?: PrecoPorTabelaWhereInput
    orderBy?: PrecoPorTabelaOrderByWithRelationInput | PrecoPorTabelaOrderByWithRelationInput[]
    cursor?: PrecoPorTabelaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PrecoPorTabelaScalarFieldEnum | PrecoPorTabelaScalarFieldEnum[]
  }

  /**
   * Tabela.registros
   */
  export type Tabela$registrosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Registro
     */
    select?: RegistroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Registro
     */
    omit?: RegistroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroInclude<ExtArgs> | null
    where?: RegistroWhereInput
    orderBy?: RegistroOrderByWithRelationInput | RegistroOrderByWithRelationInput[]
    cursor?: RegistroWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RegistroScalarFieldEnum | RegistroScalarFieldEnum[]
  }

  /**
   * Tabela without action
   */
  export type TabelaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tabela
     */
    select?: TabelaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tabela
     */
    omit?: TabelaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TabelaInclude<ExtArgs> | null
  }


  /**
   * Model PrecoPorTabela
   */

  export type AggregatePrecoPorTabela = {
    _count: PrecoPorTabelaCountAggregateOutputType | null
    _avg: PrecoPorTabelaAvgAggregateOutputType | null
    _sum: PrecoPorTabelaSumAggregateOutputType | null
    _min: PrecoPorTabelaMinAggregateOutputType | null
    _max: PrecoPorTabelaMaxAggregateOutputType | null
  }

  export type PrecoPorTabelaAvgAggregateOutputType = {
    id: number | null
    v_compra: Decimal | null
    materialID: number | null
    tabelaID: number | null
  }

  export type PrecoPorTabelaSumAggregateOutputType = {
    id: number | null
    v_compra: Decimal | null
    materialID: number | null
    tabelaID: number | null
  }

  export type PrecoPorTabelaMinAggregateOutputType = {
    id: number | null
    v_compra: Decimal | null
    materialID: number | null
    tabelaID: number | null
    editadoEm: Date | null
  }

  export type PrecoPorTabelaMaxAggregateOutputType = {
    id: number | null
    v_compra: Decimal | null
    materialID: number | null
    tabelaID: number | null
    editadoEm: Date | null
  }

  export type PrecoPorTabelaCountAggregateOutputType = {
    id: number
    v_compra: number
    materialID: number
    tabelaID: number
    editadoEm: number
    _all: number
  }


  export type PrecoPorTabelaAvgAggregateInputType = {
    id?: true
    v_compra?: true
    materialID?: true
    tabelaID?: true
  }

  export type PrecoPorTabelaSumAggregateInputType = {
    id?: true
    v_compra?: true
    materialID?: true
    tabelaID?: true
  }

  export type PrecoPorTabelaMinAggregateInputType = {
    id?: true
    v_compra?: true
    materialID?: true
    tabelaID?: true
    editadoEm?: true
  }

  export type PrecoPorTabelaMaxAggregateInputType = {
    id?: true
    v_compra?: true
    materialID?: true
    tabelaID?: true
    editadoEm?: true
  }

  export type PrecoPorTabelaCountAggregateInputType = {
    id?: true
    v_compra?: true
    materialID?: true
    tabelaID?: true
    editadoEm?: true
    _all?: true
  }

  export type PrecoPorTabelaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PrecoPorTabela to aggregate.
     */
    where?: PrecoPorTabelaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PrecoPorTabelas to fetch.
     */
    orderBy?: PrecoPorTabelaOrderByWithRelationInput | PrecoPorTabelaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PrecoPorTabelaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PrecoPorTabelas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PrecoPorTabelas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PrecoPorTabelas
    **/
    _count?: true | PrecoPorTabelaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PrecoPorTabelaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PrecoPorTabelaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PrecoPorTabelaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PrecoPorTabelaMaxAggregateInputType
  }

  export type GetPrecoPorTabelaAggregateType<T extends PrecoPorTabelaAggregateArgs> = {
        [P in keyof T & keyof AggregatePrecoPorTabela]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePrecoPorTabela[P]>
      : GetScalarType<T[P], AggregatePrecoPorTabela[P]>
  }




  export type PrecoPorTabelaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PrecoPorTabelaWhereInput
    orderBy?: PrecoPorTabelaOrderByWithAggregationInput | PrecoPorTabelaOrderByWithAggregationInput[]
    by: PrecoPorTabelaScalarFieldEnum[] | PrecoPorTabelaScalarFieldEnum
    having?: PrecoPorTabelaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PrecoPorTabelaCountAggregateInputType | true
    _avg?: PrecoPorTabelaAvgAggregateInputType
    _sum?: PrecoPorTabelaSumAggregateInputType
    _min?: PrecoPorTabelaMinAggregateInputType
    _max?: PrecoPorTabelaMaxAggregateInputType
  }

  export type PrecoPorTabelaGroupByOutputType = {
    id: number
    v_compra: Decimal
    materialID: number
    tabelaID: number
    editadoEm: Date
    _count: PrecoPorTabelaCountAggregateOutputType | null
    _avg: PrecoPorTabelaAvgAggregateOutputType | null
    _sum: PrecoPorTabelaSumAggregateOutputType | null
    _min: PrecoPorTabelaMinAggregateOutputType | null
    _max: PrecoPorTabelaMaxAggregateOutputType | null
  }

  type GetPrecoPorTabelaGroupByPayload<T extends PrecoPorTabelaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PrecoPorTabelaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PrecoPorTabelaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PrecoPorTabelaGroupByOutputType[P]>
            : GetScalarType<T[P], PrecoPorTabelaGroupByOutputType[P]>
        }
      >
    >


  export type PrecoPorTabelaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    v_compra?: boolean
    materialID?: boolean
    tabelaID?: boolean
    editadoEm?: boolean
    material?: boolean | MaterialDefaultArgs<ExtArgs>
    tabela?: boolean | TabelaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["precoPorTabela"]>

  export type PrecoPorTabelaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    v_compra?: boolean
    materialID?: boolean
    tabelaID?: boolean
    editadoEm?: boolean
    material?: boolean | MaterialDefaultArgs<ExtArgs>
    tabela?: boolean | TabelaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["precoPorTabela"]>

  export type PrecoPorTabelaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    v_compra?: boolean
    materialID?: boolean
    tabelaID?: boolean
    editadoEm?: boolean
    material?: boolean | MaterialDefaultArgs<ExtArgs>
    tabela?: boolean | TabelaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["precoPorTabela"]>

  export type PrecoPorTabelaSelectScalar = {
    id?: boolean
    v_compra?: boolean
    materialID?: boolean
    tabelaID?: boolean
    editadoEm?: boolean
  }

  export type PrecoPorTabelaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "v_compra" | "materialID" | "tabelaID" | "editadoEm", ExtArgs["result"]["precoPorTabela"]>
  export type PrecoPorTabelaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    material?: boolean | MaterialDefaultArgs<ExtArgs>
    tabela?: boolean | TabelaDefaultArgs<ExtArgs>
  }
  export type PrecoPorTabelaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    material?: boolean | MaterialDefaultArgs<ExtArgs>
    tabela?: boolean | TabelaDefaultArgs<ExtArgs>
  }
  export type PrecoPorTabelaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    material?: boolean | MaterialDefaultArgs<ExtArgs>
    tabela?: boolean | TabelaDefaultArgs<ExtArgs>
  }

  export type $PrecoPorTabelaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PrecoPorTabela"
    objects: {
      material: Prisma.$MaterialPayload<ExtArgs>
      tabela: Prisma.$TabelaPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      v_compra: Prisma.Decimal
      materialID: number
      tabelaID: number
      editadoEm: Date
    }, ExtArgs["result"]["precoPorTabela"]>
    composites: {}
  }

  type PrecoPorTabelaGetPayload<S extends boolean | null | undefined | PrecoPorTabelaDefaultArgs> = $Result.GetResult<Prisma.$PrecoPorTabelaPayload, S>

  type PrecoPorTabelaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PrecoPorTabelaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PrecoPorTabelaCountAggregateInputType | true
    }

  export interface PrecoPorTabelaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PrecoPorTabela'], meta: { name: 'PrecoPorTabela' } }
    /**
     * Find zero or one PrecoPorTabela that matches the filter.
     * @param {PrecoPorTabelaFindUniqueArgs} args - Arguments to find a PrecoPorTabela
     * @example
     * // Get one PrecoPorTabela
     * const precoPorTabela = await prisma.precoPorTabela.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PrecoPorTabelaFindUniqueArgs>(args: SelectSubset<T, PrecoPorTabelaFindUniqueArgs<ExtArgs>>): Prisma__PrecoPorTabelaClient<$Result.GetResult<Prisma.$PrecoPorTabelaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PrecoPorTabela that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PrecoPorTabelaFindUniqueOrThrowArgs} args - Arguments to find a PrecoPorTabela
     * @example
     * // Get one PrecoPorTabela
     * const precoPorTabela = await prisma.precoPorTabela.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PrecoPorTabelaFindUniqueOrThrowArgs>(args: SelectSubset<T, PrecoPorTabelaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PrecoPorTabelaClient<$Result.GetResult<Prisma.$PrecoPorTabelaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PrecoPorTabela that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PrecoPorTabelaFindFirstArgs} args - Arguments to find a PrecoPorTabela
     * @example
     * // Get one PrecoPorTabela
     * const precoPorTabela = await prisma.precoPorTabela.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PrecoPorTabelaFindFirstArgs>(args?: SelectSubset<T, PrecoPorTabelaFindFirstArgs<ExtArgs>>): Prisma__PrecoPorTabelaClient<$Result.GetResult<Prisma.$PrecoPorTabelaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PrecoPorTabela that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PrecoPorTabelaFindFirstOrThrowArgs} args - Arguments to find a PrecoPorTabela
     * @example
     * // Get one PrecoPorTabela
     * const precoPorTabela = await prisma.precoPorTabela.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PrecoPorTabelaFindFirstOrThrowArgs>(args?: SelectSubset<T, PrecoPorTabelaFindFirstOrThrowArgs<ExtArgs>>): Prisma__PrecoPorTabelaClient<$Result.GetResult<Prisma.$PrecoPorTabelaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PrecoPorTabelas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PrecoPorTabelaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PrecoPorTabelas
     * const precoPorTabelas = await prisma.precoPorTabela.findMany()
     * 
     * // Get first 10 PrecoPorTabelas
     * const precoPorTabelas = await prisma.precoPorTabela.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const precoPorTabelaWithIdOnly = await prisma.precoPorTabela.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PrecoPorTabelaFindManyArgs>(args?: SelectSubset<T, PrecoPorTabelaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PrecoPorTabelaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PrecoPorTabela.
     * @param {PrecoPorTabelaCreateArgs} args - Arguments to create a PrecoPorTabela.
     * @example
     * // Create one PrecoPorTabela
     * const PrecoPorTabela = await prisma.precoPorTabela.create({
     *   data: {
     *     // ... data to create a PrecoPorTabela
     *   }
     * })
     * 
     */
    create<T extends PrecoPorTabelaCreateArgs>(args: SelectSubset<T, PrecoPorTabelaCreateArgs<ExtArgs>>): Prisma__PrecoPorTabelaClient<$Result.GetResult<Prisma.$PrecoPorTabelaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PrecoPorTabelas.
     * @param {PrecoPorTabelaCreateManyArgs} args - Arguments to create many PrecoPorTabelas.
     * @example
     * // Create many PrecoPorTabelas
     * const precoPorTabela = await prisma.precoPorTabela.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PrecoPorTabelaCreateManyArgs>(args?: SelectSubset<T, PrecoPorTabelaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PrecoPorTabelas and returns the data saved in the database.
     * @param {PrecoPorTabelaCreateManyAndReturnArgs} args - Arguments to create many PrecoPorTabelas.
     * @example
     * // Create many PrecoPorTabelas
     * const precoPorTabela = await prisma.precoPorTabela.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PrecoPorTabelas and only return the `id`
     * const precoPorTabelaWithIdOnly = await prisma.precoPorTabela.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PrecoPorTabelaCreateManyAndReturnArgs>(args?: SelectSubset<T, PrecoPorTabelaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PrecoPorTabelaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PrecoPorTabela.
     * @param {PrecoPorTabelaDeleteArgs} args - Arguments to delete one PrecoPorTabela.
     * @example
     * // Delete one PrecoPorTabela
     * const PrecoPorTabela = await prisma.precoPorTabela.delete({
     *   where: {
     *     // ... filter to delete one PrecoPorTabela
     *   }
     * })
     * 
     */
    delete<T extends PrecoPorTabelaDeleteArgs>(args: SelectSubset<T, PrecoPorTabelaDeleteArgs<ExtArgs>>): Prisma__PrecoPorTabelaClient<$Result.GetResult<Prisma.$PrecoPorTabelaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PrecoPorTabela.
     * @param {PrecoPorTabelaUpdateArgs} args - Arguments to update one PrecoPorTabela.
     * @example
     * // Update one PrecoPorTabela
     * const precoPorTabela = await prisma.precoPorTabela.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PrecoPorTabelaUpdateArgs>(args: SelectSubset<T, PrecoPorTabelaUpdateArgs<ExtArgs>>): Prisma__PrecoPorTabelaClient<$Result.GetResult<Prisma.$PrecoPorTabelaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PrecoPorTabelas.
     * @param {PrecoPorTabelaDeleteManyArgs} args - Arguments to filter PrecoPorTabelas to delete.
     * @example
     * // Delete a few PrecoPorTabelas
     * const { count } = await prisma.precoPorTabela.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PrecoPorTabelaDeleteManyArgs>(args?: SelectSubset<T, PrecoPorTabelaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PrecoPorTabelas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PrecoPorTabelaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PrecoPorTabelas
     * const precoPorTabela = await prisma.precoPorTabela.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PrecoPorTabelaUpdateManyArgs>(args: SelectSubset<T, PrecoPorTabelaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PrecoPorTabelas and returns the data updated in the database.
     * @param {PrecoPorTabelaUpdateManyAndReturnArgs} args - Arguments to update many PrecoPorTabelas.
     * @example
     * // Update many PrecoPorTabelas
     * const precoPorTabela = await prisma.precoPorTabela.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PrecoPorTabelas and only return the `id`
     * const precoPorTabelaWithIdOnly = await prisma.precoPorTabela.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PrecoPorTabelaUpdateManyAndReturnArgs>(args: SelectSubset<T, PrecoPorTabelaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PrecoPorTabelaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PrecoPorTabela.
     * @param {PrecoPorTabelaUpsertArgs} args - Arguments to update or create a PrecoPorTabela.
     * @example
     * // Update or create a PrecoPorTabela
     * const precoPorTabela = await prisma.precoPorTabela.upsert({
     *   create: {
     *     // ... data to create a PrecoPorTabela
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PrecoPorTabela we want to update
     *   }
     * })
     */
    upsert<T extends PrecoPorTabelaUpsertArgs>(args: SelectSubset<T, PrecoPorTabelaUpsertArgs<ExtArgs>>): Prisma__PrecoPorTabelaClient<$Result.GetResult<Prisma.$PrecoPorTabelaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PrecoPorTabelas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PrecoPorTabelaCountArgs} args - Arguments to filter PrecoPorTabelas to count.
     * @example
     * // Count the number of PrecoPorTabelas
     * const count = await prisma.precoPorTabela.count({
     *   where: {
     *     // ... the filter for the PrecoPorTabelas we want to count
     *   }
     * })
    **/
    count<T extends PrecoPorTabelaCountArgs>(
      args?: Subset<T, PrecoPorTabelaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PrecoPorTabelaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PrecoPorTabela.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PrecoPorTabelaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PrecoPorTabelaAggregateArgs>(args: Subset<T, PrecoPorTabelaAggregateArgs>): Prisma.PrismaPromise<GetPrecoPorTabelaAggregateType<T>>

    /**
     * Group by PrecoPorTabela.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PrecoPorTabelaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PrecoPorTabelaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PrecoPorTabelaGroupByArgs['orderBy'] }
        : { orderBy?: PrecoPorTabelaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PrecoPorTabelaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPrecoPorTabelaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PrecoPorTabela model
   */
  readonly fields: PrecoPorTabelaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PrecoPorTabela.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PrecoPorTabelaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    material<T extends MaterialDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MaterialDefaultArgs<ExtArgs>>): Prisma__MaterialClient<$Result.GetResult<Prisma.$MaterialPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    tabela<T extends TabelaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TabelaDefaultArgs<ExtArgs>>): Prisma__TabelaClient<$Result.GetResult<Prisma.$TabelaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PrecoPorTabela model
   */
  interface PrecoPorTabelaFieldRefs {
    readonly id: FieldRef<"PrecoPorTabela", 'Int'>
    readonly v_compra: FieldRef<"PrecoPorTabela", 'Decimal'>
    readonly materialID: FieldRef<"PrecoPorTabela", 'Int'>
    readonly tabelaID: FieldRef<"PrecoPorTabela", 'Int'>
    readonly editadoEm: FieldRef<"PrecoPorTabela", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * PrecoPorTabela findUnique
   */
  export type PrecoPorTabelaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PrecoPorTabela
     */
    select?: PrecoPorTabelaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PrecoPorTabela
     */
    omit?: PrecoPorTabelaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrecoPorTabelaInclude<ExtArgs> | null
    /**
     * Filter, which PrecoPorTabela to fetch.
     */
    where: PrecoPorTabelaWhereUniqueInput
  }

  /**
   * PrecoPorTabela findUniqueOrThrow
   */
  export type PrecoPorTabelaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PrecoPorTabela
     */
    select?: PrecoPorTabelaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PrecoPorTabela
     */
    omit?: PrecoPorTabelaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrecoPorTabelaInclude<ExtArgs> | null
    /**
     * Filter, which PrecoPorTabela to fetch.
     */
    where: PrecoPorTabelaWhereUniqueInput
  }

  /**
   * PrecoPorTabela findFirst
   */
  export type PrecoPorTabelaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PrecoPorTabela
     */
    select?: PrecoPorTabelaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PrecoPorTabela
     */
    omit?: PrecoPorTabelaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrecoPorTabelaInclude<ExtArgs> | null
    /**
     * Filter, which PrecoPorTabela to fetch.
     */
    where?: PrecoPorTabelaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PrecoPorTabelas to fetch.
     */
    orderBy?: PrecoPorTabelaOrderByWithRelationInput | PrecoPorTabelaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PrecoPorTabelas.
     */
    cursor?: PrecoPorTabelaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PrecoPorTabelas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PrecoPorTabelas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PrecoPorTabelas.
     */
    distinct?: PrecoPorTabelaScalarFieldEnum | PrecoPorTabelaScalarFieldEnum[]
  }

  /**
   * PrecoPorTabela findFirstOrThrow
   */
  export type PrecoPorTabelaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PrecoPorTabela
     */
    select?: PrecoPorTabelaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PrecoPorTabela
     */
    omit?: PrecoPorTabelaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrecoPorTabelaInclude<ExtArgs> | null
    /**
     * Filter, which PrecoPorTabela to fetch.
     */
    where?: PrecoPorTabelaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PrecoPorTabelas to fetch.
     */
    orderBy?: PrecoPorTabelaOrderByWithRelationInput | PrecoPorTabelaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PrecoPorTabelas.
     */
    cursor?: PrecoPorTabelaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PrecoPorTabelas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PrecoPorTabelas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PrecoPorTabelas.
     */
    distinct?: PrecoPorTabelaScalarFieldEnum | PrecoPorTabelaScalarFieldEnum[]
  }

  /**
   * PrecoPorTabela findMany
   */
  export type PrecoPorTabelaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PrecoPorTabela
     */
    select?: PrecoPorTabelaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PrecoPorTabela
     */
    omit?: PrecoPorTabelaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrecoPorTabelaInclude<ExtArgs> | null
    /**
     * Filter, which PrecoPorTabelas to fetch.
     */
    where?: PrecoPorTabelaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PrecoPorTabelas to fetch.
     */
    orderBy?: PrecoPorTabelaOrderByWithRelationInput | PrecoPorTabelaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PrecoPorTabelas.
     */
    cursor?: PrecoPorTabelaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PrecoPorTabelas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PrecoPorTabelas.
     */
    skip?: number
    distinct?: PrecoPorTabelaScalarFieldEnum | PrecoPorTabelaScalarFieldEnum[]
  }

  /**
   * PrecoPorTabela create
   */
  export type PrecoPorTabelaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PrecoPorTabela
     */
    select?: PrecoPorTabelaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PrecoPorTabela
     */
    omit?: PrecoPorTabelaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrecoPorTabelaInclude<ExtArgs> | null
    /**
     * The data needed to create a PrecoPorTabela.
     */
    data: XOR<PrecoPorTabelaCreateInput, PrecoPorTabelaUncheckedCreateInput>
  }

  /**
   * PrecoPorTabela createMany
   */
  export type PrecoPorTabelaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PrecoPorTabelas.
     */
    data: PrecoPorTabelaCreateManyInput | PrecoPorTabelaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PrecoPorTabela createManyAndReturn
   */
  export type PrecoPorTabelaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PrecoPorTabela
     */
    select?: PrecoPorTabelaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PrecoPorTabela
     */
    omit?: PrecoPorTabelaOmit<ExtArgs> | null
    /**
     * The data used to create many PrecoPorTabelas.
     */
    data: PrecoPorTabelaCreateManyInput | PrecoPorTabelaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrecoPorTabelaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PrecoPorTabela update
   */
  export type PrecoPorTabelaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PrecoPorTabela
     */
    select?: PrecoPorTabelaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PrecoPorTabela
     */
    omit?: PrecoPorTabelaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrecoPorTabelaInclude<ExtArgs> | null
    /**
     * The data needed to update a PrecoPorTabela.
     */
    data: XOR<PrecoPorTabelaUpdateInput, PrecoPorTabelaUncheckedUpdateInput>
    /**
     * Choose, which PrecoPorTabela to update.
     */
    where: PrecoPorTabelaWhereUniqueInput
  }

  /**
   * PrecoPorTabela updateMany
   */
  export type PrecoPorTabelaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PrecoPorTabelas.
     */
    data: XOR<PrecoPorTabelaUpdateManyMutationInput, PrecoPorTabelaUncheckedUpdateManyInput>
    /**
     * Filter which PrecoPorTabelas to update
     */
    where?: PrecoPorTabelaWhereInput
    /**
     * Limit how many PrecoPorTabelas to update.
     */
    limit?: number
  }

  /**
   * PrecoPorTabela updateManyAndReturn
   */
  export type PrecoPorTabelaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PrecoPorTabela
     */
    select?: PrecoPorTabelaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PrecoPorTabela
     */
    omit?: PrecoPorTabelaOmit<ExtArgs> | null
    /**
     * The data used to update PrecoPorTabelas.
     */
    data: XOR<PrecoPorTabelaUpdateManyMutationInput, PrecoPorTabelaUncheckedUpdateManyInput>
    /**
     * Filter which PrecoPorTabelas to update
     */
    where?: PrecoPorTabelaWhereInput
    /**
     * Limit how many PrecoPorTabelas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrecoPorTabelaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * PrecoPorTabela upsert
   */
  export type PrecoPorTabelaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PrecoPorTabela
     */
    select?: PrecoPorTabelaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PrecoPorTabela
     */
    omit?: PrecoPorTabelaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrecoPorTabelaInclude<ExtArgs> | null
    /**
     * The filter to search for the PrecoPorTabela to update in case it exists.
     */
    where: PrecoPorTabelaWhereUniqueInput
    /**
     * In case the PrecoPorTabela found by the `where` argument doesn't exist, create a new PrecoPorTabela with this data.
     */
    create: XOR<PrecoPorTabelaCreateInput, PrecoPorTabelaUncheckedCreateInput>
    /**
     * In case the PrecoPorTabela was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PrecoPorTabelaUpdateInput, PrecoPorTabelaUncheckedUpdateInput>
  }

  /**
   * PrecoPorTabela delete
   */
  export type PrecoPorTabelaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PrecoPorTabela
     */
    select?: PrecoPorTabelaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PrecoPorTabela
     */
    omit?: PrecoPorTabelaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrecoPorTabelaInclude<ExtArgs> | null
    /**
     * Filter which PrecoPorTabela to delete.
     */
    where: PrecoPorTabelaWhereUniqueInput
  }

  /**
   * PrecoPorTabela deleteMany
   */
  export type PrecoPorTabelaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PrecoPorTabelas to delete
     */
    where?: PrecoPorTabelaWhereInput
    /**
     * Limit how many PrecoPorTabelas to delete.
     */
    limit?: number
  }

  /**
   * PrecoPorTabela without action
   */
  export type PrecoPorTabelaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PrecoPorTabela
     */
    select?: PrecoPorTabelaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PrecoPorTabela
     */
    omit?: PrecoPorTabelaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrecoPorTabelaInclude<ExtArgs> | null
  }


  /**
   * Model Material
   */

  export type AggregateMaterial = {
    _count: MaterialCountAggregateOutputType | null
    _avg: MaterialAvgAggregateOutputType | null
    _sum: MaterialSumAggregateOutputType | null
    _min: MaterialMinAggregateOutputType | null
    _max: MaterialMaxAggregateOutputType | null
  }

  export type MaterialAvgAggregateOutputType = {
    id: number | null
    catID: number | null
    v_venda: Decimal | null
    estoque: Decimal | null
  }

  export type MaterialSumAggregateOutputType = {
    id: number | null
    catID: number | null
    v_venda: Decimal | null
    estoque: Decimal | null
  }

  export type MaterialMinAggregateOutputType = {
    id: number | null
    nome: string | null
    catID: number | null
    v_venda: Decimal | null
    estoque: Decimal | null
    criado_em: Date | null
    editado_em: Date | null
    status: boolean | null
  }

  export type MaterialMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    catID: number | null
    v_venda: Decimal | null
    estoque: Decimal | null
    criado_em: Date | null
    editado_em: Date | null
    status: boolean | null
  }

  export type MaterialCountAggregateOutputType = {
    id: number
    nome: number
    catID: number
    v_venda: number
    estoque: number
    criado_em: number
    editado_em: number
    status: number
    _all: number
  }


  export type MaterialAvgAggregateInputType = {
    id?: true
    catID?: true
    v_venda?: true
    estoque?: true
  }

  export type MaterialSumAggregateInputType = {
    id?: true
    catID?: true
    v_venda?: true
    estoque?: true
  }

  export type MaterialMinAggregateInputType = {
    id?: true
    nome?: true
    catID?: true
    v_venda?: true
    estoque?: true
    criado_em?: true
    editado_em?: true
    status?: true
  }

  export type MaterialMaxAggregateInputType = {
    id?: true
    nome?: true
    catID?: true
    v_venda?: true
    estoque?: true
    criado_em?: true
    editado_em?: true
    status?: true
  }

  export type MaterialCountAggregateInputType = {
    id?: true
    nome?: true
    catID?: true
    v_venda?: true
    estoque?: true
    criado_em?: true
    editado_em?: true
    status?: true
    _all?: true
  }

  export type MaterialAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Material to aggregate.
     */
    where?: MaterialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Materials to fetch.
     */
    orderBy?: MaterialOrderByWithRelationInput | MaterialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MaterialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Materials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Materials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Materials
    **/
    _count?: true | MaterialCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MaterialAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MaterialSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MaterialMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MaterialMaxAggregateInputType
  }

  export type GetMaterialAggregateType<T extends MaterialAggregateArgs> = {
        [P in keyof T & keyof AggregateMaterial]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMaterial[P]>
      : GetScalarType<T[P], AggregateMaterial[P]>
  }




  export type MaterialGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MaterialWhereInput
    orderBy?: MaterialOrderByWithAggregationInput | MaterialOrderByWithAggregationInput[]
    by: MaterialScalarFieldEnum[] | MaterialScalarFieldEnum
    having?: MaterialScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MaterialCountAggregateInputType | true
    _avg?: MaterialAvgAggregateInputType
    _sum?: MaterialSumAggregateInputType
    _min?: MaterialMinAggregateInputType
    _max?: MaterialMaxAggregateInputType
  }

  export type MaterialGroupByOutputType = {
    id: number
    nome: string
    catID: number
    v_venda: Decimal
    estoque: Decimal
    criado_em: Date
    editado_em: Date
    status: boolean
    _count: MaterialCountAggregateOutputType | null
    _avg: MaterialAvgAggregateOutputType | null
    _sum: MaterialSumAggregateOutputType | null
    _min: MaterialMinAggregateOutputType | null
    _max: MaterialMaxAggregateOutputType | null
  }

  type GetMaterialGroupByPayload<T extends MaterialGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MaterialGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MaterialGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MaterialGroupByOutputType[P]>
            : GetScalarType<T[P], MaterialGroupByOutputType[P]>
        }
      >
    >


  export type MaterialSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    catID?: boolean
    v_venda?: boolean
    estoque?: boolean
    criado_em?: boolean
    editado_em?: boolean
    status?: boolean
    items?: boolean | Material$itemsArgs<ExtArgs>
    categoria?: boolean | CategoriaMaterialDefaultArgs<ExtArgs>
    movimentacoes?: boolean | Material$movimentacoesArgs<ExtArgs>
    preco_tabela?: boolean | Material$preco_tabelaArgs<ExtArgs>
    _count?: boolean | MaterialCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["material"]>

  export type MaterialSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    catID?: boolean
    v_venda?: boolean
    estoque?: boolean
    criado_em?: boolean
    editado_em?: boolean
    status?: boolean
    categoria?: boolean | CategoriaMaterialDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["material"]>

  export type MaterialSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    catID?: boolean
    v_venda?: boolean
    estoque?: boolean
    criado_em?: boolean
    editado_em?: boolean
    status?: boolean
    categoria?: boolean | CategoriaMaterialDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["material"]>

  export type MaterialSelectScalar = {
    id?: boolean
    nome?: boolean
    catID?: boolean
    v_venda?: boolean
    estoque?: boolean
    criado_em?: boolean
    editado_em?: boolean
    status?: boolean
  }

  export type MaterialOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nome" | "catID" | "v_venda" | "estoque" | "criado_em" | "editado_em" | "status", ExtArgs["result"]["material"]>
  export type MaterialInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    items?: boolean | Material$itemsArgs<ExtArgs>
    categoria?: boolean | CategoriaMaterialDefaultArgs<ExtArgs>
    movimentacoes?: boolean | Material$movimentacoesArgs<ExtArgs>
    preco_tabela?: boolean | Material$preco_tabelaArgs<ExtArgs>
    _count?: boolean | MaterialCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type MaterialIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    categoria?: boolean | CategoriaMaterialDefaultArgs<ExtArgs>
  }
  export type MaterialIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    categoria?: boolean | CategoriaMaterialDefaultArgs<ExtArgs>
  }

  export type $MaterialPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Material"
    objects: {
      items: Prisma.$ItemPedidoPayload<ExtArgs>[]
      categoria: Prisma.$CategoriaMaterialPayload<ExtArgs>
      movimentacoes: Prisma.$MovimentacaoEstoquePayload<ExtArgs>[]
      preco_tabela: Prisma.$PrecoPorTabelaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      catID: number
      v_venda: Prisma.Decimal
      estoque: Prisma.Decimal
      criado_em: Date
      editado_em: Date
      status: boolean
    }, ExtArgs["result"]["material"]>
    composites: {}
  }

  type MaterialGetPayload<S extends boolean | null | undefined | MaterialDefaultArgs> = $Result.GetResult<Prisma.$MaterialPayload, S>

  type MaterialCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MaterialFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MaterialCountAggregateInputType | true
    }

  export interface MaterialDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Material'], meta: { name: 'Material' } }
    /**
     * Find zero or one Material that matches the filter.
     * @param {MaterialFindUniqueArgs} args - Arguments to find a Material
     * @example
     * // Get one Material
     * const material = await prisma.material.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MaterialFindUniqueArgs>(args: SelectSubset<T, MaterialFindUniqueArgs<ExtArgs>>): Prisma__MaterialClient<$Result.GetResult<Prisma.$MaterialPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Material that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MaterialFindUniqueOrThrowArgs} args - Arguments to find a Material
     * @example
     * // Get one Material
     * const material = await prisma.material.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MaterialFindUniqueOrThrowArgs>(args: SelectSubset<T, MaterialFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MaterialClient<$Result.GetResult<Prisma.$MaterialPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Material that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaterialFindFirstArgs} args - Arguments to find a Material
     * @example
     * // Get one Material
     * const material = await prisma.material.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MaterialFindFirstArgs>(args?: SelectSubset<T, MaterialFindFirstArgs<ExtArgs>>): Prisma__MaterialClient<$Result.GetResult<Prisma.$MaterialPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Material that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaterialFindFirstOrThrowArgs} args - Arguments to find a Material
     * @example
     * // Get one Material
     * const material = await prisma.material.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MaterialFindFirstOrThrowArgs>(args?: SelectSubset<T, MaterialFindFirstOrThrowArgs<ExtArgs>>): Prisma__MaterialClient<$Result.GetResult<Prisma.$MaterialPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Materials that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaterialFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Materials
     * const materials = await prisma.material.findMany()
     * 
     * // Get first 10 Materials
     * const materials = await prisma.material.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const materialWithIdOnly = await prisma.material.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MaterialFindManyArgs>(args?: SelectSubset<T, MaterialFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaterialPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Material.
     * @param {MaterialCreateArgs} args - Arguments to create a Material.
     * @example
     * // Create one Material
     * const Material = await prisma.material.create({
     *   data: {
     *     // ... data to create a Material
     *   }
     * })
     * 
     */
    create<T extends MaterialCreateArgs>(args: SelectSubset<T, MaterialCreateArgs<ExtArgs>>): Prisma__MaterialClient<$Result.GetResult<Prisma.$MaterialPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Materials.
     * @param {MaterialCreateManyArgs} args - Arguments to create many Materials.
     * @example
     * // Create many Materials
     * const material = await prisma.material.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MaterialCreateManyArgs>(args?: SelectSubset<T, MaterialCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Materials and returns the data saved in the database.
     * @param {MaterialCreateManyAndReturnArgs} args - Arguments to create many Materials.
     * @example
     * // Create many Materials
     * const material = await prisma.material.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Materials and only return the `id`
     * const materialWithIdOnly = await prisma.material.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MaterialCreateManyAndReturnArgs>(args?: SelectSubset<T, MaterialCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaterialPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Material.
     * @param {MaterialDeleteArgs} args - Arguments to delete one Material.
     * @example
     * // Delete one Material
     * const Material = await prisma.material.delete({
     *   where: {
     *     // ... filter to delete one Material
     *   }
     * })
     * 
     */
    delete<T extends MaterialDeleteArgs>(args: SelectSubset<T, MaterialDeleteArgs<ExtArgs>>): Prisma__MaterialClient<$Result.GetResult<Prisma.$MaterialPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Material.
     * @param {MaterialUpdateArgs} args - Arguments to update one Material.
     * @example
     * // Update one Material
     * const material = await prisma.material.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MaterialUpdateArgs>(args: SelectSubset<T, MaterialUpdateArgs<ExtArgs>>): Prisma__MaterialClient<$Result.GetResult<Prisma.$MaterialPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Materials.
     * @param {MaterialDeleteManyArgs} args - Arguments to filter Materials to delete.
     * @example
     * // Delete a few Materials
     * const { count } = await prisma.material.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MaterialDeleteManyArgs>(args?: SelectSubset<T, MaterialDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Materials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaterialUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Materials
     * const material = await prisma.material.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MaterialUpdateManyArgs>(args: SelectSubset<T, MaterialUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Materials and returns the data updated in the database.
     * @param {MaterialUpdateManyAndReturnArgs} args - Arguments to update many Materials.
     * @example
     * // Update many Materials
     * const material = await prisma.material.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Materials and only return the `id`
     * const materialWithIdOnly = await prisma.material.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MaterialUpdateManyAndReturnArgs>(args: SelectSubset<T, MaterialUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaterialPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Material.
     * @param {MaterialUpsertArgs} args - Arguments to update or create a Material.
     * @example
     * // Update or create a Material
     * const material = await prisma.material.upsert({
     *   create: {
     *     // ... data to create a Material
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Material we want to update
     *   }
     * })
     */
    upsert<T extends MaterialUpsertArgs>(args: SelectSubset<T, MaterialUpsertArgs<ExtArgs>>): Prisma__MaterialClient<$Result.GetResult<Prisma.$MaterialPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Materials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaterialCountArgs} args - Arguments to filter Materials to count.
     * @example
     * // Count the number of Materials
     * const count = await prisma.material.count({
     *   where: {
     *     // ... the filter for the Materials we want to count
     *   }
     * })
    **/
    count<T extends MaterialCountArgs>(
      args?: Subset<T, MaterialCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MaterialCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Material.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaterialAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MaterialAggregateArgs>(args: Subset<T, MaterialAggregateArgs>): Prisma.PrismaPromise<GetMaterialAggregateType<T>>

    /**
     * Group by Material.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaterialGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MaterialGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MaterialGroupByArgs['orderBy'] }
        : { orderBy?: MaterialGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MaterialGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMaterialGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Material model
   */
  readonly fields: MaterialFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Material.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MaterialClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    items<T extends Material$itemsArgs<ExtArgs> = {}>(args?: Subset<T, Material$itemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ItemPedidoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    categoria<T extends CategoriaMaterialDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CategoriaMaterialDefaultArgs<ExtArgs>>): Prisma__CategoriaMaterialClient<$Result.GetResult<Prisma.$CategoriaMaterialPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    movimentacoes<T extends Material$movimentacoesArgs<ExtArgs> = {}>(args?: Subset<T, Material$movimentacoesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MovimentacaoEstoquePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    preco_tabela<T extends Material$preco_tabelaArgs<ExtArgs> = {}>(args?: Subset<T, Material$preco_tabelaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PrecoPorTabelaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Material model
   */
  interface MaterialFieldRefs {
    readonly id: FieldRef<"Material", 'Int'>
    readonly nome: FieldRef<"Material", 'String'>
    readonly catID: FieldRef<"Material", 'Int'>
    readonly v_venda: FieldRef<"Material", 'Decimal'>
    readonly estoque: FieldRef<"Material", 'Decimal'>
    readonly criado_em: FieldRef<"Material", 'DateTime'>
    readonly editado_em: FieldRef<"Material", 'DateTime'>
    readonly status: FieldRef<"Material", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * Material findUnique
   */
  export type MaterialFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Material
     */
    select?: MaterialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Material
     */
    omit?: MaterialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialInclude<ExtArgs> | null
    /**
     * Filter, which Material to fetch.
     */
    where: MaterialWhereUniqueInput
  }

  /**
   * Material findUniqueOrThrow
   */
  export type MaterialFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Material
     */
    select?: MaterialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Material
     */
    omit?: MaterialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialInclude<ExtArgs> | null
    /**
     * Filter, which Material to fetch.
     */
    where: MaterialWhereUniqueInput
  }

  /**
   * Material findFirst
   */
  export type MaterialFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Material
     */
    select?: MaterialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Material
     */
    omit?: MaterialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialInclude<ExtArgs> | null
    /**
     * Filter, which Material to fetch.
     */
    where?: MaterialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Materials to fetch.
     */
    orderBy?: MaterialOrderByWithRelationInput | MaterialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Materials.
     */
    cursor?: MaterialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Materials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Materials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Materials.
     */
    distinct?: MaterialScalarFieldEnum | MaterialScalarFieldEnum[]
  }

  /**
   * Material findFirstOrThrow
   */
  export type MaterialFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Material
     */
    select?: MaterialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Material
     */
    omit?: MaterialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialInclude<ExtArgs> | null
    /**
     * Filter, which Material to fetch.
     */
    where?: MaterialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Materials to fetch.
     */
    orderBy?: MaterialOrderByWithRelationInput | MaterialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Materials.
     */
    cursor?: MaterialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Materials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Materials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Materials.
     */
    distinct?: MaterialScalarFieldEnum | MaterialScalarFieldEnum[]
  }

  /**
   * Material findMany
   */
  export type MaterialFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Material
     */
    select?: MaterialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Material
     */
    omit?: MaterialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialInclude<ExtArgs> | null
    /**
     * Filter, which Materials to fetch.
     */
    where?: MaterialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Materials to fetch.
     */
    orderBy?: MaterialOrderByWithRelationInput | MaterialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Materials.
     */
    cursor?: MaterialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Materials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Materials.
     */
    skip?: number
    distinct?: MaterialScalarFieldEnum | MaterialScalarFieldEnum[]
  }

  /**
   * Material create
   */
  export type MaterialCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Material
     */
    select?: MaterialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Material
     */
    omit?: MaterialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialInclude<ExtArgs> | null
    /**
     * The data needed to create a Material.
     */
    data: XOR<MaterialCreateInput, MaterialUncheckedCreateInput>
  }

  /**
   * Material createMany
   */
  export type MaterialCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Materials.
     */
    data: MaterialCreateManyInput | MaterialCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Material createManyAndReturn
   */
  export type MaterialCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Material
     */
    select?: MaterialSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Material
     */
    omit?: MaterialOmit<ExtArgs> | null
    /**
     * The data used to create many Materials.
     */
    data: MaterialCreateManyInput | MaterialCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Material update
   */
  export type MaterialUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Material
     */
    select?: MaterialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Material
     */
    omit?: MaterialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialInclude<ExtArgs> | null
    /**
     * The data needed to update a Material.
     */
    data: XOR<MaterialUpdateInput, MaterialUncheckedUpdateInput>
    /**
     * Choose, which Material to update.
     */
    where: MaterialWhereUniqueInput
  }

  /**
   * Material updateMany
   */
  export type MaterialUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Materials.
     */
    data: XOR<MaterialUpdateManyMutationInput, MaterialUncheckedUpdateManyInput>
    /**
     * Filter which Materials to update
     */
    where?: MaterialWhereInput
    /**
     * Limit how many Materials to update.
     */
    limit?: number
  }

  /**
   * Material updateManyAndReturn
   */
  export type MaterialUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Material
     */
    select?: MaterialSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Material
     */
    omit?: MaterialOmit<ExtArgs> | null
    /**
     * The data used to update Materials.
     */
    data: XOR<MaterialUpdateManyMutationInput, MaterialUncheckedUpdateManyInput>
    /**
     * Filter which Materials to update
     */
    where?: MaterialWhereInput
    /**
     * Limit how many Materials to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Material upsert
   */
  export type MaterialUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Material
     */
    select?: MaterialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Material
     */
    omit?: MaterialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialInclude<ExtArgs> | null
    /**
     * The filter to search for the Material to update in case it exists.
     */
    where: MaterialWhereUniqueInput
    /**
     * In case the Material found by the `where` argument doesn't exist, create a new Material with this data.
     */
    create: XOR<MaterialCreateInput, MaterialUncheckedCreateInput>
    /**
     * In case the Material was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MaterialUpdateInput, MaterialUncheckedUpdateInput>
  }

  /**
   * Material delete
   */
  export type MaterialDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Material
     */
    select?: MaterialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Material
     */
    omit?: MaterialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialInclude<ExtArgs> | null
    /**
     * Filter which Material to delete.
     */
    where: MaterialWhereUniqueInput
  }

  /**
   * Material deleteMany
   */
  export type MaterialDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Materials to delete
     */
    where?: MaterialWhereInput
    /**
     * Limit how many Materials to delete.
     */
    limit?: number
  }

  /**
   * Material.items
   */
  export type Material$itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItemPedido
     */
    select?: ItemPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ItemPedido
     */
    omit?: ItemPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemPedidoInclude<ExtArgs> | null
    where?: ItemPedidoWhereInput
    orderBy?: ItemPedidoOrderByWithRelationInput | ItemPedidoOrderByWithRelationInput[]
    cursor?: ItemPedidoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ItemPedidoScalarFieldEnum | ItemPedidoScalarFieldEnum[]
  }

  /**
   * Material.movimentacoes
   */
  export type Material$movimentacoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimentacaoEstoque
     */
    select?: MovimentacaoEstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MovimentacaoEstoque
     */
    omit?: MovimentacaoEstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimentacaoEstoqueInclude<ExtArgs> | null
    where?: MovimentacaoEstoqueWhereInput
    orderBy?: MovimentacaoEstoqueOrderByWithRelationInput | MovimentacaoEstoqueOrderByWithRelationInput[]
    cursor?: MovimentacaoEstoqueWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MovimentacaoEstoqueScalarFieldEnum | MovimentacaoEstoqueScalarFieldEnum[]
  }

  /**
   * Material.preco_tabela
   */
  export type Material$preco_tabelaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PrecoPorTabela
     */
    select?: PrecoPorTabelaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PrecoPorTabela
     */
    omit?: PrecoPorTabelaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PrecoPorTabelaInclude<ExtArgs> | null
    where?: PrecoPorTabelaWhereInput
    orderBy?: PrecoPorTabelaOrderByWithRelationInput | PrecoPorTabelaOrderByWithRelationInput[]
    cursor?: PrecoPorTabelaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PrecoPorTabelaScalarFieldEnum | PrecoPorTabelaScalarFieldEnum[]
  }

  /**
   * Material without action
   */
  export type MaterialDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Material
     */
    select?: MaterialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Material
     */
    omit?: MaterialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialInclude<ExtArgs> | null
  }


  /**
   * Model CategoriaMaterial
   */

  export type AggregateCategoriaMaterial = {
    _count: CategoriaMaterialCountAggregateOutputType | null
    _avg: CategoriaMaterialAvgAggregateOutputType | null
    _sum: CategoriaMaterialSumAggregateOutputType | null
    _min: CategoriaMaterialMinAggregateOutputType | null
    _max: CategoriaMaterialMaxAggregateOutputType | null
  }

  export type CategoriaMaterialAvgAggregateOutputType = {
    id: number | null
  }

  export type CategoriaMaterialSumAggregateOutputType = {
    id: number | null
  }

  export type CategoriaMaterialMinAggregateOutputType = {
    id: number | null
    name: string | null
  }

  export type CategoriaMaterialMaxAggregateOutputType = {
    id: number | null
    name: string | null
  }

  export type CategoriaMaterialCountAggregateOutputType = {
    id: number
    name: number
    _all: number
  }


  export type CategoriaMaterialAvgAggregateInputType = {
    id?: true
  }

  export type CategoriaMaterialSumAggregateInputType = {
    id?: true
  }

  export type CategoriaMaterialMinAggregateInputType = {
    id?: true
    name?: true
  }

  export type CategoriaMaterialMaxAggregateInputType = {
    id?: true
    name?: true
  }

  export type CategoriaMaterialCountAggregateInputType = {
    id?: true
    name?: true
    _all?: true
  }

  export type CategoriaMaterialAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CategoriaMaterial to aggregate.
     */
    where?: CategoriaMaterialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CategoriaMaterials to fetch.
     */
    orderBy?: CategoriaMaterialOrderByWithRelationInput | CategoriaMaterialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CategoriaMaterialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CategoriaMaterials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CategoriaMaterials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CategoriaMaterials
    **/
    _count?: true | CategoriaMaterialCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CategoriaMaterialAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CategoriaMaterialSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CategoriaMaterialMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CategoriaMaterialMaxAggregateInputType
  }

  export type GetCategoriaMaterialAggregateType<T extends CategoriaMaterialAggregateArgs> = {
        [P in keyof T & keyof AggregateCategoriaMaterial]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategoriaMaterial[P]>
      : GetScalarType<T[P], AggregateCategoriaMaterial[P]>
  }




  export type CategoriaMaterialGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoriaMaterialWhereInput
    orderBy?: CategoriaMaterialOrderByWithAggregationInput | CategoriaMaterialOrderByWithAggregationInput[]
    by: CategoriaMaterialScalarFieldEnum[] | CategoriaMaterialScalarFieldEnum
    having?: CategoriaMaterialScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CategoriaMaterialCountAggregateInputType | true
    _avg?: CategoriaMaterialAvgAggregateInputType
    _sum?: CategoriaMaterialSumAggregateInputType
    _min?: CategoriaMaterialMinAggregateInputType
    _max?: CategoriaMaterialMaxAggregateInputType
  }

  export type CategoriaMaterialGroupByOutputType = {
    id: number
    name: string
    _count: CategoriaMaterialCountAggregateOutputType | null
    _avg: CategoriaMaterialAvgAggregateOutputType | null
    _sum: CategoriaMaterialSumAggregateOutputType | null
    _min: CategoriaMaterialMinAggregateOutputType | null
    _max: CategoriaMaterialMaxAggregateOutputType | null
  }

  type GetCategoriaMaterialGroupByPayload<T extends CategoriaMaterialGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CategoriaMaterialGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CategoriaMaterialGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CategoriaMaterialGroupByOutputType[P]>
            : GetScalarType<T[P], CategoriaMaterialGroupByOutputType[P]>
        }
      >
    >


  export type CategoriaMaterialSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    materiais?: boolean | CategoriaMaterial$materiaisArgs<ExtArgs>
    _count?: boolean | CategoriaMaterialCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["categoriaMaterial"]>

  export type CategoriaMaterialSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
  }, ExtArgs["result"]["categoriaMaterial"]>

  export type CategoriaMaterialSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
  }, ExtArgs["result"]["categoriaMaterial"]>

  export type CategoriaMaterialSelectScalar = {
    id?: boolean
    name?: boolean
  }

  export type CategoriaMaterialOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name", ExtArgs["result"]["categoriaMaterial"]>
  export type CategoriaMaterialInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    materiais?: boolean | CategoriaMaterial$materiaisArgs<ExtArgs>
    _count?: boolean | CategoriaMaterialCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CategoriaMaterialIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type CategoriaMaterialIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $CategoriaMaterialPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CategoriaMaterial"
    objects: {
      materiais: Prisma.$MaterialPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
    }, ExtArgs["result"]["categoriaMaterial"]>
    composites: {}
  }

  type CategoriaMaterialGetPayload<S extends boolean | null | undefined | CategoriaMaterialDefaultArgs> = $Result.GetResult<Prisma.$CategoriaMaterialPayload, S>

  type CategoriaMaterialCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CategoriaMaterialFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CategoriaMaterialCountAggregateInputType | true
    }

  export interface CategoriaMaterialDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CategoriaMaterial'], meta: { name: 'CategoriaMaterial' } }
    /**
     * Find zero or one CategoriaMaterial that matches the filter.
     * @param {CategoriaMaterialFindUniqueArgs} args - Arguments to find a CategoriaMaterial
     * @example
     * // Get one CategoriaMaterial
     * const categoriaMaterial = await prisma.categoriaMaterial.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CategoriaMaterialFindUniqueArgs>(args: SelectSubset<T, CategoriaMaterialFindUniqueArgs<ExtArgs>>): Prisma__CategoriaMaterialClient<$Result.GetResult<Prisma.$CategoriaMaterialPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CategoriaMaterial that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CategoriaMaterialFindUniqueOrThrowArgs} args - Arguments to find a CategoriaMaterial
     * @example
     * // Get one CategoriaMaterial
     * const categoriaMaterial = await prisma.categoriaMaterial.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CategoriaMaterialFindUniqueOrThrowArgs>(args: SelectSubset<T, CategoriaMaterialFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CategoriaMaterialClient<$Result.GetResult<Prisma.$CategoriaMaterialPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CategoriaMaterial that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaMaterialFindFirstArgs} args - Arguments to find a CategoriaMaterial
     * @example
     * // Get one CategoriaMaterial
     * const categoriaMaterial = await prisma.categoriaMaterial.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CategoriaMaterialFindFirstArgs>(args?: SelectSubset<T, CategoriaMaterialFindFirstArgs<ExtArgs>>): Prisma__CategoriaMaterialClient<$Result.GetResult<Prisma.$CategoriaMaterialPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CategoriaMaterial that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaMaterialFindFirstOrThrowArgs} args - Arguments to find a CategoriaMaterial
     * @example
     * // Get one CategoriaMaterial
     * const categoriaMaterial = await prisma.categoriaMaterial.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CategoriaMaterialFindFirstOrThrowArgs>(args?: SelectSubset<T, CategoriaMaterialFindFirstOrThrowArgs<ExtArgs>>): Prisma__CategoriaMaterialClient<$Result.GetResult<Prisma.$CategoriaMaterialPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CategoriaMaterials that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaMaterialFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CategoriaMaterials
     * const categoriaMaterials = await prisma.categoriaMaterial.findMany()
     * 
     * // Get first 10 CategoriaMaterials
     * const categoriaMaterials = await prisma.categoriaMaterial.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const categoriaMaterialWithIdOnly = await prisma.categoriaMaterial.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CategoriaMaterialFindManyArgs>(args?: SelectSubset<T, CategoriaMaterialFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoriaMaterialPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CategoriaMaterial.
     * @param {CategoriaMaterialCreateArgs} args - Arguments to create a CategoriaMaterial.
     * @example
     * // Create one CategoriaMaterial
     * const CategoriaMaterial = await prisma.categoriaMaterial.create({
     *   data: {
     *     // ... data to create a CategoriaMaterial
     *   }
     * })
     * 
     */
    create<T extends CategoriaMaterialCreateArgs>(args: SelectSubset<T, CategoriaMaterialCreateArgs<ExtArgs>>): Prisma__CategoriaMaterialClient<$Result.GetResult<Prisma.$CategoriaMaterialPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CategoriaMaterials.
     * @param {CategoriaMaterialCreateManyArgs} args - Arguments to create many CategoriaMaterials.
     * @example
     * // Create many CategoriaMaterials
     * const categoriaMaterial = await prisma.categoriaMaterial.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CategoriaMaterialCreateManyArgs>(args?: SelectSubset<T, CategoriaMaterialCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CategoriaMaterials and returns the data saved in the database.
     * @param {CategoriaMaterialCreateManyAndReturnArgs} args - Arguments to create many CategoriaMaterials.
     * @example
     * // Create many CategoriaMaterials
     * const categoriaMaterial = await prisma.categoriaMaterial.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CategoriaMaterials and only return the `id`
     * const categoriaMaterialWithIdOnly = await prisma.categoriaMaterial.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CategoriaMaterialCreateManyAndReturnArgs>(args?: SelectSubset<T, CategoriaMaterialCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoriaMaterialPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CategoriaMaterial.
     * @param {CategoriaMaterialDeleteArgs} args - Arguments to delete one CategoriaMaterial.
     * @example
     * // Delete one CategoriaMaterial
     * const CategoriaMaterial = await prisma.categoriaMaterial.delete({
     *   where: {
     *     // ... filter to delete one CategoriaMaterial
     *   }
     * })
     * 
     */
    delete<T extends CategoriaMaterialDeleteArgs>(args: SelectSubset<T, CategoriaMaterialDeleteArgs<ExtArgs>>): Prisma__CategoriaMaterialClient<$Result.GetResult<Prisma.$CategoriaMaterialPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CategoriaMaterial.
     * @param {CategoriaMaterialUpdateArgs} args - Arguments to update one CategoriaMaterial.
     * @example
     * // Update one CategoriaMaterial
     * const categoriaMaterial = await prisma.categoriaMaterial.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CategoriaMaterialUpdateArgs>(args: SelectSubset<T, CategoriaMaterialUpdateArgs<ExtArgs>>): Prisma__CategoriaMaterialClient<$Result.GetResult<Prisma.$CategoriaMaterialPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CategoriaMaterials.
     * @param {CategoriaMaterialDeleteManyArgs} args - Arguments to filter CategoriaMaterials to delete.
     * @example
     * // Delete a few CategoriaMaterials
     * const { count } = await prisma.categoriaMaterial.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CategoriaMaterialDeleteManyArgs>(args?: SelectSubset<T, CategoriaMaterialDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CategoriaMaterials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaMaterialUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CategoriaMaterials
     * const categoriaMaterial = await prisma.categoriaMaterial.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CategoriaMaterialUpdateManyArgs>(args: SelectSubset<T, CategoriaMaterialUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CategoriaMaterials and returns the data updated in the database.
     * @param {CategoriaMaterialUpdateManyAndReturnArgs} args - Arguments to update many CategoriaMaterials.
     * @example
     * // Update many CategoriaMaterials
     * const categoriaMaterial = await prisma.categoriaMaterial.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CategoriaMaterials and only return the `id`
     * const categoriaMaterialWithIdOnly = await prisma.categoriaMaterial.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CategoriaMaterialUpdateManyAndReturnArgs>(args: SelectSubset<T, CategoriaMaterialUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoriaMaterialPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CategoriaMaterial.
     * @param {CategoriaMaterialUpsertArgs} args - Arguments to update or create a CategoriaMaterial.
     * @example
     * // Update or create a CategoriaMaterial
     * const categoriaMaterial = await prisma.categoriaMaterial.upsert({
     *   create: {
     *     // ... data to create a CategoriaMaterial
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CategoriaMaterial we want to update
     *   }
     * })
     */
    upsert<T extends CategoriaMaterialUpsertArgs>(args: SelectSubset<T, CategoriaMaterialUpsertArgs<ExtArgs>>): Prisma__CategoriaMaterialClient<$Result.GetResult<Prisma.$CategoriaMaterialPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CategoriaMaterials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaMaterialCountArgs} args - Arguments to filter CategoriaMaterials to count.
     * @example
     * // Count the number of CategoriaMaterials
     * const count = await prisma.categoriaMaterial.count({
     *   where: {
     *     // ... the filter for the CategoriaMaterials we want to count
     *   }
     * })
    **/
    count<T extends CategoriaMaterialCountArgs>(
      args?: Subset<T, CategoriaMaterialCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CategoriaMaterialCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CategoriaMaterial.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaMaterialAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CategoriaMaterialAggregateArgs>(args: Subset<T, CategoriaMaterialAggregateArgs>): Prisma.PrismaPromise<GetCategoriaMaterialAggregateType<T>>

    /**
     * Group by CategoriaMaterial.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaMaterialGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CategoriaMaterialGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CategoriaMaterialGroupByArgs['orderBy'] }
        : { orderBy?: CategoriaMaterialGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CategoriaMaterialGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategoriaMaterialGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CategoriaMaterial model
   */
  readonly fields: CategoriaMaterialFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CategoriaMaterial.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CategoriaMaterialClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    materiais<T extends CategoriaMaterial$materiaisArgs<ExtArgs> = {}>(args?: Subset<T, CategoriaMaterial$materiaisArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaterialPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CategoriaMaterial model
   */
  interface CategoriaMaterialFieldRefs {
    readonly id: FieldRef<"CategoriaMaterial", 'Int'>
    readonly name: FieldRef<"CategoriaMaterial", 'String'>
  }
    

  // Custom InputTypes
  /**
   * CategoriaMaterial findUnique
   */
  export type CategoriaMaterialFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaMaterial
     */
    select?: CategoriaMaterialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoriaMaterial
     */
    omit?: CategoriaMaterialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaMaterialInclude<ExtArgs> | null
    /**
     * Filter, which CategoriaMaterial to fetch.
     */
    where: CategoriaMaterialWhereUniqueInput
  }

  /**
   * CategoriaMaterial findUniqueOrThrow
   */
  export type CategoriaMaterialFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaMaterial
     */
    select?: CategoriaMaterialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoriaMaterial
     */
    omit?: CategoriaMaterialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaMaterialInclude<ExtArgs> | null
    /**
     * Filter, which CategoriaMaterial to fetch.
     */
    where: CategoriaMaterialWhereUniqueInput
  }

  /**
   * CategoriaMaterial findFirst
   */
  export type CategoriaMaterialFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaMaterial
     */
    select?: CategoriaMaterialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoriaMaterial
     */
    omit?: CategoriaMaterialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaMaterialInclude<ExtArgs> | null
    /**
     * Filter, which CategoriaMaterial to fetch.
     */
    where?: CategoriaMaterialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CategoriaMaterials to fetch.
     */
    orderBy?: CategoriaMaterialOrderByWithRelationInput | CategoriaMaterialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CategoriaMaterials.
     */
    cursor?: CategoriaMaterialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CategoriaMaterials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CategoriaMaterials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CategoriaMaterials.
     */
    distinct?: CategoriaMaterialScalarFieldEnum | CategoriaMaterialScalarFieldEnum[]
  }

  /**
   * CategoriaMaterial findFirstOrThrow
   */
  export type CategoriaMaterialFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaMaterial
     */
    select?: CategoriaMaterialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoriaMaterial
     */
    omit?: CategoriaMaterialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaMaterialInclude<ExtArgs> | null
    /**
     * Filter, which CategoriaMaterial to fetch.
     */
    where?: CategoriaMaterialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CategoriaMaterials to fetch.
     */
    orderBy?: CategoriaMaterialOrderByWithRelationInput | CategoriaMaterialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CategoriaMaterials.
     */
    cursor?: CategoriaMaterialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CategoriaMaterials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CategoriaMaterials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CategoriaMaterials.
     */
    distinct?: CategoriaMaterialScalarFieldEnum | CategoriaMaterialScalarFieldEnum[]
  }

  /**
   * CategoriaMaterial findMany
   */
  export type CategoriaMaterialFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaMaterial
     */
    select?: CategoriaMaterialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoriaMaterial
     */
    omit?: CategoriaMaterialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaMaterialInclude<ExtArgs> | null
    /**
     * Filter, which CategoriaMaterials to fetch.
     */
    where?: CategoriaMaterialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CategoriaMaterials to fetch.
     */
    orderBy?: CategoriaMaterialOrderByWithRelationInput | CategoriaMaterialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CategoriaMaterials.
     */
    cursor?: CategoriaMaterialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CategoriaMaterials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CategoriaMaterials.
     */
    skip?: number
    distinct?: CategoriaMaterialScalarFieldEnum | CategoriaMaterialScalarFieldEnum[]
  }

  /**
   * CategoriaMaterial create
   */
  export type CategoriaMaterialCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaMaterial
     */
    select?: CategoriaMaterialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoriaMaterial
     */
    omit?: CategoriaMaterialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaMaterialInclude<ExtArgs> | null
    /**
     * The data needed to create a CategoriaMaterial.
     */
    data: XOR<CategoriaMaterialCreateInput, CategoriaMaterialUncheckedCreateInput>
  }

  /**
   * CategoriaMaterial createMany
   */
  export type CategoriaMaterialCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CategoriaMaterials.
     */
    data: CategoriaMaterialCreateManyInput | CategoriaMaterialCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CategoriaMaterial createManyAndReturn
   */
  export type CategoriaMaterialCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaMaterial
     */
    select?: CategoriaMaterialSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CategoriaMaterial
     */
    omit?: CategoriaMaterialOmit<ExtArgs> | null
    /**
     * The data used to create many CategoriaMaterials.
     */
    data: CategoriaMaterialCreateManyInput | CategoriaMaterialCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CategoriaMaterial update
   */
  export type CategoriaMaterialUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaMaterial
     */
    select?: CategoriaMaterialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoriaMaterial
     */
    omit?: CategoriaMaterialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaMaterialInclude<ExtArgs> | null
    /**
     * The data needed to update a CategoriaMaterial.
     */
    data: XOR<CategoriaMaterialUpdateInput, CategoriaMaterialUncheckedUpdateInput>
    /**
     * Choose, which CategoriaMaterial to update.
     */
    where: CategoriaMaterialWhereUniqueInput
  }

  /**
   * CategoriaMaterial updateMany
   */
  export type CategoriaMaterialUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CategoriaMaterials.
     */
    data: XOR<CategoriaMaterialUpdateManyMutationInput, CategoriaMaterialUncheckedUpdateManyInput>
    /**
     * Filter which CategoriaMaterials to update
     */
    where?: CategoriaMaterialWhereInput
    /**
     * Limit how many CategoriaMaterials to update.
     */
    limit?: number
  }

  /**
   * CategoriaMaterial updateManyAndReturn
   */
  export type CategoriaMaterialUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaMaterial
     */
    select?: CategoriaMaterialSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CategoriaMaterial
     */
    omit?: CategoriaMaterialOmit<ExtArgs> | null
    /**
     * The data used to update CategoriaMaterials.
     */
    data: XOR<CategoriaMaterialUpdateManyMutationInput, CategoriaMaterialUncheckedUpdateManyInput>
    /**
     * Filter which CategoriaMaterials to update
     */
    where?: CategoriaMaterialWhereInput
    /**
     * Limit how many CategoriaMaterials to update.
     */
    limit?: number
  }

  /**
   * CategoriaMaterial upsert
   */
  export type CategoriaMaterialUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaMaterial
     */
    select?: CategoriaMaterialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoriaMaterial
     */
    omit?: CategoriaMaterialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaMaterialInclude<ExtArgs> | null
    /**
     * The filter to search for the CategoriaMaterial to update in case it exists.
     */
    where: CategoriaMaterialWhereUniqueInput
    /**
     * In case the CategoriaMaterial found by the `where` argument doesn't exist, create a new CategoriaMaterial with this data.
     */
    create: XOR<CategoriaMaterialCreateInput, CategoriaMaterialUncheckedCreateInput>
    /**
     * In case the CategoriaMaterial was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CategoriaMaterialUpdateInput, CategoriaMaterialUncheckedUpdateInput>
  }

  /**
   * CategoriaMaterial delete
   */
  export type CategoriaMaterialDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaMaterial
     */
    select?: CategoriaMaterialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoriaMaterial
     */
    omit?: CategoriaMaterialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaMaterialInclude<ExtArgs> | null
    /**
     * Filter which CategoriaMaterial to delete.
     */
    where: CategoriaMaterialWhereUniqueInput
  }

  /**
   * CategoriaMaterial deleteMany
   */
  export type CategoriaMaterialDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CategoriaMaterials to delete
     */
    where?: CategoriaMaterialWhereInput
    /**
     * Limit how many CategoriaMaterials to delete.
     */
    limit?: number
  }

  /**
   * CategoriaMaterial.materiais
   */
  export type CategoriaMaterial$materiaisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Material
     */
    select?: MaterialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Material
     */
    omit?: MaterialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaterialInclude<ExtArgs> | null
    where?: MaterialWhereInput
    orderBy?: MaterialOrderByWithRelationInput | MaterialOrderByWithRelationInput[]
    cursor?: MaterialWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MaterialScalarFieldEnum | MaterialScalarFieldEnum[]
  }

  /**
   * CategoriaMaterial without action
   */
  export type CategoriaMaterialDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriaMaterial
     */
    select?: CategoriaMaterialSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoriaMaterial
     */
    omit?: CategoriaMaterialOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriaMaterialInclude<ExtArgs> | null
  }


  /**
   * Model ItemPedido
   */

  export type AggregateItemPedido = {
    _count: ItemPedidoCountAggregateOutputType | null
    _avg: ItemPedidoAvgAggregateOutputType | null
    _sum: ItemPedidoSumAggregateOutputType | null
    _min: ItemPedidoMinAggregateOutputType | null
    _max: ItemPedidoMaxAggregateOutputType | null
  }

  export type ItemPedidoAvgAggregateOutputType = {
    id: number | null
    pedidoID: number | null
    materialID: number | null
    preco: Decimal | null
    quantidade: Decimal | null
    tara: Decimal | null
    impureza: Decimal | null
  }

  export type ItemPedidoSumAggregateOutputType = {
    id: number | null
    pedidoID: number | null
    materialID: number | null
    preco: Decimal | null
    quantidade: Decimal | null
    tara: Decimal | null
    impureza: Decimal | null
  }

  export type ItemPedidoMinAggregateOutputType = {
    id: number | null
    pedidoID: number | null
    materialID: number | null
    preco: Decimal | null
    quantidade: Decimal | null
    tara: Decimal | null
    impureza: Decimal | null
  }

  export type ItemPedidoMaxAggregateOutputType = {
    id: number | null
    pedidoID: number | null
    materialID: number | null
    preco: Decimal | null
    quantidade: Decimal | null
    tara: Decimal | null
    impureza: Decimal | null
  }

  export type ItemPedidoCountAggregateOutputType = {
    id: number
    pedidoID: number
    materialID: number
    preco: number
    quantidade: number
    tara: number
    impureza: number
    _all: number
  }


  export type ItemPedidoAvgAggregateInputType = {
    id?: true
    pedidoID?: true
    materialID?: true
    preco?: true
    quantidade?: true
    tara?: true
    impureza?: true
  }

  export type ItemPedidoSumAggregateInputType = {
    id?: true
    pedidoID?: true
    materialID?: true
    preco?: true
    quantidade?: true
    tara?: true
    impureza?: true
  }

  export type ItemPedidoMinAggregateInputType = {
    id?: true
    pedidoID?: true
    materialID?: true
    preco?: true
    quantidade?: true
    tara?: true
    impureza?: true
  }

  export type ItemPedidoMaxAggregateInputType = {
    id?: true
    pedidoID?: true
    materialID?: true
    preco?: true
    quantidade?: true
    tara?: true
    impureza?: true
  }

  export type ItemPedidoCountAggregateInputType = {
    id?: true
    pedidoID?: true
    materialID?: true
    preco?: true
    quantidade?: true
    tara?: true
    impureza?: true
    _all?: true
  }

  export type ItemPedidoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ItemPedido to aggregate.
     */
    where?: ItemPedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ItemPedidos to fetch.
     */
    orderBy?: ItemPedidoOrderByWithRelationInput | ItemPedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ItemPedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ItemPedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ItemPedidos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ItemPedidos
    **/
    _count?: true | ItemPedidoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ItemPedidoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ItemPedidoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ItemPedidoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ItemPedidoMaxAggregateInputType
  }

  export type GetItemPedidoAggregateType<T extends ItemPedidoAggregateArgs> = {
        [P in keyof T & keyof AggregateItemPedido]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateItemPedido[P]>
      : GetScalarType<T[P], AggregateItemPedido[P]>
  }




  export type ItemPedidoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ItemPedidoWhereInput
    orderBy?: ItemPedidoOrderByWithAggregationInput | ItemPedidoOrderByWithAggregationInput[]
    by: ItemPedidoScalarFieldEnum[] | ItemPedidoScalarFieldEnum
    having?: ItemPedidoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ItemPedidoCountAggregateInputType | true
    _avg?: ItemPedidoAvgAggregateInputType
    _sum?: ItemPedidoSumAggregateInputType
    _min?: ItemPedidoMinAggregateInputType
    _max?: ItemPedidoMaxAggregateInputType
  }

  export type ItemPedidoGroupByOutputType = {
    id: number
    pedidoID: number
    materialID: number
    preco: Decimal
    quantidade: Decimal
    tara: Decimal
    impureza: Decimal
    _count: ItemPedidoCountAggregateOutputType | null
    _avg: ItemPedidoAvgAggregateOutputType | null
    _sum: ItemPedidoSumAggregateOutputType | null
    _min: ItemPedidoMinAggregateOutputType | null
    _max: ItemPedidoMaxAggregateOutputType | null
  }

  type GetItemPedidoGroupByPayload<T extends ItemPedidoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ItemPedidoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ItemPedidoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ItemPedidoGroupByOutputType[P]>
            : GetScalarType<T[P], ItemPedidoGroupByOutputType[P]>
        }
      >
    >


  export type ItemPedidoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    pedidoID?: boolean
    materialID?: boolean
    preco?: boolean
    quantidade?: boolean
    tara?: boolean
    impureza?: boolean
    material?: boolean | MaterialDefaultArgs<ExtArgs>
    pedido?: boolean | PedidoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["itemPedido"]>

  export type ItemPedidoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    pedidoID?: boolean
    materialID?: boolean
    preco?: boolean
    quantidade?: boolean
    tara?: boolean
    impureza?: boolean
    material?: boolean | MaterialDefaultArgs<ExtArgs>
    pedido?: boolean | PedidoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["itemPedido"]>

  export type ItemPedidoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    pedidoID?: boolean
    materialID?: boolean
    preco?: boolean
    quantidade?: boolean
    tara?: boolean
    impureza?: boolean
    material?: boolean | MaterialDefaultArgs<ExtArgs>
    pedido?: boolean | PedidoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["itemPedido"]>

  export type ItemPedidoSelectScalar = {
    id?: boolean
    pedidoID?: boolean
    materialID?: boolean
    preco?: boolean
    quantidade?: boolean
    tara?: boolean
    impureza?: boolean
  }

  export type ItemPedidoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "pedidoID" | "materialID" | "preco" | "quantidade" | "tara" | "impureza", ExtArgs["result"]["itemPedido"]>
  export type ItemPedidoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    material?: boolean | MaterialDefaultArgs<ExtArgs>
    pedido?: boolean | PedidoDefaultArgs<ExtArgs>
  }
  export type ItemPedidoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    material?: boolean | MaterialDefaultArgs<ExtArgs>
    pedido?: boolean | PedidoDefaultArgs<ExtArgs>
  }
  export type ItemPedidoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    material?: boolean | MaterialDefaultArgs<ExtArgs>
    pedido?: boolean | PedidoDefaultArgs<ExtArgs>
  }

  export type $ItemPedidoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ItemPedido"
    objects: {
      material: Prisma.$MaterialPayload<ExtArgs>
      pedido: Prisma.$PedidoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      pedidoID: number
      materialID: number
      preco: Prisma.Decimal
      quantidade: Prisma.Decimal
      tara: Prisma.Decimal
      impureza: Prisma.Decimal
    }, ExtArgs["result"]["itemPedido"]>
    composites: {}
  }

  type ItemPedidoGetPayload<S extends boolean | null | undefined | ItemPedidoDefaultArgs> = $Result.GetResult<Prisma.$ItemPedidoPayload, S>

  type ItemPedidoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ItemPedidoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ItemPedidoCountAggregateInputType | true
    }

  export interface ItemPedidoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ItemPedido'], meta: { name: 'ItemPedido' } }
    /**
     * Find zero or one ItemPedido that matches the filter.
     * @param {ItemPedidoFindUniqueArgs} args - Arguments to find a ItemPedido
     * @example
     * // Get one ItemPedido
     * const itemPedido = await prisma.itemPedido.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ItemPedidoFindUniqueArgs>(args: SelectSubset<T, ItemPedidoFindUniqueArgs<ExtArgs>>): Prisma__ItemPedidoClient<$Result.GetResult<Prisma.$ItemPedidoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ItemPedido that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ItemPedidoFindUniqueOrThrowArgs} args - Arguments to find a ItemPedido
     * @example
     * // Get one ItemPedido
     * const itemPedido = await prisma.itemPedido.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ItemPedidoFindUniqueOrThrowArgs>(args: SelectSubset<T, ItemPedidoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ItemPedidoClient<$Result.GetResult<Prisma.$ItemPedidoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ItemPedido that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemPedidoFindFirstArgs} args - Arguments to find a ItemPedido
     * @example
     * // Get one ItemPedido
     * const itemPedido = await prisma.itemPedido.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ItemPedidoFindFirstArgs>(args?: SelectSubset<T, ItemPedidoFindFirstArgs<ExtArgs>>): Prisma__ItemPedidoClient<$Result.GetResult<Prisma.$ItemPedidoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ItemPedido that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemPedidoFindFirstOrThrowArgs} args - Arguments to find a ItemPedido
     * @example
     * // Get one ItemPedido
     * const itemPedido = await prisma.itemPedido.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ItemPedidoFindFirstOrThrowArgs>(args?: SelectSubset<T, ItemPedidoFindFirstOrThrowArgs<ExtArgs>>): Prisma__ItemPedidoClient<$Result.GetResult<Prisma.$ItemPedidoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ItemPedidos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemPedidoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ItemPedidos
     * const itemPedidos = await prisma.itemPedido.findMany()
     * 
     * // Get first 10 ItemPedidos
     * const itemPedidos = await prisma.itemPedido.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const itemPedidoWithIdOnly = await prisma.itemPedido.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ItemPedidoFindManyArgs>(args?: SelectSubset<T, ItemPedidoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ItemPedidoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ItemPedido.
     * @param {ItemPedidoCreateArgs} args - Arguments to create a ItemPedido.
     * @example
     * // Create one ItemPedido
     * const ItemPedido = await prisma.itemPedido.create({
     *   data: {
     *     // ... data to create a ItemPedido
     *   }
     * })
     * 
     */
    create<T extends ItemPedidoCreateArgs>(args: SelectSubset<T, ItemPedidoCreateArgs<ExtArgs>>): Prisma__ItemPedidoClient<$Result.GetResult<Prisma.$ItemPedidoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ItemPedidos.
     * @param {ItemPedidoCreateManyArgs} args - Arguments to create many ItemPedidos.
     * @example
     * // Create many ItemPedidos
     * const itemPedido = await prisma.itemPedido.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ItemPedidoCreateManyArgs>(args?: SelectSubset<T, ItemPedidoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ItemPedidos and returns the data saved in the database.
     * @param {ItemPedidoCreateManyAndReturnArgs} args - Arguments to create many ItemPedidos.
     * @example
     * // Create many ItemPedidos
     * const itemPedido = await prisma.itemPedido.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ItemPedidos and only return the `id`
     * const itemPedidoWithIdOnly = await prisma.itemPedido.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ItemPedidoCreateManyAndReturnArgs>(args?: SelectSubset<T, ItemPedidoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ItemPedidoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ItemPedido.
     * @param {ItemPedidoDeleteArgs} args - Arguments to delete one ItemPedido.
     * @example
     * // Delete one ItemPedido
     * const ItemPedido = await prisma.itemPedido.delete({
     *   where: {
     *     // ... filter to delete one ItemPedido
     *   }
     * })
     * 
     */
    delete<T extends ItemPedidoDeleteArgs>(args: SelectSubset<T, ItemPedidoDeleteArgs<ExtArgs>>): Prisma__ItemPedidoClient<$Result.GetResult<Prisma.$ItemPedidoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ItemPedido.
     * @param {ItemPedidoUpdateArgs} args - Arguments to update one ItemPedido.
     * @example
     * // Update one ItemPedido
     * const itemPedido = await prisma.itemPedido.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ItemPedidoUpdateArgs>(args: SelectSubset<T, ItemPedidoUpdateArgs<ExtArgs>>): Prisma__ItemPedidoClient<$Result.GetResult<Prisma.$ItemPedidoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ItemPedidos.
     * @param {ItemPedidoDeleteManyArgs} args - Arguments to filter ItemPedidos to delete.
     * @example
     * // Delete a few ItemPedidos
     * const { count } = await prisma.itemPedido.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ItemPedidoDeleteManyArgs>(args?: SelectSubset<T, ItemPedidoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ItemPedidos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemPedidoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ItemPedidos
     * const itemPedido = await prisma.itemPedido.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ItemPedidoUpdateManyArgs>(args: SelectSubset<T, ItemPedidoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ItemPedidos and returns the data updated in the database.
     * @param {ItemPedidoUpdateManyAndReturnArgs} args - Arguments to update many ItemPedidos.
     * @example
     * // Update many ItemPedidos
     * const itemPedido = await prisma.itemPedido.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ItemPedidos and only return the `id`
     * const itemPedidoWithIdOnly = await prisma.itemPedido.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ItemPedidoUpdateManyAndReturnArgs>(args: SelectSubset<T, ItemPedidoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ItemPedidoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ItemPedido.
     * @param {ItemPedidoUpsertArgs} args - Arguments to update or create a ItemPedido.
     * @example
     * // Update or create a ItemPedido
     * const itemPedido = await prisma.itemPedido.upsert({
     *   create: {
     *     // ... data to create a ItemPedido
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ItemPedido we want to update
     *   }
     * })
     */
    upsert<T extends ItemPedidoUpsertArgs>(args: SelectSubset<T, ItemPedidoUpsertArgs<ExtArgs>>): Prisma__ItemPedidoClient<$Result.GetResult<Prisma.$ItemPedidoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ItemPedidos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemPedidoCountArgs} args - Arguments to filter ItemPedidos to count.
     * @example
     * // Count the number of ItemPedidos
     * const count = await prisma.itemPedido.count({
     *   where: {
     *     // ... the filter for the ItemPedidos we want to count
     *   }
     * })
    **/
    count<T extends ItemPedidoCountArgs>(
      args?: Subset<T, ItemPedidoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ItemPedidoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ItemPedido.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemPedidoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ItemPedidoAggregateArgs>(args: Subset<T, ItemPedidoAggregateArgs>): Prisma.PrismaPromise<GetItemPedidoAggregateType<T>>

    /**
     * Group by ItemPedido.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemPedidoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ItemPedidoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ItemPedidoGroupByArgs['orderBy'] }
        : { orderBy?: ItemPedidoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ItemPedidoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetItemPedidoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ItemPedido model
   */
  readonly fields: ItemPedidoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ItemPedido.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ItemPedidoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    material<T extends MaterialDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MaterialDefaultArgs<ExtArgs>>): Prisma__MaterialClient<$Result.GetResult<Prisma.$MaterialPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    pedido<T extends PedidoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PedidoDefaultArgs<ExtArgs>>): Prisma__PedidoClient<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ItemPedido model
   */
  interface ItemPedidoFieldRefs {
    readonly id: FieldRef<"ItemPedido", 'Int'>
    readonly pedidoID: FieldRef<"ItemPedido", 'Int'>
    readonly materialID: FieldRef<"ItemPedido", 'Int'>
    readonly preco: FieldRef<"ItemPedido", 'Decimal'>
    readonly quantidade: FieldRef<"ItemPedido", 'Decimal'>
    readonly tara: FieldRef<"ItemPedido", 'Decimal'>
    readonly impureza: FieldRef<"ItemPedido", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * ItemPedido findUnique
   */
  export type ItemPedidoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItemPedido
     */
    select?: ItemPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ItemPedido
     */
    omit?: ItemPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemPedidoInclude<ExtArgs> | null
    /**
     * Filter, which ItemPedido to fetch.
     */
    where: ItemPedidoWhereUniqueInput
  }

  /**
   * ItemPedido findUniqueOrThrow
   */
  export type ItemPedidoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItemPedido
     */
    select?: ItemPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ItemPedido
     */
    omit?: ItemPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemPedidoInclude<ExtArgs> | null
    /**
     * Filter, which ItemPedido to fetch.
     */
    where: ItemPedidoWhereUniqueInput
  }

  /**
   * ItemPedido findFirst
   */
  export type ItemPedidoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItemPedido
     */
    select?: ItemPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ItemPedido
     */
    omit?: ItemPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemPedidoInclude<ExtArgs> | null
    /**
     * Filter, which ItemPedido to fetch.
     */
    where?: ItemPedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ItemPedidos to fetch.
     */
    orderBy?: ItemPedidoOrderByWithRelationInput | ItemPedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ItemPedidos.
     */
    cursor?: ItemPedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ItemPedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ItemPedidos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ItemPedidos.
     */
    distinct?: ItemPedidoScalarFieldEnum | ItemPedidoScalarFieldEnum[]
  }

  /**
   * ItemPedido findFirstOrThrow
   */
  export type ItemPedidoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItemPedido
     */
    select?: ItemPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ItemPedido
     */
    omit?: ItemPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemPedidoInclude<ExtArgs> | null
    /**
     * Filter, which ItemPedido to fetch.
     */
    where?: ItemPedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ItemPedidos to fetch.
     */
    orderBy?: ItemPedidoOrderByWithRelationInput | ItemPedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ItemPedidos.
     */
    cursor?: ItemPedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ItemPedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ItemPedidos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ItemPedidos.
     */
    distinct?: ItemPedidoScalarFieldEnum | ItemPedidoScalarFieldEnum[]
  }

  /**
   * ItemPedido findMany
   */
  export type ItemPedidoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItemPedido
     */
    select?: ItemPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ItemPedido
     */
    omit?: ItemPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemPedidoInclude<ExtArgs> | null
    /**
     * Filter, which ItemPedidos to fetch.
     */
    where?: ItemPedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ItemPedidos to fetch.
     */
    orderBy?: ItemPedidoOrderByWithRelationInput | ItemPedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ItemPedidos.
     */
    cursor?: ItemPedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ItemPedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ItemPedidos.
     */
    skip?: number
    distinct?: ItemPedidoScalarFieldEnum | ItemPedidoScalarFieldEnum[]
  }

  /**
   * ItemPedido create
   */
  export type ItemPedidoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItemPedido
     */
    select?: ItemPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ItemPedido
     */
    omit?: ItemPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemPedidoInclude<ExtArgs> | null
    /**
     * The data needed to create a ItemPedido.
     */
    data: XOR<ItemPedidoCreateInput, ItemPedidoUncheckedCreateInput>
  }

  /**
   * ItemPedido createMany
   */
  export type ItemPedidoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ItemPedidos.
     */
    data: ItemPedidoCreateManyInput | ItemPedidoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ItemPedido createManyAndReturn
   */
  export type ItemPedidoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItemPedido
     */
    select?: ItemPedidoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ItemPedido
     */
    omit?: ItemPedidoOmit<ExtArgs> | null
    /**
     * The data used to create many ItemPedidos.
     */
    data: ItemPedidoCreateManyInput | ItemPedidoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemPedidoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ItemPedido update
   */
  export type ItemPedidoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItemPedido
     */
    select?: ItemPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ItemPedido
     */
    omit?: ItemPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemPedidoInclude<ExtArgs> | null
    /**
     * The data needed to update a ItemPedido.
     */
    data: XOR<ItemPedidoUpdateInput, ItemPedidoUncheckedUpdateInput>
    /**
     * Choose, which ItemPedido to update.
     */
    where: ItemPedidoWhereUniqueInput
  }

  /**
   * ItemPedido updateMany
   */
  export type ItemPedidoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ItemPedidos.
     */
    data: XOR<ItemPedidoUpdateManyMutationInput, ItemPedidoUncheckedUpdateManyInput>
    /**
     * Filter which ItemPedidos to update
     */
    where?: ItemPedidoWhereInput
    /**
     * Limit how many ItemPedidos to update.
     */
    limit?: number
  }

  /**
   * ItemPedido updateManyAndReturn
   */
  export type ItemPedidoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItemPedido
     */
    select?: ItemPedidoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ItemPedido
     */
    omit?: ItemPedidoOmit<ExtArgs> | null
    /**
     * The data used to update ItemPedidos.
     */
    data: XOR<ItemPedidoUpdateManyMutationInput, ItemPedidoUncheckedUpdateManyInput>
    /**
     * Filter which ItemPedidos to update
     */
    where?: ItemPedidoWhereInput
    /**
     * Limit how many ItemPedidos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemPedidoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ItemPedido upsert
   */
  export type ItemPedidoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItemPedido
     */
    select?: ItemPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ItemPedido
     */
    omit?: ItemPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemPedidoInclude<ExtArgs> | null
    /**
     * The filter to search for the ItemPedido to update in case it exists.
     */
    where: ItemPedidoWhereUniqueInput
    /**
     * In case the ItemPedido found by the `where` argument doesn't exist, create a new ItemPedido with this data.
     */
    create: XOR<ItemPedidoCreateInput, ItemPedidoUncheckedCreateInput>
    /**
     * In case the ItemPedido was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ItemPedidoUpdateInput, ItemPedidoUncheckedUpdateInput>
  }

  /**
   * ItemPedido delete
   */
  export type ItemPedidoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItemPedido
     */
    select?: ItemPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ItemPedido
     */
    omit?: ItemPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemPedidoInclude<ExtArgs> | null
    /**
     * Filter which ItemPedido to delete.
     */
    where: ItemPedidoWhereUniqueInput
  }

  /**
   * ItemPedido deleteMany
   */
  export type ItemPedidoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ItemPedidos to delete
     */
    where?: ItemPedidoWhereInput
    /**
     * Limit how many ItemPedidos to delete.
     */
    limit?: number
  }

  /**
   * ItemPedido without action
   */
  export type ItemPedidoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItemPedido
     */
    select?: ItemPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ItemPedido
     */
    omit?: ItemPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemPedidoInclude<ExtArgs> | null
  }


  /**
   * Model Pedido
   */

  export type AggregatePedido = {
    _count: PedidoCountAggregateOutputType | null
    _avg: PedidoAvgAggregateOutputType | null
    _sum: PedidoSumAggregateOutputType | null
    _min: PedidoMinAggregateOutputType | null
    _max: PedidoMaxAggregateOutputType | null
  }

  export type PedidoAvgAggregateOutputType = {
    id: number | null
    regID: number | null
    valor_total: Decimal | null
    userID: number | null
  }

  export type PedidoSumAggregateOutputType = {
    id: number | null
    regID: number | null
    valor_total: Decimal | null
    userID: number | null
  }

  export type PedidoMinAggregateOutputType = {
    id: number | null
    regID: number | null
    tipo: $Enums.TipoPedido | null
    valor_total: Decimal | null
    status: $Enums.TipoStatusPedido | null
    userID: number | null
    criado_em: Date | null
    atualizado: Date | null
  }

  export type PedidoMaxAggregateOutputType = {
    id: number | null
    regID: number | null
    tipo: $Enums.TipoPedido | null
    valor_total: Decimal | null
    status: $Enums.TipoStatusPedido | null
    userID: number | null
    criado_em: Date | null
    atualizado: Date | null
  }

  export type PedidoCountAggregateOutputType = {
    id: number
    regID: number
    tipo: number
    valor_total: number
    status: number
    userID: number
    criado_em: number
    atualizado: number
    _all: number
  }


  export type PedidoAvgAggregateInputType = {
    id?: true
    regID?: true
    valor_total?: true
    userID?: true
  }

  export type PedidoSumAggregateInputType = {
    id?: true
    regID?: true
    valor_total?: true
    userID?: true
  }

  export type PedidoMinAggregateInputType = {
    id?: true
    regID?: true
    tipo?: true
    valor_total?: true
    status?: true
    userID?: true
    criado_em?: true
    atualizado?: true
  }

  export type PedidoMaxAggregateInputType = {
    id?: true
    regID?: true
    tipo?: true
    valor_total?: true
    status?: true
    userID?: true
    criado_em?: true
    atualizado?: true
  }

  export type PedidoCountAggregateInputType = {
    id?: true
    regID?: true
    tipo?: true
    valor_total?: true
    status?: true
    userID?: true
    criado_em?: true
    atualizado?: true
    _all?: true
  }

  export type PedidoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pedido to aggregate.
     */
    where?: PedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pedidos to fetch.
     */
    orderBy?: PedidoOrderByWithRelationInput | PedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pedidos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Pedidos
    **/
    _count?: true | PedidoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PedidoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PedidoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PedidoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PedidoMaxAggregateInputType
  }

  export type GetPedidoAggregateType<T extends PedidoAggregateArgs> = {
        [P in keyof T & keyof AggregatePedido]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePedido[P]>
      : GetScalarType<T[P], AggregatePedido[P]>
  }




  export type PedidoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PedidoWhereInput
    orderBy?: PedidoOrderByWithAggregationInput | PedidoOrderByWithAggregationInput[]
    by: PedidoScalarFieldEnum[] | PedidoScalarFieldEnum
    having?: PedidoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PedidoCountAggregateInputType | true
    _avg?: PedidoAvgAggregateInputType
    _sum?: PedidoSumAggregateInputType
    _min?: PedidoMinAggregateInputType
    _max?: PedidoMaxAggregateInputType
  }

  export type PedidoGroupByOutputType = {
    id: number
    regID: number | null
    tipo: $Enums.TipoPedido
    valor_total: Decimal
    status: $Enums.TipoStatusPedido
    userID: number
    criado_em: Date
    atualizado: Date
    _count: PedidoCountAggregateOutputType | null
    _avg: PedidoAvgAggregateOutputType | null
    _sum: PedidoSumAggregateOutputType | null
    _min: PedidoMinAggregateOutputType | null
    _max: PedidoMaxAggregateOutputType | null
  }

  type GetPedidoGroupByPayload<T extends PedidoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PedidoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PedidoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PedidoGroupByOutputType[P]>
            : GetScalarType<T[P], PedidoGroupByOutputType[P]>
        }
      >
    >


  export type PedidoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    regID?: boolean
    tipo?: boolean
    valor_total?: boolean
    status?: boolean
    userID?: boolean
    criado_em?: boolean
    atualizado?: boolean
    items?: boolean | Pedido$itemsArgs<ExtArgs>
    pagamentos?: boolean | Pedido$pagamentosArgs<ExtArgs>
    registro?: boolean | Pedido$registroArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    _count?: boolean | PedidoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pedido"]>

  export type PedidoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    regID?: boolean
    tipo?: boolean
    valor_total?: boolean
    status?: boolean
    userID?: boolean
    criado_em?: boolean
    atualizado?: boolean
    registro?: boolean | Pedido$registroArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pedido"]>

  export type PedidoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    regID?: boolean
    tipo?: boolean
    valor_total?: boolean
    status?: boolean
    userID?: boolean
    criado_em?: boolean
    atualizado?: boolean
    registro?: boolean | Pedido$registroArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pedido"]>

  export type PedidoSelectScalar = {
    id?: boolean
    regID?: boolean
    tipo?: boolean
    valor_total?: boolean
    status?: boolean
    userID?: boolean
    criado_em?: boolean
    atualizado?: boolean
  }

  export type PedidoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "regID" | "tipo" | "valor_total" | "status" | "userID" | "criado_em" | "atualizado", ExtArgs["result"]["pedido"]>
  export type PedidoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    items?: boolean | Pedido$itemsArgs<ExtArgs>
    pagamentos?: boolean | Pedido$pagamentosArgs<ExtArgs>
    registro?: boolean | Pedido$registroArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    _count?: boolean | PedidoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PedidoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    registro?: boolean | Pedido$registroArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type PedidoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    registro?: boolean | Pedido$registroArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $PedidoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Pedido"
    objects: {
      items: Prisma.$ItemPedidoPayload<ExtArgs>[]
      pagamentos: Prisma.$PagamentoPayload<ExtArgs>[]
      registro: Prisma.$RegistroPayload<ExtArgs> | null
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      regID: number | null
      tipo: $Enums.TipoPedido
      valor_total: Prisma.Decimal
      status: $Enums.TipoStatusPedido
      userID: number
      criado_em: Date
      atualizado: Date
    }, ExtArgs["result"]["pedido"]>
    composites: {}
  }

  type PedidoGetPayload<S extends boolean | null | undefined | PedidoDefaultArgs> = $Result.GetResult<Prisma.$PedidoPayload, S>

  type PedidoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PedidoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PedidoCountAggregateInputType | true
    }

  export interface PedidoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Pedido'], meta: { name: 'Pedido' } }
    /**
     * Find zero or one Pedido that matches the filter.
     * @param {PedidoFindUniqueArgs} args - Arguments to find a Pedido
     * @example
     * // Get one Pedido
     * const pedido = await prisma.pedido.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PedidoFindUniqueArgs>(args: SelectSubset<T, PedidoFindUniqueArgs<ExtArgs>>): Prisma__PedidoClient<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Pedido that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PedidoFindUniqueOrThrowArgs} args - Arguments to find a Pedido
     * @example
     * // Get one Pedido
     * const pedido = await prisma.pedido.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PedidoFindUniqueOrThrowArgs>(args: SelectSubset<T, PedidoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PedidoClient<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pedido that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PedidoFindFirstArgs} args - Arguments to find a Pedido
     * @example
     * // Get one Pedido
     * const pedido = await prisma.pedido.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PedidoFindFirstArgs>(args?: SelectSubset<T, PedidoFindFirstArgs<ExtArgs>>): Prisma__PedidoClient<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pedido that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PedidoFindFirstOrThrowArgs} args - Arguments to find a Pedido
     * @example
     * // Get one Pedido
     * const pedido = await prisma.pedido.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PedidoFindFirstOrThrowArgs>(args?: SelectSubset<T, PedidoFindFirstOrThrowArgs<ExtArgs>>): Prisma__PedidoClient<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Pedidos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PedidoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Pedidos
     * const pedidos = await prisma.pedido.findMany()
     * 
     * // Get first 10 Pedidos
     * const pedidos = await prisma.pedido.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const pedidoWithIdOnly = await prisma.pedido.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PedidoFindManyArgs>(args?: SelectSubset<T, PedidoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Pedido.
     * @param {PedidoCreateArgs} args - Arguments to create a Pedido.
     * @example
     * // Create one Pedido
     * const Pedido = await prisma.pedido.create({
     *   data: {
     *     // ... data to create a Pedido
     *   }
     * })
     * 
     */
    create<T extends PedidoCreateArgs>(args: SelectSubset<T, PedidoCreateArgs<ExtArgs>>): Prisma__PedidoClient<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Pedidos.
     * @param {PedidoCreateManyArgs} args - Arguments to create many Pedidos.
     * @example
     * // Create many Pedidos
     * const pedido = await prisma.pedido.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PedidoCreateManyArgs>(args?: SelectSubset<T, PedidoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Pedidos and returns the data saved in the database.
     * @param {PedidoCreateManyAndReturnArgs} args - Arguments to create many Pedidos.
     * @example
     * // Create many Pedidos
     * const pedido = await prisma.pedido.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Pedidos and only return the `id`
     * const pedidoWithIdOnly = await prisma.pedido.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PedidoCreateManyAndReturnArgs>(args?: SelectSubset<T, PedidoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Pedido.
     * @param {PedidoDeleteArgs} args - Arguments to delete one Pedido.
     * @example
     * // Delete one Pedido
     * const Pedido = await prisma.pedido.delete({
     *   where: {
     *     // ... filter to delete one Pedido
     *   }
     * })
     * 
     */
    delete<T extends PedidoDeleteArgs>(args: SelectSubset<T, PedidoDeleteArgs<ExtArgs>>): Prisma__PedidoClient<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Pedido.
     * @param {PedidoUpdateArgs} args - Arguments to update one Pedido.
     * @example
     * // Update one Pedido
     * const pedido = await prisma.pedido.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PedidoUpdateArgs>(args: SelectSubset<T, PedidoUpdateArgs<ExtArgs>>): Prisma__PedidoClient<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Pedidos.
     * @param {PedidoDeleteManyArgs} args - Arguments to filter Pedidos to delete.
     * @example
     * // Delete a few Pedidos
     * const { count } = await prisma.pedido.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PedidoDeleteManyArgs>(args?: SelectSubset<T, PedidoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pedidos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PedidoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Pedidos
     * const pedido = await prisma.pedido.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PedidoUpdateManyArgs>(args: SelectSubset<T, PedidoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pedidos and returns the data updated in the database.
     * @param {PedidoUpdateManyAndReturnArgs} args - Arguments to update many Pedidos.
     * @example
     * // Update many Pedidos
     * const pedido = await prisma.pedido.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Pedidos and only return the `id`
     * const pedidoWithIdOnly = await prisma.pedido.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PedidoUpdateManyAndReturnArgs>(args: SelectSubset<T, PedidoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Pedido.
     * @param {PedidoUpsertArgs} args - Arguments to update or create a Pedido.
     * @example
     * // Update or create a Pedido
     * const pedido = await prisma.pedido.upsert({
     *   create: {
     *     // ... data to create a Pedido
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Pedido we want to update
     *   }
     * })
     */
    upsert<T extends PedidoUpsertArgs>(args: SelectSubset<T, PedidoUpsertArgs<ExtArgs>>): Prisma__PedidoClient<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Pedidos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PedidoCountArgs} args - Arguments to filter Pedidos to count.
     * @example
     * // Count the number of Pedidos
     * const count = await prisma.pedido.count({
     *   where: {
     *     // ... the filter for the Pedidos we want to count
     *   }
     * })
    **/
    count<T extends PedidoCountArgs>(
      args?: Subset<T, PedidoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PedidoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Pedido.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PedidoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PedidoAggregateArgs>(args: Subset<T, PedidoAggregateArgs>): Prisma.PrismaPromise<GetPedidoAggregateType<T>>

    /**
     * Group by Pedido.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PedidoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PedidoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PedidoGroupByArgs['orderBy'] }
        : { orderBy?: PedidoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PedidoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPedidoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Pedido model
   */
  readonly fields: PedidoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Pedido.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PedidoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    items<T extends Pedido$itemsArgs<ExtArgs> = {}>(args?: Subset<T, Pedido$itemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ItemPedidoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    pagamentos<T extends Pedido$pagamentosArgs<ExtArgs> = {}>(args?: Subset<T, Pedido$pagamentosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PagamentoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    registro<T extends Pedido$registroArgs<ExtArgs> = {}>(args?: Subset<T, Pedido$registroArgs<ExtArgs>>): Prisma__RegistroClient<$Result.GetResult<Prisma.$RegistroPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Pedido model
   */
  interface PedidoFieldRefs {
    readonly id: FieldRef<"Pedido", 'Int'>
    readonly regID: FieldRef<"Pedido", 'Int'>
    readonly tipo: FieldRef<"Pedido", 'TipoPedido'>
    readonly valor_total: FieldRef<"Pedido", 'Decimal'>
    readonly status: FieldRef<"Pedido", 'TipoStatusPedido'>
    readonly userID: FieldRef<"Pedido", 'Int'>
    readonly criado_em: FieldRef<"Pedido", 'DateTime'>
    readonly atualizado: FieldRef<"Pedido", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Pedido findUnique
   */
  export type PedidoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    /**
     * Filter, which Pedido to fetch.
     */
    where: PedidoWhereUniqueInput
  }

  /**
   * Pedido findUniqueOrThrow
   */
  export type PedidoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    /**
     * Filter, which Pedido to fetch.
     */
    where: PedidoWhereUniqueInput
  }

  /**
   * Pedido findFirst
   */
  export type PedidoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    /**
     * Filter, which Pedido to fetch.
     */
    where?: PedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pedidos to fetch.
     */
    orderBy?: PedidoOrderByWithRelationInput | PedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pedidos.
     */
    cursor?: PedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pedidos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pedidos.
     */
    distinct?: PedidoScalarFieldEnum | PedidoScalarFieldEnum[]
  }

  /**
   * Pedido findFirstOrThrow
   */
  export type PedidoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    /**
     * Filter, which Pedido to fetch.
     */
    where?: PedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pedidos to fetch.
     */
    orderBy?: PedidoOrderByWithRelationInput | PedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pedidos.
     */
    cursor?: PedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pedidos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pedidos.
     */
    distinct?: PedidoScalarFieldEnum | PedidoScalarFieldEnum[]
  }

  /**
   * Pedido findMany
   */
  export type PedidoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    /**
     * Filter, which Pedidos to fetch.
     */
    where?: PedidoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pedidos to fetch.
     */
    orderBy?: PedidoOrderByWithRelationInput | PedidoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Pedidos.
     */
    cursor?: PedidoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pedidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pedidos.
     */
    skip?: number
    distinct?: PedidoScalarFieldEnum | PedidoScalarFieldEnum[]
  }

  /**
   * Pedido create
   */
  export type PedidoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    /**
     * The data needed to create a Pedido.
     */
    data: XOR<PedidoCreateInput, PedidoUncheckedCreateInput>
  }

  /**
   * Pedido createMany
   */
  export type PedidoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Pedidos.
     */
    data: PedidoCreateManyInput | PedidoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Pedido createManyAndReturn
   */
  export type PedidoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * The data used to create many Pedidos.
     */
    data: PedidoCreateManyInput | PedidoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Pedido update
   */
  export type PedidoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    /**
     * The data needed to update a Pedido.
     */
    data: XOR<PedidoUpdateInput, PedidoUncheckedUpdateInput>
    /**
     * Choose, which Pedido to update.
     */
    where: PedidoWhereUniqueInput
  }

  /**
   * Pedido updateMany
   */
  export type PedidoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Pedidos.
     */
    data: XOR<PedidoUpdateManyMutationInput, PedidoUncheckedUpdateManyInput>
    /**
     * Filter which Pedidos to update
     */
    where?: PedidoWhereInput
    /**
     * Limit how many Pedidos to update.
     */
    limit?: number
  }

  /**
   * Pedido updateManyAndReturn
   */
  export type PedidoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * The data used to update Pedidos.
     */
    data: XOR<PedidoUpdateManyMutationInput, PedidoUncheckedUpdateManyInput>
    /**
     * Filter which Pedidos to update
     */
    where?: PedidoWhereInput
    /**
     * Limit how many Pedidos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Pedido upsert
   */
  export type PedidoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    /**
     * The filter to search for the Pedido to update in case it exists.
     */
    where: PedidoWhereUniqueInput
    /**
     * In case the Pedido found by the `where` argument doesn't exist, create a new Pedido with this data.
     */
    create: XOR<PedidoCreateInput, PedidoUncheckedCreateInput>
    /**
     * In case the Pedido was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PedidoUpdateInput, PedidoUncheckedUpdateInput>
  }

  /**
   * Pedido delete
   */
  export type PedidoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
    /**
     * Filter which Pedido to delete.
     */
    where: PedidoWhereUniqueInput
  }

  /**
   * Pedido deleteMany
   */
  export type PedidoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pedidos to delete
     */
    where?: PedidoWhereInput
    /**
     * Limit how many Pedidos to delete.
     */
    limit?: number
  }

  /**
   * Pedido.items
   */
  export type Pedido$itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItemPedido
     */
    select?: ItemPedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ItemPedido
     */
    omit?: ItemPedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemPedidoInclude<ExtArgs> | null
    where?: ItemPedidoWhereInput
    orderBy?: ItemPedidoOrderByWithRelationInput | ItemPedidoOrderByWithRelationInput[]
    cursor?: ItemPedidoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ItemPedidoScalarFieldEnum | ItemPedidoScalarFieldEnum[]
  }

  /**
   * Pedido.pagamentos
   */
  export type Pedido$pagamentosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pagamento
     */
    select?: PagamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pagamento
     */
    omit?: PagamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagamentoInclude<ExtArgs> | null
    where?: PagamentoWhereInput
    orderBy?: PagamentoOrderByWithRelationInput | PagamentoOrderByWithRelationInput[]
    cursor?: PagamentoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PagamentoScalarFieldEnum | PagamentoScalarFieldEnum[]
  }

  /**
   * Pedido.registro
   */
  export type Pedido$registroArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Registro
     */
    select?: RegistroSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Registro
     */
    omit?: RegistroOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RegistroInclude<ExtArgs> | null
    where?: RegistroWhereInput
  }

  /**
   * Pedido without action
   */
  export type PedidoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pedido
     */
    select?: PedidoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pedido
     */
    omit?: PedidoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PedidoInclude<ExtArgs> | null
  }


  /**
   * Model Pagamento
   */

  export type AggregatePagamento = {
    _count: PagamentoCountAggregateOutputType | null
    _avg: PagamentoAvgAggregateOutputType | null
    _sum: PagamentoSumAggregateOutputType | null
    _min: PagamentoMinAggregateOutputType | null
    _max: PagamentoMaxAggregateOutputType | null
  }

  export type PagamentoAvgAggregateOutputType = {
    id: number | null
    pedidoID: number | null
    valor: Decimal | null
  }

  export type PagamentoSumAggregateOutputType = {
    id: number | null
    pedidoID: number | null
    valor: Decimal | null
  }

  export type PagamentoMinAggregateOutputType = {
    id: number | null
    pedidoID: number | null
    valor: Decimal | null
    forma: $Enums.FormaPagamento | null
    data: Date | null
  }

  export type PagamentoMaxAggregateOutputType = {
    id: number | null
    pedidoID: number | null
    valor: Decimal | null
    forma: $Enums.FormaPagamento | null
    data: Date | null
  }

  export type PagamentoCountAggregateOutputType = {
    id: number
    pedidoID: number
    valor: number
    forma: number
    data: number
    _all: number
  }


  export type PagamentoAvgAggregateInputType = {
    id?: true
    pedidoID?: true
    valor?: true
  }

  export type PagamentoSumAggregateInputType = {
    id?: true
    pedidoID?: true
    valor?: true
  }

  export type PagamentoMinAggregateInputType = {
    id?: true
    pedidoID?: true
    valor?: true
    forma?: true
    data?: true
  }

  export type PagamentoMaxAggregateInputType = {
    id?: true
    pedidoID?: true
    valor?: true
    forma?: true
    data?: true
  }

  export type PagamentoCountAggregateInputType = {
    id?: true
    pedidoID?: true
    valor?: true
    forma?: true
    data?: true
    _all?: true
  }

  export type PagamentoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pagamento to aggregate.
     */
    where?: PagamentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pagamentos to fetch.
     */
    orderBy?: PagamentoOrderByWithRelationInput | PagamentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PagamentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pagamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pagamentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Pagamentos
    **/
    _count?: true | PagamentoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PagamentoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PagamentoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PagamentoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PagamentoMaxAggregateInputType
  }

  export type GetPagamentoAggregateType<T extends PagamentoAggregateArgs> = {
        [P in keyof T & keyof AggregatePagamento]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePagamento[P]>
      : GetScalarType<T[P], AggregatePagamento[P]>
  }




  export type PagamentoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PagamentoWhereInput
    orderBy?: PagamentoOrderByWithAggregationInput | PagamentoOrderByWithAggregationInput[]
    by: PagamentoScalarFieldEnum[] | PagamentoScalarFieldEnum
    having?: PagamentoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PagamentoCountAggregateInputType | true
    _avg?: PagamentoAvgAggregateInputType
    _sum?: PagamentoSumAggregateInputType
    _min?: PagamentoMinAggregateInputType
    _max?: PagamentoMaxAggregateInputType
  }

  export type PagamentoGroupByOutputType = {
    id: number
    pedidoID: number
    valor: Decimal
    forma: $Enums.FormaPagamento
    data: Date
    _count: PagamentoCountAggregateOutputType | null
    _avg: PagamentoAvgAggregateOutputType | null
    _sum: PagamentoSumAggregateOutputType | null
    _min: PagamentoMinAggregateOutputType | null
    _max: PagamentoMaxAggregateOutputType | null
  }

  type GetPagamentoGroupByPayload<T extends PagamentoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PagamentoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PagamentoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PagamentoGroupByOutputType[P]>
            : GetScalarType<T[P], PagamentoGroupByOutputType[P]>
        }
      >
    >


  export type PagamentoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    pedidoID?: boolean
    valor?: boolean
    forma?: boolean
    data?: boolean
    pedido?: boolean | PedidoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pagamento"]>

  export type PagamentoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    pedidoID?: boolean
    valor?: boolean
    forma?: boolean
    data?: boolean
    pedido?: boolean | PedidoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pagamento"]>

  export type PagamentoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    pedidoID?: boolean
    valor?: boolean
    forma?: boolean
    data?: boolean
    pedido?: boolean | PedidoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pagamento"]>

  export type PagamentoSelectScalar = {
    id?: boolean
    pedidoID?: boolean
    valor?: boolean
    forma?: boolean
    data?: boolean
  }

  export type PagamentoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "pedidoID" | "valor" | "forma" | "data", ExtArgs["result"]["pagamento"]>
  export type PagamentoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pedido?: boolean | PedidoDefaultArgs<ExtArgs>
  }
  export type PagamentoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pedido?: boolean | PedidoDefaultArgs<ExtArgs>
  }
  export type PagamentoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pedido?: boolean | PedidoDefaultArgs<ExtArgs>
  }

  export type $PagamentoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Pagamento"
    objects: {
      pedido: Prisma.$PedidoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      pedidoID: number
      valor: Prisma.Decimal
      forma: $Enums.FormaPagamento
      data: Date
    }, ExtArgs["result"]["pagamento"]>
    composites: {}
  }

  type PagamentoGetPayload<S extends boolean | null | undefined | PagamentoDefaultArgs> = $Result.GetResult<Prisma.$PagamentoPayload, S>

  type PagamentoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PagamentoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PagamentoCountAggregateInputType | true
    }

  export interface PagamentoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Pagamento'], meta: { name: 'Pagamento' } }
    /**
     * Find zero or one Pagamento that matches the filter.
     * @param {PagamentoFindUniqueArgs} args - Arguments to find a Pagamento
     * @example
     * // Get one Pagamento
     * const pagamento = await prisma.pagamento.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PagamentoFindUniqueArgs>(args: SelectSubset<T, PagamentoFindUniqueArgs<ExtArgs>>): Prisma__PagamentoClient<$Result.GetResult<Prisma.$PagamentoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Pagamento that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PagamentoFindUniqueOrThrowArgs} args - Arguments to find a Pagamento
     * @example
     * // Get one Pagamento
     * const pagamento = await prisma.pagamento.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PagamentoFindUniqueOrThrowArgs>(args: SelectSubset<T, PagamentoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PagamentoClient<$Result.GetResult<Prisma.$PagamentoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pagamento that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagamentoFindFirstArgs} args - Arguments to find a Pagamento
     * @example
     * // Get one Pagamento
     * const pagamento = await prisma.pagamento.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PagamentoFindFirstArgs>(args?: SelectSubset<T, PagamentoFindFirstArgs<ExtArgs>>): Prisma__PagamentoClient<$Result.GetResult<Prisma.$PagamentoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pagamento that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagamentoFindFirstOrThrowArgs} args - Arguments to find a Pagamento
     * @example
     * // Get one Pagamento
     * const pagamento = await prisma.pagamento.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PagamentoFindFirstOrThrowArgs>(args?: SelectSubset<T, PagamentoFindFirstOrThrowArgs<ExtArgs>>): Prisma__PagamentoClient<$Result.GetResult<Prisma.$PagamentoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Pagamentos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagamentoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Pagamentos
     * const pagamentos = await prisma.pagamento.findMany()
     * 
     * // Get first 10 Pagamentos
     * const pagamentos = await prisma.pagamento.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const pagamentoWithIdOnly = await prisma.pagamento.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PagamentoFindManyArgs>(args?: SelectSubset<T, PagamentoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PagamentoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Pagamento.
     * @param {PagamentoCreateArgs} args - Arguments to create a Pagamento.
     * @example
     * // Create one Pagamento
     * const Pagamento = await prisma.pagamento.create({
     *   data: {
     *     // ... data to create a Pagamento
     *   }
     * })
     * 
     */
    create<T extends PagamentoCreateArgs>(args: SelectSubset<T, PagamentoCreateArgs<ExtArgs>>): Prisma__PagamentoClient<$Result.GetResult<Prisma.$PagamentoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Pagamentos.
     * @param {PagamentoCreateManyArgs} args - Arguments to create many Pagamentos.
     * @example
     * // Create many Pagamentos
     * const pagamento = await prisma.pagamento.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PagamentoCreateManyArgs>(args?: SelectSubset<T, PagamentoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Pagamentos and returns the data saved in the database.
     * @param {PagamentoCreateManyAndReturnArgs} args - Arguments to create many Pagamentos.
     * @example
     * // Create many Pagamentos
     * const pagamento = await prisma.pagamento.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Pagamentos and only return the `id`
     * const pagamentoWithIdOnly = await prisma.pagamento.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PagamentoCreateManyAndReturnArgs>(args?: SelectSubset<T, PagamentoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PagamentoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Pagamento.
     * @param {PagamentoDeleteArgs} args - Arguments to delete one Pagamento.
     * @example
     * // Delete one Pagamento
     * const Pagamento = await prisma.pagamento.delete({
     *   where: {
     *     // ... filter to delete one Pagamento
     *   }
     * })
     * 
     */
    delete<T extends PagamentoDeleteArgs>(args: SelectSubset<T, PagamentoDeleteArgs<ExtArgs>>): Prisma__PagamentoClient<$Result.GetResult<Prisma.$PagamentoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Pagamento.
     * @param {PagamentoUpdateArgs} args - Arguments to update one Pagamento.
     * @example
     * // Update one Pagamento
     * const pagamento = await prisma.pagamento.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PagamentoUpdateArgs>(args: SelectSubset<T, PagamentoUpdateArgs<ExtArgs>>): Prisma__PagamentoClient<$Result.GetResult<Prisma.$PagamentoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Pagamentos.
     * @param {PagamentoDeleteManyArgs} args - Arguments to filter Pagamentos to delete.
     * @example
     * // Delete a few Pagamentos
     * const { count } = await prisma.pagamento.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PagamentoDeleteManyArgs>(args?: SelectSubset<T, PagamentoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pagamentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagamentoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Pagamentos
     * const pagamento = await prisma.pagamento.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PagamentoUpdateManyArgs>(args: SelectSubset<T, PagamentoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pagamentos and returns the data updated in the database.
     * @param {PagamentoUpdateManyAndReturnArgs} args - Arguments to update many Pagamentos.
     * @example
     * // Update many Pagamentos
     * const pagamento = await prisma.pagamento.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Pagamentos and only return the `id`
     * const pagamentoWithIdOnly = await prisma.pagamento.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PagamentoUpdateManyAndReturnArgs>(args: SelectSubset<T, PagamentoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PagamentoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Pagamento.
     * @param {PagamentoUpsertArgs} args - Arguments to update or create a Pagamento.
     * @example
     * // Update or create a Pagamento
     * const pagamento = await prisma.pagamento.upsert({
     *   create: {
     *     // ... data to create a Pagamento
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Pagamento we want to update
     *   }
     * })
     */
    upsert<T extends PagamentoUpsertArgs>(args: SelectSubset<T, PagamentoUpsertArgs<ExtArgs>>): Prisma__PagamentoClient<$Result.GetResult<Prisma.$PagamentoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Pagamentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagamentoCountArgs} args - Arguments to filter Pagamentos to count.
     * @example
     * // Count the number of Pagamentos
     * const count = await prisma.pagamento.count({
     *   where: {
     *     // ... the filter for the Pagamentos we want to count
     *   }
     * })
    **/
    count<T extends PagamentoCountArgs>(
      args?: Subset<T, PagamentoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PagamentoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Pagamento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagamentoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PagamentoAggregateArgs>(args: Subset<T, PagamentoAggregateArgs>): Prisma.PrismaPromise<GetPagamentoAggregateType<T>>

    /**
     * Group by Pagamento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PagamentoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PagamentoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PagamentoGroupByArgs['orderBy'] }
        : { orderBy?: PagamentoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PagamentoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPagamentoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Pagamento model
   */
  readonly fields: PagamentoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Pagamento.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PagamentoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    pedido<T extends PedidoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PedidoDefaultArgs<ExtArgs>>): Prisma__PedidoClient<$Result.GetResult<Prisma.$PedidoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Pagamento model
   */
  interface PagamentoFieldRefs {
    readonly id: FieldRef<"Pagamento", 'Int'>
    readonly pedidoID: FieldRef<"Pagamento", 'Int'>
    readonly valor: FieldRef<"Pagamento", 'Decimal'>
    readonly forma: FieldRef<"Pagamento", 'FormaPagamento'>
    readonly data: FieldRef<"Pagamento", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Pagamento findUnique
   */
  export type PagamentoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pagamento
     */
    select?: PagamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pagamento
     */
    omit?: PagamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagamentoInclude<ExtArgs> | null
    /**
     * Filter, which Pagamento to fetch.
     */
    where: PagamentoWhereUniqueInput
  }

  /**
   * Pagamento findUniqueOrThrow
   */
  export type PagamentoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pagamento
     */
    select?: PagamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pagamento
     */
    omit?: PagamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagamentoInclude<ExtArgs> | null
    /**
     * Filter, which Pagamento to fetch.
     */
    where: PagamentoWhereUniqueInput
  }

  /**
   * Pagamento findFirst
   */
  export type PagamentoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pagamento
     */
    select?: PagamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pagamento
     */
    omit?: PagamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagamentoInclude<ExtArgs> | null
    /**
     * Filter, which Pagamento to fetch.
     */
    where?: PagamentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pagamentos to fetch.
     */
    orderBy?: PagamentoOrderByWithRelationInput | PagamentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pagamentos.
     */
    cursor?: PagamentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pagamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pagamentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pagamentos.
     */
    distinct?: PagamentoScalarFieldEnum | PagamentoScalarFieldEnum[]
  }

  /**
   * Pagamento findFirstOrThrow
   */
  export type PagamentoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pagamento
     */
    select?: PagamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pagamento
     */
    omit?: PagamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagamentoInclude<ExtArgs> | null
    /**
     * Filter, which Pagamento to fetch.
     */
    where?: PagamentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pagamentos to fetch.
     */
    orderBy?: PagamentoOrderByWithRelationInput | PagamentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pagamentos.
     */
    cursor?: PagamentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pagamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pagamentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pagamentos.
     */
    distinct?: PagamentoScalarFieldEnum | PagamentoScalarFieldEnum[]
  }

  /**
   * Pagamento findMany
   */
  export type PagamentoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pagamento
     */
    select?: PagamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pagamento
     */
    omit?: PagamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagamentoInclude<ExtArgs> | null
    /**
     * Filter, which Pagamentos to fetch.
     */
    where?: PagamentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pagamentos to fetch.
     */
    orderBy?: PagamentoOrderByWithRelationInput | PagamentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Pagamentos.
     */
    cursor?: PagamentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pagamentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pagamentos.
     */
    skip?: number
    distinct?: PagamentoScalarFieldEnum | PagamentoScalarFieldEnum[]
  }

  /**
   * Pagamento create
   */
  export type PagamentoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pagamento
     */
    select?: PagamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pagamento
     */
    omit?: PagamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagamentoInclude<ExtArgs> | null
    /**
     * The data needed to create a Pagamento.
     */
    data: XOR<PagamentoCreateInput, PagamentoUncheckedCreateInput>
  }

  /**
   * Pagamento createMany
   */
  export type PagamentoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Pagamentos.
     */
    data: PagamentoCreateManyInput | PagamentoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Pagamento createManyAndReturn
   */
  export type PagamentoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pagamento
     */
    select?: PagamentoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Pagamento
     */
    omit?: PagamentoOmit<ExtArgs> | null
    /**
     * The data used to create many Pagamentos.
     */
    data: PagamentoCreateManyInput | PagamentoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagamentoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Pagamento update
   */
  export type PagamentoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pagamento
     */
    select?: PagamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pagamento
     */
    omit?: PagamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagamentoInclude<ExtArgs> | null
    /**
     * The data needed to update a Pagamento.
     */
    data: XOR<PagamentoUpdateInput, PagamentoUncheckedUpdateInput>
    /**
     * Choose, which Pagamento to update.
     */
    where: PagamentoWhereUniqueInput
  }

  /**
   * Pagamento updateMany
   */
  export type PagamentoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Pagamentos.
     */
    data: XOR<PagamentoUpdateManyMutationInput, PagamentoUncheckedUpdateManyInput>
    /**
     * Filter which Pagamentos to update
     */
    where?: PagamentoWhereInput
    /**
     * Limit how many Pagamentos to update.
     */
    limit?: number
  }

  /**
   * Pagamento updateManyAndReturn
   */
  export type PagamentoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pagamento
     */
    select?: PagamentoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Pagamento
     */
    omit?: PagamentoOmit<ExtArgs> | null
    /**
     * The data used to update Pagamentos.
     */
    data: XOR<PagamentoUpdateManyMutationInput, PagamentoUncheckedUpdateManyInput>
    /**
     * Filter which Pagamentos to update
     */
    where?: PagamentoWhereInput
    /**
     * Limit how many Pagamentos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagamentoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Pagamento upsert
   */
  export type PagamentoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pagamento
     */
    select?: PagamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pagamento
     */
    omit?: PagamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagamentoInclude<ExtArgs> | null
    /**
     * The filter to search for the Pagamento to update in case it exists.
     */
    where: PagamentoWhereUniqueInput
    /**
     * In case the Pagamento found by the `where` argument doesn't exist, create a new Pagamento with this data.
     */
    create: XOR<PagamentoCreateInput, PagamentoUncheckedCreateInput>
    /**
     * In case the Pagamento was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PagamentoUpdateInput, PagamentoUncheckedUpdateInput>
  }

  /**
   * Pagamento delete
   */
  export type PagamentoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pagamento
     */
    select?: PagamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pagamento
     */
    omit?: PagamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagamentoInclude<ExtArgs> | null
    /**
     * Filter which Pagamento to delete.
     */
    where: PagamentoWhereUniqueInput
  }

  /**
   * Pagamento deleteMany
   */
  export type PagamentoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pagamentos to delete
     */
    where?: PagamentoWhereInput
    /**
     * Limit how many Pagamentos to delete.
     */
    limit?: number
  }

  /**
   * Pagamento without action
   */
  export type PagamentoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pagamento
     */
    select?: PagamentoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pagamento
     */
    omit?: PagamentoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PagamentoInclude<ExtArgs> | null
  }


  /**
   * Model Conta
   */

  export type AggregateConta = {
    _count: ContaCountAggregateOutputType | null
    _avg: ContaAvgAggregateOutputType | null
    _sum: ContaSumAggregateOutputType | null
    _min: ContaMinAggregateOutputType | null
    _max: ContaMaxAggregateOutputType | null
  }

  export type ContaAvgAggregateOutputType = {
    id: number | null
    saldo: Decimal | null
  }

  export type ContaSumAggregateOutputType = {
    id: number | null
    saldo: Decimal | null
  }

  export type ContaMinAggregateOutputType = {
    id: number | null
    nome: string | null
    saldo: Decimal | null
  }

  export type ContaMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    saldo: Decimal | null
  }

  export type ContaCountAggregateOutputType = {
    id: number
    nome: number
    saldo: number
    _all: number
  }


  export type ContaAvgAggregateInputType = {
    id?: true
    saldo?: true
  }

  export type ContaSumAggregateInputType = {
    id?: true
    saldo?: true
  }

  export type ContaMinAggregateInputType = {
    id?: true
    nome?: true
    saldo?: true
  }

  export type ContaMaxAggregateInputType = {
    id?: true
    nome?: true
    saldo?: true
  }

  export type ContaCountAggregateInputType = {
    id?: true
    nome?: true
    saldo?: true
    _all?: true
  }

  export type ContaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Conta to aggregate.
     */
    where?: ContaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Contas to fetch.
     */
    orderBy?: ContaOrderByWithRelationInput | ContaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ContaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Contas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Contas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Contas
    **/
    _count?: true | ContaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ContaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ContaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ContaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ContaMaxAggregateInputType
  }

  export type GetContaAggregateType<T extends ContaAggregateArgs> = {
        [P in keyof T & keyof AggregateConta]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateConta[P]>
      : GetScalarType<T[P], AggregateConta[P]>
  }




  export type ContaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ContaWhereInput
    orderBy?: ContaOrderByWithAggregationInput | ContaOrderByWithAggregationInput[]
    by: ContaScalarFieldEnum[] | ContaScalarFieldEnum
    having?: ContaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ContaCountAggregateInputType | true
    _avg?: ContaAvgAggregateInputType
    _sum?: ContaSumAggregateInputType
    _min?: ContaMinAggregateInputType
    _max?: ContaMaxAggregateInputType
  }

  export type ContaGroupByOutputType = {
    id: number
    nome: string
    saldo: Decimal
    _count: ContaCountAggregateOutputType | null
    _avg: ContaAvgAggregateOutputType | null
    _sum: ContaSumAggregateOutputType | null
    _min: ContaMinAggregateOutputType | null
    _max: ContaMaxAggregateOutputType | null
  }

  type GetContaGroupByPayload<T extends ContaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ContaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ContaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ContaGroupByOutputType[P]>
            : GetScalarType<T[P], ContaGroupByOutputType[P]>
        }
      >
    >


  export type ContaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    saldo?: boolean
    movimentacoes?: boolean | Conta$movimentacoesArgs<ExtArgs>
    _count?: boolean | ContaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["conta"]>

  export type ContaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    saldo?: boolean
  }, ExtArgs["result"]["conta"]>

  export type ContaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    saldo?: boolean
  }, ExtArgs["result"]["conta"]>

  export type ContaSelectScalar = {
    id?: boolean
    nome?: boolean
    saldo?: boolean
  }

  export type ContaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nome" | "saldo", ExtArgs["result"]["conta"]>
  export type ContaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    movimentacoes?: boolean | Conta$movimentacoesArgs<ExtArgs>
    _count?: boolean | ContaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ContaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type ContaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $ContaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Conta"
    objects: {
      movimentacoes: Prisma.$MovimentacaoFinanceiraPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      saldo: Prisma.Decimal
    }, ExtArgs["result"]["conta"]>
    composites: {}
  }

  type ContaGetPayload<S extends boolean | null | undefined | ContaDefaultArgs> = $Result.GetResult<Prisma.$ContaPayload, S>

  type ContaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ContaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ContaCountAggregateInputType | true
    }

  export interface ContaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Conta'], meta: { name: 'Conta' } }
    /**
     * Find zero or one Conta that matches the filter.
     * @param {ContaFindUniqueArgs} args - Arguments to find a Conta
     * @example
     * // Get one Conta
     * const conta = await prisma.conta.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ContaFindUniqueArgs>(args: SelectSubset<T, ContaFindUniqueArgs<ExtArgs>>): Prisma__ContaClient<$Result.GetResult<Prisma.$ContaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Conta that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ContaFindUniqueOrThrowArgs} args - Arguments to find a Conta
     * @example
     * // Get one Conta
     * const conta = await prisma.conta.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ContaFindUniqueOrThrowArgs>(args: SelectSubset<T, ContaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ContaClient<$Result.GetResult<Prisma.$ContaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Conta that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContaFindFirstArgs} args - Arguments to find a Conta
     * @example
     * // Get one Conta
     * const conta = await prisma.conta.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ContaFindFirstArgs>(args?: SelectSubset<T, ContaFindFirstArgs<ExtArgs>>): Prisma__ContaClient<$Result.GetResult<Prisma.$ContaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Conta that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContaFindFirstOrThrowArgs} args - Arguments to find a Conta
     * @example
     * // Get one Conta
     * const conta = await prisma.conta.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ContaFindFirstOrThrowArgs>(args?: SelectSubset<T, ContaFindFirstOrThrowArgs<ExtArgs>>): Prisma__ContaClient<$Result.GetResult<Prisma.$ContaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Contas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Contas
     * const contas = await prisma.conta.findMany()
     * 
     * // Get first 10 Contas
     * const contas = await prisma.conta.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const contaWithIdOnly = await prisma.conta.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ContaFindManyArgs>(args?: SelectSubset<T, ContaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ContaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Conta.
     * @param {ContaCreateArgs} args - Arguments to create a Conta.
     * @example
     * // Create one Conta
     * const Conta = await prisma.conta.create({
     *   data: {
     *     // ... data to create a Conta
     *   }
     * })
     * 
     */
    create<T extends ContaCreateArgs>(args: SelectSubset<T, ContaCreateArgs<ExtArgs>>): Prisma__ContaClient<$Result.GetResult<Prisma.$ContaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Contas.
     * @param {ContaCreateManyArgs} args - Arguments to create many Contas.
     * @example
     * // Create many Contas
     * const conta = await prisma.conta.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ContaCreateManyArgs>(args?: SelectSubset<T, ContaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Contas and returns the data saved in the database.
     * @param {ContaCreateManyAndReturnArgs} args - Arguments to create many Contas.
     * @example
     * // Create many Contas
     * const conta = await prisma.conta.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Contas and only return the `id`
     * const contaWithIdOnly = await prisma.conta.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ContaCreateManyAndReturnArgs>(args?: SelectSubset<T, ContaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ContaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Conta.
     * @param {ContaDeleteArgs} args - Arguments to delete one Conta.
     * @example
     * // Delete one Conta
     * const Conta = await prisma.conta.delete({
     *   where: {
     *     // ... filter to delete one Conta
     *   }
     * })
     * 
     */
    delete<T extends ContaDeleteArgs>(args: SelectSubset<T, ContaDeleteArgs<ExtArgs>>): Prisma__ContaClient<$Result.GetResult<Prisma.$ContaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Conta.
     * @param {ContaUpdateArgs} args - Arguments to update one Conta.
     * @example
     * // Update one Conta
     * const conta = await prisma.conta.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ContaUpdateArgs>(args: SelectSubset<T, ContaUpdateArgs<ExtArgs>>): Prisma__ContaClient<$Result.GetResult<Prisma.$ContaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Contas.
     * @param {ContaDeleteManyArgs} args - Arguments to filter Contas to delete.
     * @example
     * // Delete a few Contas
     * const { count } = await prisma.conta.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ContaDeleteManyArgs>(args?: SelectSubset<T, ContaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Contas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Contas
     * const conta = await prisma.conta.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ContaUpdateManyArgs>(args: SelectSubset<T, ContaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Contas and returns the data updated in the database.
     * @param {ContaUpdateManyAndReturnArgs} args - Arguments to update many Contas.
     * @example
     * // Update many Contas
     * const conta = await prisma.conta.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Contas and only return the `id`
     * const contaWithIdOnly = await prisma.conta.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ContaUpdateManyAndReturnArgs>(args: SelectSubset<T, ContaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ContaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Conta.
     * @param {ContaUpsertArgs} args - Arguments to update or create a Conta.
     * @example
     * // Update or create a Conta
     * const conta = await prisma.conta.upsert({
     *   create: {
     *     // ... data to create a Conta
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Conta we want to update
     *   }
     * })
     */
    upsert<T extends ContaUpsertArgs>(args: SelectSubset<T, ContaUpsertArgs<ExtArgs>>): Prisma__ContaClient<$Result.GetResult<Prisma.$ContaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Contas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContaCountArgs} args - Arguments to filter Contas to count.
     * @example
     * // Count the number of Contas
     * const count = await prisma.conta.count({
     *   where: {
     *     // ... the filter for the Contas we want to count
     *   }
     * })
    **/
    count<T extends ContaCountArgs>(
      args?: Subset<T, ContaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ContaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Conta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ContaAggregateArgs>(args: Subset<T, ContaAggregateArgs>): Prisma.PrismaPromise<GetContaAggregateType<T>>

    /**
     * Group by Conta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ContaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ContaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ContaGroupByArgs['orderBy'] }
        : { orderBy?: ContaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ContaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetContaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Conta model
   */
  readonly fields: ContaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Conta.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ContaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    movimentacoes<T extends Conta$movimentacoesArgs<ExtArgs> = {}>(args?: Subset<T, Conta$movimentacoesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MovimentacaoFinanceiraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Conta model
   */
  interface ContaFieldRefs {
    readonly id: FieldRef<"Conta", 'Int'>
    readonly nome: FieldRef<"Conta", 'String'>
    readonly saldo: FieldRef<"Conta", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * Conta findUnique
   */
  export type ContaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Conta
     */
    select?: ContaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Conta
     */
    omit?: ContaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContaInclude<ExtArgs> | null
    /**
     * Filter, which Conta to fetch.
     */
    where: ContaWhereUniqueInput
  }

  /**
   * Conta findUniqueOrThrow
   */
  export type ContaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Conta
     */
    select?: ContaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Conta
     */
    omit?: ContaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContaInclude<ExtArgs> | null
    /**
     * Filter, which Conta to fetch.
     */
    where: ContaWhereUniqueInput
  }

  /**
   * Conta findFirst
   */
  export type ContaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Conta
     */
    select?: ContaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Conta
     */
    omit?: ContaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContaInclude<ExtArgs> | null
    /**
     * Filter, which Conta to fetch.
     */
    where?: ContaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Contas to fetch.
     */
    orderBy?: ContaOrderByWithRelationInput | ContaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Contas.
     */
    cursor?: ContaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Contas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Contas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Contas.
     */
    distinct?: ContaScalarFieldEnum | ContaScalarFieldEnum[]
  }

  /**
   * Conta findFirstOrThrow
   */
  export type ContaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Conta
     */
    select?: ContaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Conta
     */
    omit?: ContaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContaInclude<ExtArgs> | null
    /**
     * Filter, which Conta to fetch.
     */
    where?: ContaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Contas to fetch.
     */
    orderBy?: ContaOrderByWithRelationInput | ContaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Contas.
     */
    cursor?: ContaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Contas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Contas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Contas.
     */
    distinct?: ContaScalarFieldEnum | ContaScalarFieldEnum[]
  }

  /**
   * Conta findMany
   */
  export type ContaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Conta
     */
    select?: ContaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Conta
     */
    omit?: ContaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContaInclude<ExtArgs> | null
    /**
     * Filter, which Contas to fetch.
     */
    where?: ContaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Contas to fetch.
     */
    orderBy?: ContaOrderByWithRelationInput | ContaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Contas.
     */
    cursor?: ContaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Contas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Contas.
     */
    skip?: number
    distinct?: ContaScalarFieldEnum | ContaScalarFieldEnum[]
  }

  /**
   * Conta create
   */
  export type ContaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Conta
     */
    select?: ContaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Conta
     */
    omit?: ContaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContaInclude<ExtArgs> | null
    /**
     * The data needed to create a Conta.
     */
    data: XOR<ContaCreateInput, ContaUncheckedCreateInput>
  }

  /**
   * Conta createMany
   */
  export type ContaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Contas.
     */
    data: ContaCreateManyInput | ContaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Conta createManyAndReturn
   */
  export type ContaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Conta
     */
    select?: ContaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Conta
     */
    omit?: ContaOmit<ExtArgs> | null
    /**
     * The data used to create many Contas.
     */
    data: ContaCreateManyInput | ContaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Conta update
   */
  export type ContaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Conta
     */
    select?: ContaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Conta
     */
    omit?: ContaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContaInclude<ExtArgs> | null
    /**
     * The data needed to update a Conta.
     */
    data: XOR<ContaUpdateInput, ContaUncheckedUpdateInput>
    /**
     * Choose, which Conta to update.
     */
    where: ContaWhereUniqueInput
  }

  /**
   * Conta updateMany
   */
  export type ContaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Contas.
     */
    data: XOR<ContaUpdateManyMutationInput, ContaUncheckedUpdateManyInput>
    /**
     * Filter which Contas to update
     */
    where?: ContaWhereInput
    /**
     * Limit how many Contas to update.
     */
    limit?: number
  }

  /**
   * Conta updateManyAndReturn
   */
  export type ContaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Conta
     */
    select?: ContaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Conta
     */
    omit?: ContaOmit<ExtArgs> | null
    /**
     * The data used to update Contas.
     */
    data: XOR<ContaUpdateManyMutationInput, ContaUncheckedUpdateManyInput>
    /**
     * Filter which Contas to update
     */
    where?: ContaWhereInput
    /**
     * Limit how many Contas to update.
     */
    limit?: number
  }

  /**
   * Conta upsert
   */
  export type ContaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Conta
     */
    select?: ContaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Conta
     */
    omit?: ContaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContaInclude<ExtArgs> | null
    /**
     * The filter to search for the Conta to update in case it exists.
     */
    where: ContaWhereUniqueInput
    /**
     * In case the Conta found by the `where` argument doesn't exist, create a new Conta with this data.
     */
    create: XOR<ContaCreateInput, ContaUncheckedCreateInput>
    /**
     * In case the Conta was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ContaUpdateInput, ContaUncheckedUpdateInput>
  }

  /**
   * Conta delete
   */
  export type ContaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Conta
     */
    select?: ContaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Conta
     */
    omit?: ContaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContaInclude<ExtArgs> | null
    /**
     * Filter which Conta to delete.
     */
    where: ContaWhereUniqueInput
  }

  /**
   * Conta deleteMany
   */
  export type ContaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Contas to delete
     */
    where?: ContaWhereInput
    /**
     * Limit how many Contas to delete.
     */
    limit?: number
  }

  /**
   * Conta.movimentacoes
   */
  export type Conta$movimentacoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimentacaoFinanceira
     */
    select?: MovimentacaoFinanceiraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MovimentacaoFinanceira
     */
    omit?: MovimentacaoFinanceiraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimentacaoFinanceiraInclude<ExtArgs> | null
    where?: MovimentacaoFinanceiraWhereInput
    orderBy?: MovimentacaoFinanceiraOrderByWithRelationInput | MovimentacaoFinanceiraOrderByWithRelationInput[]
    cursor?: MovimentacaoFinanceiraWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MovimentacaoFinanceiraScalarFieldEnum | MovimentacaoFinanceiraScalarFieldEnum[]
  }

  /**
   * Conta without action
   */
  export type ContaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Conta
     */
    select?: ContaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Conta
     */
    omit?: ContaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ContaInclude<ExtArgs> | null
  }


  /**
   * Model MovimentacaoFinanceira
   */

  export type AggregateMovimentacaoFinanceira = {
    _count: MovimentacaoFinanceiraCountAggregateOutputType | null
    _avg: MovimentacaoFinanceiraAvgAggregateOutputType | null
    _sum: MovimentacaoFinanceiraSumAggregateOutputType | null
    _min: MovimentacaoFinanceiraMinAggregateOutputType | null
    _max: MovimentacaoFinanceiraMaxAggregateOutputType | null
  }

  export type MovimentacaoFinanceiraAvgAggregateOutputType = {
    id: number | null
    contaID: number | null
    valor: Decimal | null
    origemID: number | null
    caixaID: number | null
  }

  export type MovimentacaoFinanceiraSumAggregateOutputType = {
    id: number | null
    contaID: number | null
    valor: Decimal | null
    origemID: number | null
    caixaID: number | null
  }

  export type MovimentacaoFinanceiraMinAggregateOutputType = {
    id: number | null
    contaID: number | null
    tipoMovimentacao: $Enums.TipoMovimentacao | null
    valor: Decimal | null
    descricao: string | null
    data: Date | null
    origem: $Enums.TipoOrigem | null
    origemID: number | null
    caixaID: number | null
  }

  export type MovimentacaoFinanceiraMaxAggregateOutputType = {
    id: number | null
    contaID: number | null
    tipoMovimentacao: $Enums.TipoMovimentacao | null
    valor: Decimal | null
    descricao: string | null
    data: Date | null
    origem: $Enums.TipoOrigem | null
    origemID: number | null
    caixaID: number | null
  }

  export type MovimentacaoFinanceiraCountAggregateOutputType = {
    id: number
    contaID: number
    tipoMovimentacao: number
    valor: number
    descricao: number
    data: number
    origem: number
    origemID: number
    caixaID: number
    _all: number
  }


  export type MovimentacaoFinanceiraAvgAggregateInputType = {
    id?: true
    contaID?: true
    valor?: true
    origemID?: true
    caixaID?: true
  }

  export type MovimentacaoFinanceiraSumAggregateInputType = {
    id?: true
    contaID?: true
    valor?: true
    origemID?: true
    caixaID?: true
  }

  export type MovimentacaoFinanceiraMinAggregateInputType = {
    id?: true
    contaID?: true
    tipoMovimentacao?: true
    valor?: true
    descricao?: true
    data?: true
    origem?: true
    origemID?: true
    caixaID?: true
  }

  export type MovimentacaoFinanceiraMaxAggregateInputType = {
    id?: true
    contaID?: true
    tipoMovimentacao?: true
    valor?: true
    descricao?: true
    data?: true
    origem?: true
    origemID?: true
    caixaID?: true
  }

  export type MovimentacaoFinanceiraCountAggregateInputType = {
    id?: true
    contaID?: true
    tipoMovimentacao?: true
    valor?: true
    descricao?: true
    data?: true
    origem?: true
    origemID?: true
    caixaID?: true
    _all?: true
  }

  export type MovimentacaoFinanceiraAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MovimentacaoFinanceira to aggregate.
     */
    where?: MovimentacaoFinanceiraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MovimentacaoFinanceiras to fetch.
     */
    orderBy?: MovimentacaoFinanceiraOrderByWithRelationInput | MovimentacaoFinanceiraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MovimentacaoFinanceiraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MovimentacaoFinanceiras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MovimentacaoFinanceiras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MovimentacaoFinanceiras
    **/
    _count?: true | MovimentacaoFinanceiraCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MovimentacaoFinanceiraAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MovimentacaoFinanceiraSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MovimentacaoFinanceiraMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MovimentacaoFinanceiraMaxAggregateInputType
  }

  export type GetMovimentacaoFinanceiraAggregateType<T extends MovimentacaoFinanceiraAggregateArgs> = {
        [P in keyof T & keyof AggregateMovimentacaoFinanceira]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMovimentacaoFinanceira[P]>
      : GetScalarType<T[P], AggregateMovimentacaoFinanceira[P]>
  }




  export type MovimentacaoFinanceiraGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MovimentacaoFinanceiraWhereInput
    orderBy?: MovimentacaoFinanceiraOrderByWithAggregationInput | MovimentacaoFinanceiraOrderByWithAggregationInput[]
    by: MovimentacaoFinanceiraScalarFieldEnum[] | MovimentacaoFinanceiraScalarFieldEnum
    having?: MovimentacaoFinanceiraScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MovimentacaoFinanceiraCountAggregateInputType | true
    _avg?: MovimentacaoFinanceiraAvgAggregateInputType
    _sum?: MovimentacaoFinanceiraSumAggregateInputType
    _min?: MovimentacaoFinanceiraMinAggregateInputType
    _max?: MovimentacaoFinanceiraMaxAggregateInputType
  }

  export type MovimentacaoFinanceiraGroupByOutputType = {
    id: number
    contaID: number
    tipoMovimentacao: $Enums.TipoMovimentacao
    valor: Decimal
    descricao: string | null
    data: Date
    origem: $Enums.TipoOrigem
    origemID: number | null
    caixaID: number
    _count: MovimentacaoFinanceiraCountAggregateOutputType | null
    _avg: MovimentacaoFinanceiraAvgAggregateOutputType | null
    _sum: MovimentacaoFinanceiraSumAggregateOutputType | null
    _min: MovimentacaoFinanceiraMinAggregateOutputType | null
    _max: MovimentacaoFinanceiraMaxAggregateOutputType | null
  }

  type GetMovimentacaoFinanceiraGroupByPayload<T extends MovimentacaoFinanceiraGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MovimentacaoFinanceiraGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MovimentacaoFinanceiraGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MovimentacaoFinanceiraGroupByOutputType[P]>
            : GetScalarType<T[P], MovimentacaoFinanceiraGroupByOutputType[P]>
        }
      >
    >


  export type MovimentacaoFinanceiraSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    contaID?: boolean
    tipoMovimentacao?: boolean
    valor?: boolean
    descricao?: boolean
    data?: boolean
    origem?: boolean
    origemID?: boolean
    caixaID?: boolean
    conta?: boolean | ContaDefaultArgs<ExtArgs>
    caixa?: boolean | LivroCaixaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["movimentacaoFinanceira"]>

  export type MovimentacaoFinanceiraSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    contaID?: boolean
    tipoMovimentacao?: boolean
    valor?: boolean
    descricao?: boolean
    data?: boolean
    origem?: boolean
    origemID?: boolean
    caixaID?: boolean
    conta?: boolean | ContaDefaultArgs<ExtArgs>
    caixa?: boolean | LivroCaixaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["movimentacaoFinanceira"]>

  export type MovimentacaoFinanceiraSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    contaID?: boolean
    tipoMovimentacao?: boolean
    valor?: boolean
    descricao?: boolean
    data?: boolean
    origem?: boolean
    origemID?: boolean
    caixaID?: boolean
    conta?: boolean | ContaDefaultArgs<ExtArgs>
    caixa?: boolean | LivroCaixaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["movimentacaoFinanceira"]>

  export type MovimentacaoFinanceiraSelectScalar = {
    id?: boolean
    contaID?: boolean
    tipoMovimentacao?: boolean
    valor?: boolean
    descricao?: boolean
    data?: boolean
    origem?: boolean
    origemID?: boolean
    caixaID?: boolean
  }

  export type MovimentacaoFinanceiraOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "contaID" | "tipoMovimentacao" | "valor" | "descricao" | "data" | "origem" | "origemID" | "caixaID", ExtArgs["result"]["movimentacaoFinanceira"]>
  export type MovimentacaoFinanceiraInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    conta?: boolean | ContaDefaultArgs<ExtArgs>
    caixa?: boolean | LivroCaixaDefaultArgs<ExtArgs>
  }
  export type MovimentacaoFinanceiraIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    conta?: boolean | ContaDefaultArgs<ExtArgs>
    caixa?: boolean | LivroCaixaDefaultArgs<ExtArgs>
  }
  export type MovimentacaoFinanceiraIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    conta?: boolean | ContaDefaultArgs<ExtArgs>
    caixa?: boolean | LivroCaixaDefaultArgs<ExtArgs>
  }

  export type $MovimentacaoFinanceiraPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MovimentacaoFinanceira"
    objects: {
      conta: Prisma.$ContaPayload<ExtArgs>
      caixa: Prisma.$LivroCaixaPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      contaID: number
      tipoMovimentacao: $Enums.TipoMovimentacao
      valor: Prisma.Decimal
      descricao: string | null
      data: Date
      origem: $Enums.TipoOrigem
      origemID: number | null
      caixaID: number
    }, ExtArgs["result"]["movimentacaoFinanceira"]>
    composites: {}
  }

  type MovimentacaoFinanceiraGetPayload<S extends boolean | null | undefined | MovimentacaoFinanceiraDefaultArgs> = $Result.GetResult<Prisma.$MovimentacaoFinanceiraPayload, S>

  type MovimentacaoFinanceiraCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MovimentacaoFinanceiraFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MovimentacaoFinanceiraCountAggregateInputType | true
    }

  export interface MovimentacaoFinanceiraDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MovimentacaoFinanceira'], meta: { name: 'MovimentacaoFinanceira' } }
    /**
     * Find zero or one MovimentacaoFinanceira that matches the filter.
     * @param {MovimentacaoFinanceiraFindUniqueArgs} args - Arguments to find a MovimentacaoFinanceira
     * @example
     * // Get one MovimentacaoFinanceira
     * const movimentacaoFinanceira = await prisma.movimentacaoFinanceira.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MovimentacaoFinanceiraFindUniqueArgs>(args: SelectSubset<T, MovimentacaoFinanceiraFindUniqueArgs<ExtArgs>>): Prisma__MovimentacaoFinanceiraClient<$Result.GetResult<Prisma.$MovimentacaoFinanceiraPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one MovimentacaoFinanceira that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MovimentacaoFinanceiraFindUniqueOrThrowArgs} args - Arguments to find a MovimentacaoFinanceira
     * @example
     * // Get one MovimentacaoFinanceira
     * const movimentacaoFinanceira = await prisma.movimentacaoFinanceira.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MovimentacaoFinanceiraFindUniqueOrThrowArgs>(args: SelectSubset<T, MovimentacaoFinanceiraFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MovimentacaoFinanceiraClient<$Result.GetResult<Prisma.$MovimentacaoFinanceiraPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MovimentacaoFinanceira that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MovimentacaoFinanceiraFindFirstArgs} args - Arguments to find a MovimentacaoFinanceira
     * @example
     * // Get one MovimentacaoFinanceira
     * const movimentacaoFinanceira = await prisma.movimentacaoFinanceira.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MovimentacaoFinanceiraFindFirstArgs>(args?: SelectSubset<T, MovimentacaoFinanceiraFindFirstArgs<ExtArgs>>): Prisma__MovimentacaoFinanceiraClient<$Result.GetResult<Prisma.$MovimentacaoFinanceiraPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MovimentacaoFinanceira that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MovimentacaoFinanceiraFindFirstOrThrowArgs} args - Arguments to find a MovimentacaoFinanceira
     * @example
     * // Get one MovimentacaoFinanceira
     * const movimentacaoFinanceira = await prisma.movimentacaoFinanceira.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MovimentacaoFinanceiraFindFirstOrThrowArgs>(args?: SelectSubset<T, MovimentacaoFinanceiraFindFirstOrThrowArgs<ExtArgs>>): Prisma__MovimentacaoFinanceiraClient<$Result.GetResult<Prisma.$MovimentacaoFinanceiraPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more MovimentacaoFinanceiras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MovimentacaoFinanceiraFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MovimentacaoFinanceiras
     * const movimentacaoFinanceiras = await prisma.movimentacaoFinanceira.findMany()
     * 
     * // Get first 10 MovimentacaoFinanceiras
     * const movimentacaoFinanceiras = await prisma.movimentacaoFinanceira.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const movimentacaoFinanceiraWithIdOnly = await prisma.movimentacaoFinanceira.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MovimentacaoFinanceiraFindManyArgs>(args?: SelectSubset<T, MovimentacaoFinanceiraFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MovimentacaoFinanceiraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a MovimentacaoFinanceira.
     * @param {MovimentacaoFinanceiraCreateArgs} args - Arguments to create a MovimentacaoFinanceira.
     * @example
     * // Create one MovimentacaoFinanceira
     * const MovimentacaoFinanceira = await prisma.movimentacaoFinanceira.create({
     *   data: {
     *     // ... data to create a MovimentacaoFinanceira
     *   }
     * })
     * 
     */
    create<T extends MovimentacaoFinanceiraCreateArgs>(args: SelectSubset<T, MovimentacaoFinanceiraCreateArgs<ExtArgs>>): Prisma__MovimentacaoFinanceiraClient<$Result.GetResult<Prisma.$MovimentacaoFinanceiraPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many MovimentacaoFinanceiras.
     * @param {MovimentacaoFinanceiraCreateManyArgs} args - Arguments to create many MovimentacaoFinanceiras.
     * @example
     * // Create many MovimentacaoFinanceiras
     * const movimentacaoFinanceira = await prisma.movimentacaoFinanceira.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MovimentacaoFinanceiraCreateManyArgs>(args?: SelectSubset<T, MovimentacaoFinanceiraCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many MovimentacaoFinanceiras and returns the data saved in the database.
     * @param {MovimentacaoFinanceiraCreateManyAndReturnArgs} args - Arguments to create many MovimentacaoFinanceiras.
     * @example
     * // Create many MovimentacaoFinanceiras
     * const movimentacaoFinanceira = await prisma.movimentacaoFinanceira.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many MovimentacaoFinanceiras and only return the `id`
     * const movimentacaoFinanceiraWithIdOnly = await prisma.movimentacaoFinanceira.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MovimentacaoFinanceiraCreateManyAndReturnArgs>(args?: SelectSubset<T, MovimentacaoFinanceiraCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MovimentacaoFinanceiraPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a MovimentacaoFinanceira.
     * @param {MovimentacaoFinanceiraDeleteArgs} args - Arguments to delete one MovimentacaoFinanceira.
     * @example
     * // Delete one MovimentacaoFinanceira
     * const MovimentacaoFinanceira = await prisma.movimentacaoFinanceira.delete({
     *   where: {
     *     // ... filter to delete one MovimentacaoFinanceira
     *   }
     * })
     * 
     */
    delete<T extends MovimentacaoFinanceiraDeleteArgs>(args: SelectSubset<T, MovimentacaoFinanceiraDeleteArgs<ExtArgs>>): Prisma__MovimentacaoFinanceiraClient<$Result.GetResult<Prisma.$MovimentacaoFinanceiraPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one MovimentacaoFinanceira.
     * @param {MovimentacaoFinanceiraUpdateArgs} args - Arguments to update one MovimentacaoFinanceira.
     * @example
     * // Update one MovimentacaoFinanceira
     * const movimentacaoFinanceira = await prisma.movimentacaoFinanceira.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MovimentacaoFinanceiraUpdateArgs>(args: SelectSubset<T, MovimentacaoFinanceiraUpdateArgs<ExtArgs>>): Prisma__MovimentacaoFinanceiraClient<$Result.GetResult<Prisma.$MovimentacaoFinanceiraPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more MovimentacaoFinanceiras.
     * @param {MovimentacaoFinanceiraDeleteManyArgs} args - Arguments to filter MovimentacaoFinanceiras to delete.
     * @example
     * // Delete a few MovimentacaoFinanceiras
     * const { count } = await prisma.movimentacaoFinanceira.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MovimentacaoFinanceiraDeleteManyArgs>(args?: SelectSubset<T, MovimentacaoFinanceiraDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MovimentacaoFinanceiras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MovimentacaoFinanceiraUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MovimentacaoFinanceiras
     * const movimentacaoFinanceira = await prisma.movimentacaoFinanceira.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MovimentacaoFinanceiraUpdateManyArgs>(args: SelectSubset<T, MovimentacaoFinanceiraUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MovimentacaoFinanceiras and returns the data updated in the database.
     * @param {MovimentacaoFinanceiraUpdateManyAndReturnArgs} args - Arguments to update many MovimentacaoFinanceiras.
     * @example
     * // Update many MovimentacaoFinanceiras
     * const movimentacaoFinanceira = await prisma.movimentacaoFinanceira.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more MovimentacaoFinanceiras and only return the `id`
     * const movimentacaoFinanceiraWithIdOnly = await prisma.movimentacaoFinanceira.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MovimentacaoFinanceiraUpdateManyAndReturnArgs>(args: SelectSubset<T, MovimentacaoFinanceiraUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MovimentacaoFinanceiraPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one MovimentacaoFinanceira.
     * @param {MovimentacaoFinanceiraUpsertArgs} args - Arguments to update or create a MovimentacaoFinanceira.
     * @example
     * // Update or create a MovimentacaoFinanceira
     * const movimentacaoFinanceira = await prisma.movimentacaoFinanceira.upsert({
     *   create: {
     *     // ... data to create a MovimentacaoFinanceira
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MovimentacaoFinanceira we want to update
     *   }
     * })
     */
    upsert<T extends MovimentacaoFinanceiraUpsertArgs>(args: SelectSubset<T, MovimentacaoFinanceiraUpsertArgs<ExtArgs>>): Prisma__MovimentacaoFinanceiraClient<$Result.GetResult<Prisma.$MovimentacaoFinanceiraPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of MovimentacaoFinanceiras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MovimentacaoFinanceiraCountArgs} args - Arguments to filter MovimentacaoFinanceiras to count.
     * @example
     * // Count the number of MovimentacaoFinanceiras
     * const count = await prisma.movimentacaoFinanceira.count({
     *   where: {
     *     // ... the filter for the MovimentacaoFinanceiras we want to count
     *   }
     * })
    **/
    count<T extends MovimentacaoFinanceiraCountArgs>(
      args?: Subset<T, MovimentacaoFinanceiraCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MovimentacaoFinanceiraCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MovimentacaoFinanceira.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MovimentacaoFinanceiraAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MovimentacaoFinanceiraAggregateArgs>(args: Subset<T, MovimentacaoFinanceiraAggregateArgs>): Prisma.PrismaPromise<GetMovimentacaoFinanceiraAggregateType<T>>

    /**
     * Group by MovimentacaoFinanceira.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MovimentacaoFinanceiraGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MovimentacaoFinanceiraGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MovimentacaoFinanceiraGroupByArgs['orderBy'] }
        : { orderBy?: MovimentacaoFinanceiraGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MovimentacaoFinanceiraGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMovimentacaoFinanceiraGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MovimentacaoFinanceira model
   */
  readonly fields: MovimentacaoFinanceiraFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MovimentacaoFinanceira.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MovimentacaoFinanceiraClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    conta<T extends ContaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ContaDefaultArgs<ExtArgs>>): Prisma__ContaClient<$Result.GetResult<Prisma.$ContaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    caixa<T extends LivroCaixaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, LivroCaixaDefaultArgs<ExtArgs>>): Prisma__LivroCaixaClient<$Result.GetResult<Prisma.$LivroCaixaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MovimentacaoFinanceira model
   */
  interface MovimentacaoFinanceiraFieldRefs {
    readonly id: FieldRef<"MovimentacaoFinanceira", 'Int'>
    readonly contaID: FieldRef<"MovimentacaoFinanceira", 'Int'>
    readonly tipoMovimentacao: FieldRef<"MovimentacaoFinanceira", 'TipoMovimentacao'>
    readonly valor: FieldRef<"MovimentacaoFinanceira", 'Decimal'>
    readonly descricao: FieldRef<"MovimentacaoFinanceira", 'String'>
    readonly data: FieldRef<"MovimentacaoFinanceira", 'DateTime'>
    readonly origem: FieldRef<"MovimentacaoFinanceira", 'TipoOrigem'>
    readonly origemID: FieldRef<"MovimentacaoFinanceira", 'Int'>
    readonly caixaID: FieldRef<"MovimentacaoFinanceira", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * MovimentacaoFinanceira findUnique
   */
  export type MovimentacaoFinanceiraFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimentacaoFinanceira
     */
    select?: MovimentacaoFinanceiraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MovimentacaoFinanceira
     */
    omit?: MovimentacaoFinanceiraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimentacaoFinanceiraInclude<ExtArgs> | null
    /**
     * Filter, which MovimentacaoFinanceira to fetch.
     */
    where: MovimentacaoFinanceiraWhereUniqueInput
  }

  /**
   * MovimentacaoFinanceira findUniqueOrThrow
   */
  export type MovimentacaoFinanceiraFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimentacaoFinanceira
     */
    select?: MovimentacaoFinanceiraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MovimentacaoFinanceira
     */
    omit?: MovimentacaoFinanceiraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimentacaoFinanceiraInclude<ExtArgs> | null
    /**
     * Filter, which MovimentacaoFinanceira to fetch.
     */
    where: MovimentacaoFinanceiraWhereUniqueInput
  }

  /**
   * MovimentacaoFinanceira findFirst
   */
  export type MovimentacaoFinanceiraFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimentacaoFinanceira
     */
    select?: MovimentacaoFinanceiraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MovimentacaoFinanceira
     */
    omit?: MovimentacaoFinanceiraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimentacaoFinanceiraInclude<ExtArgs> | null
    /**
     * Filter, which MovimentacaoFinanceira to fetch.
     */
    where?: MovimentacaoFinanceiraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MovimentacaoFinanceiras to fetch.
     */
    orderBy?: MovimentacaoFinanceiraOrderByWithRelationInput | MovimentacaoFinanceiraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MovimentacaoFinanceiras.
     */
    cursor?: MovimentacaoFinanceiraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MovimentacaoFinanceiras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MovimentacaoFinanceiras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MovimentacaoFinanceiras.
     */
    distinct?: MovimentacaoFinanceiraScalarFieldEnum | MovimentacaoFinanceiraScalarFieldEnum[]
  }

  /**
   * MovimentacaoFinanceira findFirstOrThrow
   */
  export type MovimentacaoFinanceiraFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimentacaoFinanceira
     */
    select?: MovimentacaoFinanceiraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MovimentacaoFinanceira
     */
    omit?: MovimentacaoFinanceiraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimentacaoFinanceiraInclude<ExtArgs> | null
    /**
     * Filter, which MovimentacaoFinanceira to fetch.
     */
    where?: MovimentacaoFinanceiraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MovimentacaoFinanceiras to fetch.
     */
    orderBy?: MovimentacaoFinanceiraOrderByWithRelationInput | MovimentacaoFinanceiraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MovimentacaoFinanceiras.
     */
    cursor?: MovimentacaoFinanceiraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MovimentacaoFinanceiras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MovimentacaoFinanceiras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MovimentacaoFinanceiras.
     */
    distinct?: MovimentacaoFinanceiraScalarFieldEnum | MovimentacaoFinanceiraScalarFieldEnum[]
  }

  /**
   * MovimentacaoFinanceira findMany
   */
  export type MovimentacaoFinanceiraFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimentacaoFinanceira
     */
    select?: MovimentacaoFinanceiraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MovimentacaoFinanceira
     */
    omit?: MovimentacaoFinanceiraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimentacaoFinanceiraInclude<ExtArgs> | null
    /**
     * Filter, which MovimentacaoFinanceiras to fetch.
     */
    where?: MovimentacaoFinanceiraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MovimentacaoFinanceiras to fetch.
     */
    orderBy?: MovimentacaoFinanceiraOrderByWithRelationInput | MovimentacaoFinanceiraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MovimentacaoFinanceiras.
     */
    cursor?: MovimentacaoFinanceiraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MovimentacaoFinanceiras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MovimentacaoFinanceiras.
     */
    skip?: number
    distinct?: MovimentacaoFinanceiraScalarFieldEnum | MovimentacaoFinanceiraScalarFieldEnum[]
  }

  /**
   * MovimentacaoFinanceira create
   */
  export type MovimentacaoFinanceiraCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimentacaoFinanceira
     */
    select?: MovimentacaoFinanceiraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MovimentacaoFinanceira
     */
    omit?: MovimentacaoFinanceiraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimentacaoFinanceiraInclude<ExtArgs> | null
    /**
     * The data needed to create a MovimentacaoFinanceira.
     */
    data: XOR<MovimentacaoFinanceiraCreateInput, MovimentacaoFinanceiraUncheckedCreateInput>
  }

  /**
   * MovimentacaoFinanceira createMany
   */
  export type MovimentacaoFinanceiraCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MovimentacaoFinanceiras.
     */
    data: MovimentacaoFinanceiraCreateManyInput | MovimentacaoFinanceiraCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MovimentacaoFinanceira createManyAndReturn
   */
  export type MovimentacaoFinanceiraCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimentacaoFinanceira
     */
    select?: MovimentacaoFinanceiraSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MovimentacaoFinanceira
     */
    omit?: MovimentacaoFinanceiraOmit<ExtArgs> | null
    /**
     * The data used to create many MovimentacaoFinanceiras.
     */
    data: MovimentacaoFinanceiraCreateManyInput | MovimentacaoFinanceiraCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimentacaoFinanceiraIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * MovimentacaoFinanceira update
   */
  export type MovimentacaoFinanceiraUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimentacaoFinanceira
     */
    select?: MovimentacaoFinanceiraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MovimentacaoFinanceira
     */
    omit?: MovimentacaoFinanceiraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimentacaoFinanceiraInclude<ExtArgs> | null
    /**
     * The data needed to update a MovimentacaoFinanceira.
     */
    data: XOR<MovimentacaoFinanceiraUpdateInput, MovimentacaoFinanceiraUncheckedUpdateInput>
    /**
     * Choose, which MovimentacaoFinanceira to update.
     */
    where: MovimentacaoFinanceiraWhereUniqueInput
  }

  /**
   * MovimentacaoFinanceira updateMany
   */
  export type MovimentacaoFinanceiraUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MovimentacaoFinanceiras.
     */
    data: XOR<MovimentacaoFinanceiraUpdateManyMutationInput, MovimentacaoFinanceiraUncheckedUpdateManyInput>
    /**
     * Filter which MovimentacaoFinanceiras to update
     */
    where?: MovimentacaoFinanceiraWhereInput
    /**
     * Limit how many MovimentacaoFinanceiras to update.
     */
    limit?: number
  }

  /**
   * MovimentacaoFinanceira updateManyAndReturn
   */
  export type MovimentacaoFinanceiraUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimentacaoFinanceira
     */
    select?: MovimentacaoFinanceiraSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MovimentacaoFinanceira
     */
    omit?: MovimentacaoFinanceiraOmit<ExtArgs> | null
    /**
     * The data used to update MovimentacaoFinanceiras.
     */
    data: XOR<MovimentacaoFinanceiraUpdateManyMutationInput, MovimentacaoFinanceiraUncheckedUpdateManyInput>
    /**
     * Filter which MovimentacaoFinanceiras to update
     */
    where?: MovimentacaoFinanceiraWhereInput
    /**
     * Limit how many MovimentacaoFinanceiras to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimentacaoFinanceiraIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * MovimentacaoFinanceira upsert
   */
  export type MovimentacaoFinanceiraUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimentacaoFinanceira
     */
    select?: MovimentacaoFinanceiraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MovimentacaoFinanceira
     */
    omit?: MovimentacaoFinanceiraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimentacaoFinanceiraInclude<ExtArgs> | null
    /**
     * The filter to search for the MovimentacaoFinanceira to update in case it exists.
     */
    where: MovimentacaoFinanceiraWhereUniqueInput
    /**
     * In case the MovimentacaoFinanceira found by the `where` argument doesn't exist, create a new MovimentacaoFinanceira with this data.
     */
    create: XOR<MovimentacaoFinanceiraCreateInput, MovimentacaoFinanceiraUncheckedCreateInput>
    /**
     * In case the MovimentacaoFinanceira was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MovimentacaoFinanceiraUpdateInput, MovimentacaoFinanceiraUncheckedUpdateInput>
  }

  /**
   * MovimentacaoFinanceira delete
   */
  export type MovimentacaoFinanceiraDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimentacaoFinanceira
     */
    select?: MovimentacaoFinanceiraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MovimentacaoFinanceira
     */
    omit?: MovimentacaoFinanceiraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimentacaoFinanceiraInclude<ExtArgs> | null
    /**
     * Filter which MovimentacaoFinanceira to delete.
     */
    where: MovimentacaoFinanceiraWhereUniqueInput
  }

  /**
   * MovimentacaoFinanceira deleteMany
   */
  export type MovimentacaoFinanceiraDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MovimentacaoFinanceiras to delete
     */
    where?: MovimentacaoFinanceiraWhereInput
    /**
     * Limit how many MovimentacaoFinanceiras to delete.
     */
    limit?: number
  }

  /**
   * MovimentacaoFinanceira without action
   */
  export type MovimentacaoFinanceiraDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimentacaoFinanceira
     */
    select?: MovimentacaoFinanceiraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MovimentacaoFinanceira
     */
    omit?: MovimentacaoFinanceiraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimentacaoFinanceiraInclude<ExtArgs> | null
  }


  /**
   * Model MovimentacaoEstoque
   */

  export type AggregateMovimentacaoEstoque = {
    _count: MovimentacaoEstoqueCountAggregateOutputType | null
    _avg: MovimentacaoEstoqueAvgAggregateOutputType | null
    _sum: MovimentacaoEstoqueSumAggregateOutputType | null
    _min: MovimentacaoEstoqueMinAggregateOutputType | null
    _max: MovimentacaoEstoqueMaxAggregateOutputType | null
  }

  export type MovimentacaoEstoqueAvgAggregateOutputType = {
    id: number | null
    materialID: number | null
    quantidade: Decimal | null
    origemID: number | null
    conversaoEstoqueId: number | null
  }

  export type MovimentacaoEstoqueSumAggregateOutputType = {
    id: number | null
    materialID: number | null
    quantidade: Decimal | null
    origemID: number | null
    conversaoEstoqueId: number | null
  }

  export type MovimentacaoEstoqueMinAggregateOutputType = {
    id: number | null
    materialID: number | null
    tipo: $Enums.TipoMovimentacaoEstoque | null
    quantidade: Decimal | null
    createdAt: Date | null
    origemID: number | null
    origemTipo: $Enums.OrigemMovimentacaoEstoque | null
    conversaoEstoqueId: number | null
  }

  export type MovimentacaoEstoqueMaxAggregateOutputType = {
    id: number | null
    materialID: number | null
    tipo: $Enums.TipoMovimentacaoEstoque | null
    quantidade: Decimal | null
    createdAt: Date | null
    origemID: number | null
    origemTipo: $Enums.OrigemMovimentacaoEstoque | null
    conversaoEstoqueId: number | null
  }

  export type MovimentacaoEstoqueCountAggregateOutputType = {
    id: number
    materialID: number
    tipo: number
    quantidade: number
    createdAt: number
    origemID: number
    origemTipo: number
    conversaoEstoqueId: number
    _all: number
  }


  export type MovimentacaoEstoqueAvgAggregateInputType = {
    id?: true
    materialID?: true
    quantidade?: true
    origemID?: true
    conversaoEstoqueId?: true
  }

  export type MovimentacaoEstoqueSumAggregateInputType = {
    id?: true
    materialID?: true
    quantidade?: true
    origemID?: true
    conversaoEstoqueId?: true
  }

  export type MovimentacaoEstoqueMinAggregateInputType = {
    id?: true
    materialID?: true
    tipo?: true
    quantidade?: true
    createdAt?: true
    origemID?: true
    origemTipo?: true
    conversaoEstoqueId?: true
  }

  export type MovimentacaoEstoqueMaxAggregateInputType = {
    id?: true
    materialID?: true
    tipo?: true
    quantidade?: true
    createdAt?: true
    origemID?: true
    origemTipo?: true
    conversaoEstoqueId?: true
  }

  export type MovimentacaoEstoqueCountAggregateInputType = {
    id?: true
    materialID?: true
    tipo?: true
    quantidade?: true
    createdAt?: true
    origemID?: true
    origemTipo?: true
    conversaoEstoqueId?: true
    _all?: true
  }

  export type MovimentacaoEstoqueAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MovimentacaoEstoque to aggregate.
     */
    where?: MovimentacaoEstoqueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MovimentacaoEstoques to fetch.
     */
    orderBy?: MovimentacaoEstoqueOrderByWithRelationInput | MovimentacaoEstoqueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MovimentacaoEstoqueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MovimentacaoEstoques from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MovimentacaoEstoques.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MovimentacaoEstoques
    **/
    _count?: true | MovimentacaoEstoqueCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MovimentacaoEstoqueAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MovimentacaoEstoqueSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MovimentacaoEstoqueMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MovimentacaoEstoqueMaxAggregateInputType
  }

  export type GetMovimentacaoEstoqueAggregateType<T extends MovimentacaoEstoqueAggregateArgs> = {
        [P in keyof T & keyof AggregateMovimentacaoEstoque]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMovimentacaoEstoque[P]>
      : GetScalarType<T[P], AggregateMovimentacaoEstoque[P]>
  }




  export type MovimentacaoEstoqueGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MovimentacaoEstoqueWhereInput
    orderBy?: MovimentacaoEstoqueOrderByWithAggregationInput | MovimentacaoEstoqueOrderByWithAggregationInput[]
    by: MovimentacaoEstoqueScalarFieldEnum[] | MovimentacaoEstoqueScalarFieldEnum
    having?: MovimentacaoEstoqueScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MovimentacaoEstoqueCountAggregateInputType | true
    _avg?: MovimentacaoEstoqueAvgAggregateInputType
    _sum?: MovimentacaoEstoqueSumAggregateInputType
    _min?: MovimentacaoEstoqueMinAggregateInputType
    _max?: MovimentacaoEstoqueMaxAggregateInputType
  }

  export type MovimentacaoEstoqueGroupByOutputType = {
    id: number
    materialID: number
    tipo: $Enums.TipoMovimentacaoEstoque
    quantidade: Decimal
    createdAt: Date
    origemID: number | null
    origemTipo: $Enums.OrigemMovimentacaoEstoque
    conversaoEstoqueId: number | null
    _count: MovimentacaoEstoqueCountAggregateOutputType | null
    _avg: MovimentacaoEstoqueAvgAggregateOutputType | null
    _sum: MovimentacaoEstoqueSumAggregateOutputType | null
    _min: MovimentacaoEstoqueMinAggregateOutputType | null
    _max: MovimentacaoEstoqueMaxAggregateOutputType | null
  }

  type GetMovimentacaoEstoqueGroupByPayload<T extends MovimentacaoEstoqueGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MovimentacaoEstoqueGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MovimentacaoEstoqueGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MovimentacaoEstoqueGroupByOutputType[P]>
            : GetScalarType<T[P], MovimentacaoEstoqueGroupByOutputType[P]>
        }
      >
    >


  export type MovimentacaoEstoqueSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    materialID?: boolean
    tipo?: boolean
    quantidade?: boolean
    createdAt?: boolean
    origemID?: boolean
    origemTipo?: boolean
    conversaoEstoqueId?: boolean
    conversaoEstoque?: boolean | MovimentacaoEstoque$conversaoEstoqueArgs<ExtArgs>
    material?: boolean | MaterialDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["movimentacaoEstoque"]>

  export type MovimentacaoEstoqueSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    materialID?: boolean
    tipo?: boolean
    quantidade?: boolean
    createdAt?: boolean
    origemID?: boolean
    origemTipo?: boolean
    conversaoEstoqueId?: boolean
    conversaoEstoque?: boolean | MovimentacaoEstoque$conversaoEstoqueArgs<ExtArgs>
    material?: boolean | MaterialDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["movimentacaoEstoque"]>

  export type MovimentacaoEstoqueSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    materialID?: boolean
    tipo?: boolean
    quantidade?: boolean
    createdAt?: boolean
    origemID?: boolean
    origemTipo?: boolean
    conversaoEstoqueId?: boolean
    conversaoEstoque?: boolean | MovimentacaoEstoque$conversaoEstoqueArgs<ExtArgs>
    material?: boolean | MaterialDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["movimentacaoEstoque"]>

  export type MovimentacaoEstoqueSelectScalar = {
    id?: boolean
    materialID?: boolean
    tipo?: boolean
    quantidade?: boolean
    createdAt?: boolean
    origemID?: boolean
    origemTipo?: boolean
    conversaoEstoqueId?: boolean
  }

  export type MovimentacaoEstoqueOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "materialID" | "tipo" | "quantidade" | "createdAt" | "origemID" | "origemTipo" | "conversaoEstoqueId", ExtArgs["result"]["movimentacaoEstoque"]>
  export type MovimentacaoEstoqueInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    conversaoEstoque?: boolean | MovimentacaoEstoque$conversaoEstoqueArgs<ExtArgs>
    material?: boolean | MaterialDefaultArgs<ExtArgs>
  }
  export type MovimentacaoEstoqueIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    conversaoEstoque?: boolean | MovimentacaoEstoque$conversaoEstoqueArgs<ExtArgs>
    material?: boolean | MaterialDefaultArgs<ExtArgs>
  }
  export type MovimentacaoEstoqueIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    conversaoEstoque?: boolean | MovimentacaoEstoque$conversaoEstoqueArgs<ExtArgs>
    material?: boolean | MaterialDefaultArgs<ExtArgs>
  }

  export type $MovimentacaoEstoquePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MovimentacaoEstoque"
    objects: {
      conversaoEstoque: Prisma.$ConversaoEstoquePayload<ExtArgs> | null
      material: Prisma.$MaterialPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      materialID: number
      tipo: $Enums.TipoMovimentacaoEstoque
      quantidade: Prisma.Decimal
      createdAt: Date
      origemID: number | null
      origemTipo: $Enums.OrigemMovimentacaoEstoque
      conversaoEstoqueId: number | null
    }, ExtArgs["result"]["movimentacaoEstoque"]>
    composites: {}
  }

  type MovimentacaoEstoqueGetPayload<S extends boolean | null | undefined | MovimentacaoEstoqueDefaultArgs> = $Result.GetResult<Prisma.$MovimentacaoEstoquePayload, S>

  type MovimentacaoEstoqueCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MovimentacaoEstoqueFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MovimentacaoEstoqueCountAggregateInputType | true
    }

  export interface MovimentacaoEstoqueDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MovimentacaoEstoque'], meta: { name: 'MovimentacaoEstoque' } }
    /**
     * Find zero or one MovimentacaoEstoque that matches the filter.
     * @param {MovimentacaoEstoqueFindUniqueArgs} args - Arguments to find a MovimentacaoEstoque
     * @example
     * // Get one MovimentacaoEstoque
     * const movimentacaoEstoque = await prisma.movimentacaoEstoque.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MovimentacaoEstoqueFindUniqueArgs>(args: SelectSubset<T, MovimentacaoEstoqueFindUniqueArgs<ExtArgs>>): Prisma__MovimentacaoEstoqueClient<$Result.GetResult<Prisma.$MovimentacaoEstoquePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one MovimentacaoEstoque that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MovimentacaoEstoqueFindUniqueOrThrowArgs} args - Arguments to find a MovimentacaoEstoque
     * @example
     * // Get one MovimentacaoEstoque
     * const movimentacaoEstoque = await prisma.movimentacaoEstoque.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MovimentacaoEstoqueFindUniqueOrThrowArgs>(args: SelectSubset<T, MovimentacaoEstoqueFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MovimentacaoEstoqueClient<$Result.GetResult<Prisma.$MovimentacaoEstoquePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MovimentacaoEstoque that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MovimentacaoEstoqueFindFirstArgs} args - Arguments to find a MovimentacaoEstoque
     * @example
     * // Get one MovimentacaoEstoque
     * const movimentacaoEstoque = await prisma.movimentacaoEstoque.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MovimentacaoEstoqueFindFirstArgs>(args?: SelectSubset<T, MovimentacaoEstoqueFindFirstArgs<ExtArgs>>): Prisma__MovimentacaoEstoqueClient<$Result.GetResult<Prisma.$MovimentacaoEstoquePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MovimentacaoEstoque that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MovimentacaoEstoqueFindFirstOrThrowArgs} args - Arguments to find a MovimentacaoEstoque
     * @example
     * // Get one MovimentacaoEstoque
     * const movimentacaoEstoque = await prisma.movimentacaoEstoque.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MovimentacaoEstoqueFindFirstOrThrowArgs>(args?: SelectSubset<T, MovimentacaoEstoqueFindFirstOrThrowArgs<ExtArgs>>): Prisma__MovimentacaoEstoqueClient<$Result.GetResult<Prisma.$MovimentacaoEstoquePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more MovimentacaoEstoques that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MovimentacaoEstoqueFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MovimentacaoEstoques
     * const movimentacaoEstoques = await prisma.movimentacaoEstoque.findMany()
     * 
     * // Get first 10 MovimentacaoEstoques
     * const movimentacaoEstoques = await prisma.movimentacaoEstoque.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const movimentacaoEstoqueWithIdOnly = await prisma.movimentacaoEstoque.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MovimentacaoEstoqueFindManyArgs>(args?: SelectSubset<T, MovimentacaoEstoqueFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MovimentacaoEstoquePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a MovimentacaoEstoque.
     * @param {MovimentacaoEstoqueCreateArgs} args - Arguments to create a MovimentacaoEstoque.
     * @example
     * // Create one MovimentacaoEstoque
     * const MovimentacaoEstoque = await prisma.movimentacaoEstoque.create({
     *   data: {
     *     // ... data to create a MovimentacaoEstoque
     *   }
     * })
     * 
     */
    create<T extends MovimentacaoEstoqueCreateArgs>(args: SelectSubset<T, MovimentacaoEstoqueCreateArgs<ExtArgs>>): Prisma__MovimentacaoEstoqueClient<$Result.GetResult<Prisma.$MovimentacaoEstoquePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many MovimentacaoEstoques.
     * @param {MovimentacaoEstoqueCreateManyArgs} args - Arguments to create many MovimentacaoEstoques.
     * @example
     * // Create many MovimentacaoEstoques
     * const movimentacaoEstoque = await prisma.movimentacaoEstoque.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MovimentacaoEstoqueCreateManyArgs>(args?: SelectSubset<T, MovimentacaoEstoqueCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many MovimentacaoEstoques and returns the data saved in the database.
     * @param {MovimentacaoEstoqueCreateManyAndReturnArgs} args - Arguments to create many MovimentacaoEstoques.
     * @example
     * // Create many MovimentacaoEstoques
     * const movimentacaoEstoque = await prisma.movimentacaoEstoque.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many MovimentacaoEstoques and only return the `id`
     * const movimentacaoEstoqueWithIdOnly = await prisma.movimentacaoEstoque.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MovimentacaoEstoqueCreateManyAndReturnArgs>(args?: SelectSubset<T, MovimentacaoEstoqueCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MovimentacaoEstoquePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a MovimentacaoEstoque.
     * @param {MovimentacaoEstoqueDeleteArgs} args - Arguments to delete one MovimentacaoEstoque.
     * @example
     * // Delete one MovimentacaoEstoque
     * const MovimentacaoEstoque = await prisma.movimentacaoEstoque.delete({
     *   where: {
     *     // ... filter to delete one MovimentacaoEstoque
     *   }
     * })
     * 
     */
    delete<T extends MovimentacaoEstoqueDeleteArgs>(args: SelectSubset<T, MovimentacaoEstoqueDeleteArgs<ExtArgs>>): Prisma__MovimentacaoEstoqueClient<$Result.GetResult<Prisma.$MovimentacaoEstoquePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one MovimentacaoEstoque.
     * @param {MovimentacaoEstoqueUpdateArgs} args - Arguments to update one MovimentacaoEstoque.
     * @example
     * // Update one MovimentacaoEstoque
     * const movimentacaoEstoque = await prisma.movimentacaoEstoque.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MovimentacaoEstoqueUpdateArgs>(args: SelectSubset<T, MovimentacaoEstoqueUpdateArgs<ExtArgs>>): Prisma__MovimentacaoEstoqueClient<$Result.GetResult<Prisma.$MovimentacaoEstoquePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more MovimentacaoEstoques.
     * @param {MovimentacaoEstoqueDeleteManyArgs} args - Arguments to filter MovimentacaoEstoques to delete.
     * @example
     * // Delete a few MovimentacaoEstoques
     * const { count } = await prisma.movimentacaoEstoque.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MovimentacaoEstoqueDeleteManyArgs>(args?: SelectSubset<T, MovimentacaoEstoqueDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MovimentacaoEstoques.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MovimentacaoEstoqueUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MovimentacaoEstoques
     * const movimentacaoEstoque = await prisma.movimentacaoEstoque.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MovimentacaoEstoqueUpdateManyArgs>(args: SelectSubset<T, MovimentacaoEstoqueUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MovimentacaoEstoques and returns the data updated in the database.
     * @param {MovimentacaoEstoqueUpdateManyAndReturnArgs} args - Arguments to update many MovimentacaoEstoques.
     * @example
     * // Update many MovimentacaoEstoques
     * const movimentacaoEstoque = await prisma.movimentacaoEstoque.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more MovimentacaoEstoques and only return the `id`
     * const movimentacaoEstoqueWithIdOnly = await prisma.movimentacaoEstoque.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MovimentacaoEstoqueUpdateManyAndReturnArgs>(args: SelectSubset<T, MovimentacaoEstoqueUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MovimentacaoEstoquePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one MovimentacaoEstoque.
     * @param {MovimentacaoEstoqueUpsertArgs} args - Arguments to update or create a MovimentacaoEstoque.
     * @example
     * // Update or create a MovimentacaoEstoque
     * const movimentacaoEstoque = await prisma.movimentacaoEstoque.upsert({
     *   create: {
     *     // ... data to create a MovimentacaoEstoque
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MovimentacaoEstoque we want to update
     *   }
     * })
     */
    upsert<T extends MovimentacaoEstoqueUpsertArgs>(args: SelectSubset<T, MovimentacaoEstoqueUpsertArgs<ExtArgs>>): Prisma__MovimentacaoEstoqueClient<$Result.GetResult<Prisma.$MovimentacaoEstoquePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of MovimentacaoEstoques.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MovimentacaoEstoqueCountArgs} args - Arguments to filter MovimentacaoEstoques to count.
     * @example
     * // Count the number of MovimentacaoEstoques
     * const count = await prisma.movimentacaoEstoque.count({
     *   where: {
     *     // ... the filter for the MovimentacaoEstoques we want to count
     *   }
     * })
    **/
    count<T extends MovimentacaoEstoqueCountArgs>(
      args?: Subset<T, MovimentacaoEstoqueCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MovimentacaoEstoqueCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MovimentacaoEstoque.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MovimentacaoEstoqueAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MovimentacaoEstoqueAggregateArgs>(args: Subset<T, MovimentacaoEstoqueAggregateArgs>): Prisma.PrismaPromise<GetMovimentacaoEstoqueAggregateType<T>>

    /**
     * Group by MovimentacaoEstoque.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MovimentacaoEstoqueGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MovimentacaoEstoqueGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MovimentacaoEstoqueGroupByArgs['orderBy'] }
        : { orderBy?: MovimentacaoEstoqueGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MovimentacaoEstoqueGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMovimentacaoEstoqueGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MovimentacaoEstoque model
   */
  readonly fields: MovimentacaoEstoqueFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MovimentacaoEstoque.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MovimentacaoEstoqueClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    conversaoEstoque<T extends MovimentacaoEstoque$conversaoEstoqueArgs<ExtArgs> = {}>(args?: Subset<T, MovimentacaoEstoque$conversaoEstoqueArgs<ExtArgs>>): Prisma__ConversaoEstoqueClient<$Result.GetResult<Prisma.$ConversaoEstoquePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    material<T extends MaterialDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MaterialDefaultArgs<ExtArgs>>): Prisma__MaterialClient<$Result.GetResult<Prisma.$MaterialPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MovimentacaoEstoque model
   */
  interface MovimentacaoEstoqueFieldRefs {
    readonly id: FieldRef<"MovimentacaoEstoque", 'Int'>
    readonly materialID: FieldRef<"MovimentacaoEstoque", 'Int'>
    readonly tipo: FieldRef<"MovimentacaoEstoque", 'TipoMovimentacaoEstoque'>
    readonly quantidade: FieldRef<"MovimentacaoEstoque", 'Decimal'>
    readonly createdAt: FieldRef<"MovimentacaoEstoque", 'DateTime'>
    readonly origemID: FieldRef<"MovimentacaoEstoque", 'Int'>
    readonly origemTipo: FieldRef<"MovimentacaoEstoque", 'OrigemMovimentacaoEstoque'>
    readonly conversaoEstoqueId: FieldRef<"MovimentacaoEstoque", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * MovimentacaoEstoque findUnique
   */
  export type MovimentacaoEstoqueFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimentacaoEstoque
     */
    select?: MovimentacaoEstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MovimentacaoEstoque
     */
    omit?: MovimentacaoEstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimentacaoEstoqueInclude<ExtArgs> | null
    /**
     * Filter, which MovimentacaoEstoque to fetch.
     */
    where: MovimentacaoEstoqueWhereUniqueInput
  }

  /**
   * MovimentacaoEstoque findUniqueOrThrow
   */
  export type MovimentacaoEstoqueFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimentacaoEstoque
     */
    select?: MovimentacaoEstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MovimentacaoEstoque
     */
    omit?: MovimentacaoEstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimentacaoEstoqueInclude<ExtArgs> | null
    /**
     * Filter, which MovimentacaoEstoque to fetch.
     */
    where: MovimentacaoEstoqueWhereUniqueInput
  }

  /**
   * MovimentacaoEstoque findFirst
   */
  export type MovimentacaoEstoqueFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimentacaoEstoque
     */
    select?: MovimentacaoEstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MovimentacaoEstoque
     */
    omit?: MovimentacaoEstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimentacaoEstoqueInclude<ExtArgs> | null
    /**
     * Filter, which MovimentacaoEstoque to fetch.
     */
    where?: MovimentacaoEstoqueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MovimentacaoEstoques to fetch.
     */
    orderBy?: MovimentacaoEstoqueOrderByWithRelationInput | MovimentacaoEstoqueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MovimentacaoEstoques.
     */
    cursor?: MovimentacaoEstoqueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MovimentacaoEstoques from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MovimentacaoEstoques.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MovimentacaoEstoques.
     */
    distinct?: MovimentacaoEstoqueScalarFieldEnum | MovimentacaoEstoqueScalarFieldEnum[]
  }

  /**
   * MovimentacaoEstoque findFirstOrThrow
   */
  export type MovimentacaoEstoqueFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimentacaoEstoque
     */
    select?: MovimentacaoEstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MovimentacaoEstoque
     */
    omit?: MovimentacaoEstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimentacaoEstoqueInclude<ExtArgs> | null
    /**
     * Filter, which MovimentacaoEstoque to fetch.
     */
    where?: MovimentacaoEstoqueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MovimentacaoEstoques to fetch.
     */
    orderBy?: MovimentacaoEstoqueOrderByWithRelationInput | MovimentacaoEstoqueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MovimentacaoEstoques.
     */
    cursor?: MovimentacaoEstoqueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MovimentacaoEstoques from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MovimentacaoEstoques.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MovimentacaoEstoques.
     */
    distinct?: MovimentacaoEstoqueScalarFieldEnum | MovimentacaoEstoqueScalarFieldEnum[]
  }

  /**
   * MovimentacaoEstoque findMany
   */
  export type MovimentacaoEstoqueFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimentacaoEstoque
     */
    select?: MovimentacaoEstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MovimentacaoEstoque
     */
    omit?: MovimentacaoEstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimentacaoEstoqueInclude<ExtArgs> | null
    /**
     * Filter, which MovimentacaoEstoques to fetch.
     */
    where?: MovimentacaoEstoqueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MovimentacaoEstoques to fetch.
     */
    orderBy?: MovimentacaoEstoqueOrderByWithRelationInput | MovimentacaoEstoqueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MovimentacaoEstoques.
     */
    cursor?: MovimentacaoEstoqueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MovimentacaoEstoques from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MovimentacaoEstoques.
     */
    skip?: number
    distinct?: MovimentacaoEstoqueScalarFieldEnum | MovimentacaoEstoqueScalarFieldEnum[]
  }

  /**
   * MovimentacaoEstoque create
   */
  export type MovimentacaoEstoqueCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimentacaoEstoque
     */
    select?: MovimentacaoEstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MovimentacaoEstoque
     */
    omit?: MovimentacaoEstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimentacaoEstoqueInclude<ExtArgs> | null
    /**
     * The data needed to create a MovimentacaoEstoque.
     */
    data: XOR<MovimentacaoEstoqueCreateInput, MovimentacaoEstoqueUncheckedCreateInput>
  }

  /**
   * MovimentacaoEstoque createMany
   */
  export type MovimentacaoEstoqueCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MovimentacaoEstoques.
     */
    data: MovimentacaoEstoqueCreateManyInput | MovimentacaoEstoqueCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MovimentacaoEstoque createManyAndReturn
   */
  export type MovimentacaoEstoqueCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimentacaoEstoque
     */
    select?: MovimentacaoEstoqueSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MovimentacaoEstoque
     */
    omit?: MovimentacaoEstoqueOmit<ExtArgs> | null
    /**
     * The data used to create many MovimentacaoEstoques.
     */
    data: MovimentacaoEstoqueCreateManyInput | MovimentacaoEstoqueCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimentacaoEstoqueIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * MovimentacaoEstoque update
   */
  export type MovimentacaoEstoqueUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimentacaoEstoque
     */
    select?: MovimentacaoEstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MovimentacaoEstoque
     */
    omit?: MovimentacaoEstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimentacaoEstoqueInclude<ExtArgs> | null
    /**
     * The data needed to update a MovimentacaoEstoque.
     */
    data: XOR<MovimentacaoEstoqueUpdateInput, MovimentacaoEstoqueUncheckedUpdateInput>
    /**
     * Choose, which MovimentacaoEstoque to update.
     */
    where: MovimentacaoEstoqueWhereUniqueInput
  }

  /**
   * MovimentacaoEstoque updateMany
   */
  export type MovimentacaoEstoqueUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MovimentacaoEstoques.
     */
    data: XOR<MovimentacaoEstoqueUpdateManyMutationInput, MovimentacaoEstoqueUncheckedUpdateManyInput>
    /**
     * Filter which MovimentacaoEstoques to update
     */
    where?: MovimentacaoEstoqueWhereInput
    /**
     * Limit how many MovimentacaoEstoques to update.
     */
    limit?: number
  }

  /**
   * MovimentacaoEstoque updateManyAndReturn
   */
  export type MovimentacaoEstoqueUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimentacaoEstoque
     */
    select?: MovimentacaoEstoqueSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MovimentacaoEstoque
     */
    omit?: MovimentacaoEstoqueOmit<ExtArgs> | null
    /**
     * The data used to update MovimentacaoEstoques.
     */
    data: XOR<MovimentacaoEstoqueUpdateManyMutationInput, MovimentacaoEstoqueUncheckedUpdateManyInput>
    /**
     * Filter which MovimentacaoEstoques to update
     */
    where?: MovimentacaoEstoqueWhereInput
    /**
     * Limit how many MovimentacaoEstoques to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimentacaoEstoqueIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * MovimentacaoEstoque upsert
   */
  export type MovimentacaoEstoqueUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimentacaoEstoque
     */
    select?: MovimentacaoEstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MovimentacaoEstoque
     */
    omit?: MovimentacaoEstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimentacaoEstoqueInclude<ExtArgs> | null
    /**
     * The filter to search for the MovimentacaoEstoque to update in case it exists.
     */
    where: MovimentacaoEstoqueWhereUniqueInput
    /**
     * In case the MovimentacaoEstoque found by the `where` argument doesn't exist, create a new MovimentacaoEstoque with this data.
     */
    create: XOR<MovimentacaoEstoqueCreateInput, MovimentacaoEstoqueUncheckedCreateInput>
    /**
     * In case the MovimentacaoEstoque was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MovimentacaoEstoqueUpdateInput, MovimentacaoEstoqueUncheckedUpdateInput>
  }

  /**
   * MovimentacaoEstoque delete
   */
  export type MovimentacaoEstoqueDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimentacaoEstoque
     */
    select?: MovimentacaoEstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MovimentacaoEstoque
     */
    omit?: MovimentacaoEstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimentacaoEstoqueInclude<ExtArgs> | null
    /**
     * Filter which MovimentacaoEstoque to delete.
     */
    where: MovimentacaoEstoqueWhereUniqueInput
  }

  /**
   * MovimentacaoEstoque deleteMany
   */
  export type MovimentacaoEstoqueDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MovimentacaoEstoques to delete
     */
    where?: MovimentacaoEstoqueWhereInput
    /**
     * Limit how many MovimentacaoEstoques to delete.
     */
    limit?: number
  }

  /**
   * MovimentacaoEstoque.conversaoEstoque
   */
  export type MovimentacaoEstoque$conversaoEstoqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConversaoEstoque
     */
    select?: ConversaoEstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConversaoEstoque
     */
    omit?: ConversaoEstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConversaoEstoqueInclude<ExtArgs> | null
    where?: ConversaoEstoqueWhereInput
  }

  /**
   * MovimentacaoEstoque without action
   */
  export type MovimentacaoEstoqueDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimentacaoEstoque
     */
    select?: MovimentacaoEstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MovimentacaoEstoque
     */
    omit?: MovimentacaoEstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimentacaoEstoqueInclude<ExtArgs> | null
  }


  /**
   * Model ConversaoEstoque
   */

  export type AggregateConversaoEstoque = {
    _count: ConversaoEstoqueCountAggregateOutputType | null
    _avg: ConversaoEstoqueAvgAggregateOutputType | null
    _sum: ConversaoEstoqueSumAggregateOutputType | null
    _min: ConversaoEstoqueMinAggregateOutputType | null
    _max: ConversaoEstoqueMaxAggregateOutputType | null
  }

  export type ConversaoEstoqueAvgAggregateOutputType = {
    id: number | null
    mat_origemID: number | null
    mat_destinoID: number | null
    quantidade: Decimal | null
  }

  export type ConversaoEstoqueSumAggregateOutputType = {
    id: number | null
    mat_origemID: number | null
    mat_destinoID: number | null
    quantidade: Decimal | null
  }

  export type ConversaoEstoqueMinAggregateOutputType = {
    id: number | null
    mat_origemID: number | null
    mat_destinoID: number | null
    quantidade: Decimal | null
    descricao: string | null
    createdAt: Date | null
  }

  export type ConversaoEstoqueMaxAggregateOutputType = {
    id: number | null
    mat_origemID: number | null
    mat_destinoID: number | null
    quantidade: Decimal | null
    descricao: string | null
    createdAt: Date | null
  }

  export type ConversaoEstoqueCountAggregateOutputType = {
    id: number
    mat_origemID: number
    mat_destinoID: number
    quantidade: number
    descricao: number
    createdAt: number
    _all: number
  }


  export type ConversaoEstoqueAvgAggregateInputType = {
    id?: true
    mat_origemID?: true
    mat_destinoID?: true
    quantidade?: true
  }

  export type ConversaoEstoqueSumAggregateInputType = {
    id?: true
    mat_origemID?: true
    mat_destinoID?: true
    quantidade?: true
  }

  export type ConversaoEstoqueMinAggregateInputType = {
    id?: true
    mat_origemID?: true
    mat_destinoID?: true
    quantidade?: true
    descricao?: true
    createdAt?: true
  }

  export type ConversaoEstoqueMaxAggregateInputType = {
    id?: true
    mat_origemID?: true
    mat_destinoID?: true
    quantidade?: true
    descricao?: true
    createdAt?: true
  }

  export type ConversaoEstoqueCountAggregateInputType = {
    id?: true
    mat_origemID?: true
    mat_destinoID?: true
    quantidade?: true
    descricao?: true
    createdAt?: true
    _all?: true
  }

  export type ConversaoEstoqueAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ConversaoEstoque to aggregate.
     */
    where?: ConversaoEstoqueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ConversaoEstoques to fetch.
     */
    orderBy?: ConversaoEstoqueOrderByWithRelationInput | ConversaoEstoqueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ConversaoEstoqueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ConversaoEstoques from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ConversaoEstoques.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ConversaoEstoques
    **/
    _count?: true | ConversaoEstoqueCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ConversaoEstoqueAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ConversaoEstoqueSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ConversaoEstoqueMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ConversaoEstoqueMaxAggregateInputType
  }

  export type GetConversaoEstoqueAggregateType<T extends ConversaoEstoqueAggregateArgs> = {
        [P in keyof T & keyof AggregateConversaoEstoque]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateConversaoEstoque[P]>
      : GetScalarType<T[P], AggregateConversaoEstoque[P]>
  }




  export type ConversaoEstoqueGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ConversaoEstoqueWhereInput
    orderBy?: ConversaoEstoqueOrderByWithAggregationInput | ConversaoEstoqueOrderByWithAggregationInput[]
    by: ConversaoEstoqueScalarFieldEnum[] | ConversaoEstoqueScalarFieldEnum
    having?: ConversaoEstoqueScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ConversaoEstoqueCountAggregateInputType | true
    _avg?: ConversaoEstoqueAvgAggregateInputType
    _sum?: ConversaoEstoqueSumAggregateInputType
    _min?: ConversaoEstoqueMinAggregateInputType
    _max?: ConversaoEstoqueMaxAggregateInputType
  }

  export type ConversaoEstoqueGroupByOutputType = {
    id: number
    mat_origemID: number
    mat_destinoID: number
    quantidade: Decimal
    descricao: string | null
    createdAt: Date
    _count: ConversaoEstoqueCountAggregateOutputType | null
    _avg: ConversaoEstoqueAvgAggregateOutputType | null
    _sum: ConversaoEstoqueSumAggregateOutputType | null
    _min: ConversaoEstoqueMinAggregateOutputType | null
    _max: ConversaoEstoqueMaxAggregateOutputType | null
  }

  type GetConversaoEstoqueGroupByPayload<T extends ConversaoEstoqueGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ConversaoEstoqueGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ConversaoEstoqueGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ConversaoEstoqueGroupByOutputType[P]>
            : GetScalarType<T[P], ConversaoEstoqueGroupByOutputType[P]>
        }
      >
    >


  export type ConversaoEstoqueSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    mat_origemID?: boolean
    mat_destinoID?: boolean
    quantidade?: boolean
    descricao?: boolean
    createdAt?: boolean
    movimentacoes?: boolean | ConversaoEstoque$movimentacoesArgs<ExtArgs>
    _count?: boolean | ConversaoEstoqueCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["conversaoEstoque"]>

  export type ConversaoEstoqueSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    mat_origemID?: boolean
    mat_destinoID?: boolean
    quantidade?: boolean
    descricao?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["conversaoEstoque"]>

  export type ConversaoEstoqueSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    mat_origemID?: boolean
    mat_destinoID?: boolean
    quantidade?: boolean
    descricao?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["conversaoEstoque"]>

  export type ConversaoEstoqueSelectScalar = {
    id?: boolean
    mat_origemID?: boolean
    mat_destinoID?: boolean
    quantidade?: boolean
    descricao?: boolean
    createdAt?: boolean
  }

  export type ConversaoEstoqueOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "mat_origemID" | "mat_destinoID" | "quantidade" | "descricao" | "createdAt", ExtArgs["result"]["conversaoEstoque"]>
  export type ConversaoEstoqueInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    movimentacoes?: boolean | ConversaoEstoque$movimentacoesArgs<ExtArgs>
    _count?: boolean | ConversaoEstoqueCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ConversaoEstoqueIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type ConversaoEstoqueIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $ConversaoEstoquePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ConversaoEstoque"
    objects: {
      movimentacoes: Prisma.$MovimentacaoEstoquePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      mat_origemID: number
      mat_destinoID: number
      quantidade: Prisma.Decimal
      descricao: string | null
      createdAt: Date
    }, ExtArgs["result"]["conversaoEstoque"]>
    composites: {}
  }

  type ConversaoEstoqueGetPayload<S extends boolean | null | undefined | ConversaoEstoqueDefaultArgs> = $Result.GetResult<Prisma.$ConversaoEstoquePayload, S>

  type ConversaoEstoqueCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ConversaoEstoqueFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ConversaoEstoqueCountAggregateInputType | true
    }

  export interface ConversaoEstoqueDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ConversaoEstoque'], meta: { name: 'ConversaoEstoque' } }
    /**
     * Find zero or one ConversaoEstoque that matches the filter.
     * @param {ConversaoEstoqueFindUniqueArgs} args - Arguments to find a ConversaoEstoque
     * @example
     * // Get one ConversaoEstoque
     * const conversaoEstoque = await prisma.conversaoEstoque.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ConversaoEstoqueFindUniqueArgs>(args: SelectSubset<T, ConversaoEstoqueFindUniqueArgs<ExtArgs>>): Prisma__ConversaoEstoqueClient<$Result.GetResult<Prisma.$ConversaoEstoquePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ConversaoEstoque that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ConversaoEstoqueFindUniqueOrThrowArgs} args - Arguments to find a ConversaoEstoque
     * @example
     * // Get one ConversaoEstoque
     * const conversaoEstoque = await prisma.conversaoEstoque.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ConversaoEstoqueFindUniqueOrThrowArgs>(args: SelectSubset<T, ConversaoEstoqueFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ConversaoEstoqueClient<$Result.GetResult<Prisma.$ConversaoEstoquePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ConversaoEstoque that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConversaoEstoqueFindFirstArgs} args - Arguments to find a ConversaoEstoque
     * @example
     * // Get one ConversaoEstoque
     * const conversaoEstoque = await prisma.conversaoEstoque.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ConversaoEstoqueFindFirstArgs>(args?: SelectSubset<T, ConversaoEstoqueFindFirstArgs<ExtArgs>>): Prisma__ConversaoEstoqueClient<$Result.GetResult<Prisma.$ConversaoEstoquePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ConversaoEstoque that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConversaoEstoqueFindFirstOrThrowArgs} args - Arguments to find a ConversaoEstoque
     * @example
     * // Get one ConversaoEstoque
     * const conversaoEstoque = await prisma.conversaoEstoque.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ConversaoEstoqueFindFirstOrThrowArgs>(args?: SelectSubset<T, ConversaoEstoqueFindFirstOrThrowArgs<ExtArgs>>): Prisma__ConversaoEstoqueClient<$Result.GetResult<Prisma.$ConversaoEstoquePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ConversaoEstoques that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConversaoEstoqueFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ConversaoEstoques
     * const conversaoEstoques = await prisma.conversaoEstoque.findMany()
     * 
     * // Get first 10 ConversaoEstoques
     * const conversaoEstoques = await prisma.conversaoEstoque.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const conversaoEstoqueWithIdOnly = await prisma.conversaoEstoque.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ConversaoEstoqueFindManyArgs>(args?: SelectSubset<T, ConversaoEstoqueFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConversaoEstoquePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ConversaoEstoque.
     * @param {ConversaoEstoqueCreateArgs} args - Arguments to create a ConversaoEstoque.
     * @example
     * // Create one ConversaoEstoque
     * const ConversaoEstoque = await prisma.conversaoEstoque.create({
     *   data: {
     *     // ... data to create a ConversaoEstoque
     *   }
     * })
     * 
     */
    create<T extends ConversaoEstoqueCreateArgs>(args: SelectSubset<T, ConversaoEstoqueCreateArgs<ExtArgs>>): Prisma__ConversaoEstoqueClient<$Result.GetResult<Prisma.$ConversaoEstoquePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ConversaoEstoques.
     * @param {ConversaoEstoqueCreateManyArgs} args - Arguments to create many ConversaoEstoques.
     * @example
     * // Create many ConversaoEstoques
     * const conversaoEstoque = await prisma.conversaoEstoque.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ConversaoEstoqueCreateManyArgs>(args?: SelectSubset<T, ConversaoEstoqueCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ConversaoEstoques and returns the data saved in the database.
     * @param {ConversaoEstoqueCreateManyAndReturnArgs} args - Arguments to create many ConversaoEstoques.
     * @example
     * // Create many ConversaoEstoques
     * const conversaoEstoque = await prisma.conversaoEstoque.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ConversaoEstoques and only return the `id`
     * const conversaoEstoqueWithIdOnly = await prisma.conversaoEstoque.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ConversaoEstoqueCreateManyAndReturnArgs>(args?: SelectSubset<T, ConversaoEstoqueCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConversaoEstoquePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ConversaoEstoque.
     * @param {ConversaoEstoqueDeleteArgs} args - Arguments to delete one ConversaoEstoque.
     * @example
     * // Delete one ConversaoEstoque
     * const ConversaoEstoque = await prisma.conversaoEstoque.delete({
     *   where: {
     *     // ... filter to delete one ConversaoEstoque
     *   }
     * })
     * 
     */
    delete<T extends ConversaoEstoqueDeleteArgs>(args: SelectSubset<T, ConversaoEstoqueDeleteArgs<ExtArgs>>): Prisma__ConversaoEstoqueClient<$Result.GetResult<Prisma.$ConversaoEstoquePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ConversaoEstoque.
     * @param {ConversaoEstoqueUpdateArgs} args - Arguments to update one ConversaoEstoque.
     * @example
     * // Update one ConversaoEstoque
     * const conversaoEstoque = await prisma.conversaoEstoque.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ConversaoEstoqueUpdateArgs>(args: SelectSubset<T, ConversaoEstoqueUpdateArgs<ExtArgs>>): Prisma__ConversaoEstoqueClient<$Result.GetResult<Prisma.$ConversaoEstoquePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ConversaoEstoques.
     * @param {ConversaoEstoqueDeleteManyArgs} args - Arguments to filter ConversaoEstoques to delete.
     * @example
     * // Delete a few ConversaoEstoques
     * const { count } = await prisma.conversaoEstoque.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ConversaoEstoqueDeleteManyArgs>(args?: SelectSubset<T, ConversaoEstoqueDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ConversaoEstoques.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConversaoEstoqueUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ConversaoEstoques
     * const conversaoEstoque = await prisma.conversaoEstoque.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ConversaoEstoqueUpdateManyArgs>(args: SelectSubset<T, ConversaoEstoqueUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ConversaoEstoques and returns the data updated in the database.
     * @param {ConversaoEstoqueUpdateManyAndReturnArgs} args - Arguments to update many ConversaoEstoques.
     * @example
     * // Update many ConversaoEstoques
     * const conversaoEstoque = await prisma.conversaoEstoque.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ConversaoEstoques and only return the `id`
     * const conversaoEstoqueWithIdOnly = await prisma.conversaoEstoque.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ConversaoEstoqueUpdateManyAndReturnArgs>(args: SelectSubset<T, ConversaoEstoqueUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConversaoEstoquePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ConversaoEstoque.
     * @param {ConversaoEstoqueUpsertArgs} args - Arguments to update or create a ConversaoEstoque.
     * @example
     * // Update or create a ConversaoEstoque
     * const conversaoEstoque = await prisma.conversaoEstoque.upsert({
     *   create: {
     *     // ... data to create a ConversaoEstoque
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ConversaoEstoque we want to update
     *   }
     * })
     */
    upsert<T extends ConversaoEstoqueUpsertArgs>(args: SelectSubset<T, ConversaoEstoqueUpsertArgs<ExtArgs>>): Prisma__ConversaoEstoqueClient<$Result.GetResult<Prisma.$ConversaoEstoquePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ConversaoEstoques.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConversaoEstoqueCountArgs} args - Arguments to filter ConversaoEstoques to count.
     * @example
     * // Count the number of ConversaoEstoques
     * const count = await prisma.conversaoEstoque.count({
     *   where: {
     *     // ... the filter for the ConversaoEstoques we want to count
     *   }
     * })
    **/
    count<T extends ConversaoEstoqueCountArgs>(
      args?: Subset<T, ConversaoEstoqueCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ConversaoEstoqueCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ConversaoEstoque.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConversaoEstoqueAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ConversaoEstoqueAggregateArgs>(args: Subset<T, ConversaoEstoqueAggregateArgs>): Prisma.PrismaPromise<GetConversaoEstoqueAggregateType<T>>

    /**
     * Group by ConversaoEstoque.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConversaoEstoqueGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ConversaoEstoqueGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ConversaoEstoqueGroupByArgs['orderBy'] }
        : { orderBy?: ConversaoEstoqueGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ConversaoEstoqueGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetConversaoEstoqueGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ConversaoEstoque model
   */
  readonly fields: ConversaoEstoqueFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ConversaoEstoque.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ConversaoEstoqueClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    movimentacoes<T extends ConversaoEstoque$movimentacoesArgs<ExtArgs> = {}>(args?: Subset<T, ConversaoEstoque$movimentacoesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MovimentacaoEstoquePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ConversaoEstoque model
   */
  interface ConversaoEstoqueFieldRefs {
    readonly id: FieldRef<"ConversaoEstoque", 'Int'>
    readonly mat_origemID: FieldRef<"ConversaoEstoque", 'Int'>
    readonly mat_destinoID: FieldRef<"ConversaoEstoque", 'Int'>
    readonly quantidade: FieldRef<"ConversaoEstoque", 'Decimal'>
    readonly descricao: FieldRef<"ConversaoEstoque", 'String'>
    readonly createdAt: FieldRef<"ConversaoEstoque", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ConversaoEstoque findUnique
   */
  export type ConversaoEstoqueFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConversaoEstoque
     */
    select?: ConversaoEstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConversaoEstoque
     */
    omit?: ConversaoEstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConversaoEstoqueInclude<ExtArgs> | null
    /**
     * Filter, which ConversaoEstoque to fetch.
     */
    where: ConversaoEstoqueWhereUniqueInput
  }

  /**
   * ConversaoEstoque findUniqueOrThrow
   */
  export type ConversaoEstoqueFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConversaoEstoque
     */
    select?: ConversaoEstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConversaoEstoque
     */
    omit?: ConversaoEstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConversaoEstoqueInclude<ExtArgs> | null
    /**
     * Filter, which ConversaoEstoque to fetch.
     */
    where: ConversaoEstoqueWhereUniqueInput
  }

  /**
   * ConversaoEstoque findFirst
   */
  export type ConversaoEstoqueFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConversaoEstoque
     */
    select?: ConversaoEstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConversaoEstoque
     */
    omit?: ConversaoEstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConversaoEstoqueInclude<ExtArgs> | null
    /**
     * Filter, which ConversaoEstoque to fetch.
     */
    where?: ConversaoEstoqueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ConversaoEstoques to fetch.
     */
    orderBy?: ConversaoEstoqueOrderByWithRelationInput | ConversaoEstoqueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ConversaoEstoques.
     */
    cursor?: ConversaoEstoqueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ConversaoEstoques from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ConversaoEstoques.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ConversaoEstoques.
     */
    distinct?: ConversaoEstoqueScalarFieldEnum | ConversaoEstoqueScalarFieldEnum[]
  }

  /**
   * ConversaoEstoque findFirstOrThrow
   */
  export type ConversaoEstoqueFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConversaoEstoque
     */
    select?: ConversaoEstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConversaoEstoque
     */
    omit?: ConversaoEstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConversaoEstoqueInclude<ExtArgs> | null
    /**
     * Filter, which ConversaoEstoque to fetch.
     */
    where?: ConversaoEstoqueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ConversaoEstoques to fetch.
     */
    orderBy?: ConversaoEstoqueOrderByWithRelationInput | ConversaoEstoqueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ConversaoEstoques.
     */
    cursor?: ConversaoEstoqueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ConversaoEstoques from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ConversaoEstoques.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ConversaoEstoques.
     */
    distinct?: ConversaoEstoqueScalarFieldEnum | ConversaoEstoqueScalarFieldEnum[]
  }

  /**
   * ConversaoEstoque findMany
   */
  export type ConversaoEstoqueFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConversaoEstoque
     */
    select?: ConversaoEstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConversaoEstoque
     */
    omit?: ConversaoEstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConversaoEstoqueInclude<ExtArgs> | null
    /**
     * Filter, which ConversaoEstoques to fetch.
     */
    where?: ConversaoEstoqueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ConversaoEstoques to fetch.
     */
    orderBy?: ConversaoEstoqueOrderByWithRelationInput | ConversaoEstoqueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ConversaoEstoques.
     */
    cursor?: ConversaoEstoqueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ConversaoEstoques from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ConversaoEstoques.
     */
    skip?: number
    distinct?: ConversaoEstoqueScalarFieldEnum | ConversaoEstoqueScalarFieldEnum[]
  }

  /**
   * ConversaoEstoque create
   */
  export type ConversaoEstoqueCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConversaoEstoque
     */
    select?: ConversaoEstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConversaoEstoque
     */
    omit?: ConversaoEstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConversaoEstoqueInclude<ExtArgs> | null
    /**
     * The data needed to create a ConversaoEstoque.
     */
    data: XOR<ConversaoEstoqueCreateInput, ConversaoEstoqueUncheckedCreateInput>
  }

  /**
   * ConversaoEstoque createMany
   */
  export type ConversaoEstoqueCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ConversaoEstoques.
     */
    data: ConversaoEstoqueCreateManyInput | ConversaoEstoqueCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ConversaoEstoque createManyAndReturn
   */
  export type ConversaoEstoqueCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConversaoEstoque
     */
    select?: ConversaoEstoqueSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ConversaoEstoque
     */
    omit?: ConversaoEstoqueOmit<ExtArgs> | null
    /**
     * The data used to create many ConversaoEstoques.
     */
    data: ConversaoEstoqueCreateManyInput | ConversaoEstoqueCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ConversaoEstoque update
   */
  export type ConversaoEstoqueUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConversaoEstoque
     */
    select?: ConversaoEstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConversaoEstoque
     */
    omit?: ConversaoEstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConversaoEstoqueInclude<ExtArgs> | null
    /**
     * The data needed to update a ConversaoEstoque.
     */
    data: XOR<ConversaoEstoqueUpdateInput, ConversaoEstoqueUncheckedUpdateInput>
    /**
     * Choose, which ConversaoEstoque to update.
     */
    where: ConversaoEstoqueWhereUniqueInput
  }

  /**
   * ConversaoEstoque updateMany
   */
  export type ConversaoEstoqueUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ConversaoEstoques.
     */
    data: XOR<ConversaoEstoqueUpdateManyMutationInput, ConversaoEstoqueUncheckedUpdateManyInput>
    /**
     * Filter which ConversaoEstoques to update
     */
    where?: ConversaoEstoqueWhereInput
    /**
     * Limit how many ConversaoEstoques to update.
     */
    limit?: number
  }

  /**
   * ConversaoEstoque updateManyAndReturn
   */
  export type ConversaoEstoqueUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConversaoEstoque
     */
    select?: ConversaoEstoqueSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ConversaoEstoque
     */
    omit?: ConversaoEstoqueOmit<ExtArgs> | null
    /**
     * The data used to update ConversaoEstoques.
     */
    data: XOR<ConversaoEstoqueUpdateManyMutationInput, ConversaoEstoqueUncheckedUpdateManyInput>
    /**
     * Filter which ConversaoEstoques to update
     */
    where?: ConversaoEstoqueWhereInput
    /**
     * Limit how many ConversaoEstoques to update.
     */
    limit?: number
  }

  /**
   * ConversaoEstoque upsert
   */
  export type ConversaoEstoqueUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConversaoEstoque
     */
    select?: ConversaoEstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConversaoEstoque
     */
    omit?: ConversaoEstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConversaoEstoqueInclude<ExtArgs> | null
    /**
     * The filter to search for the ConversaoEstoque to update in case it exists.
     */
    where: ConversaoEstoqueWhereUniqueInput
    /**
     * In case the ConversaoEstoque found by the `where` argument doesn't exist, create a new ConversaoEstoque with this data.
     */
    create: XOR<ConversaoEstoqueCreateInput, ConversaoEstoqueUncheckedCreateInput>
    /**
     * In case the ConversaoEstoque was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ConversaoEstoqueUpdateInput, ConversaoEstoqueUncheckedUpdateInput>
  }

  /**
   * ConversaoEstoque delete
   */
  export type ConversaoEstoqueDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConversaoEstoque
     */
    select?: ConversaoEstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConversaoEstoque
     */
    omit?: ConversaoEstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConversaoEstoqueInclude<ExtArgs> | null
    /**
     * Filter which ConversaoEstoque to delete.
     */
    where: ConversaoEstoqueWhereUniqueInput
  }

  /**
   * ConversaoEstoque deleteMany
   */
  export type ConversaoEstoqueDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ConversaoEstoques to delete
     */
    where?: ConversaoEstoqueWhereInput
    /**
     * Limit how many ConversaoEstoques to delete.
     */
    limit?: number
  }

  /**
   * ConversaoEstoque.movimentacoes
   */
  export type ConversaoEstoque$movimentacoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimentacaoEstoque
     */
    select?: MovimentacaoEstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MovimentacaoEstoque
     */
    omit?: MovimentacaoEstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimentacaoEstoqueInclude<ExtArgs> | null
    where?: MovimentacaoEstoqueWhereInput
    orderBy?: MovimentacaoEstoqueOrderByWithRelationInput | MovimentacaoEstoqueOrderByWithRelationInput[]
    cursor?: MovimentacaoEstoqueWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MovimentacaoEstoqueScalarFieldEnum | MovimentacaoEstoqueScalarFieldEnum[]
  }

  /**
   * ConversaoEstoque without action
   */
  export type ConversaoEstoqueDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ConversaoEstoque
     */
    select?: ConversaoEstoqueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ConversaoEstoque
     */
    omit?: ConversaoEstoqueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConversaoEstoqueInclude<ExtArgs> | null
  }


  /**
   * Model LivroCaixa
   */

  export type AggregateLivroCaixa = {
    _count: LivroCaixaCountAggregateOutputType | null
    _avg: LivroCaixaAvgAggregateOutputType | null
    _sum: LivroCaixaSumAggregateOutputType | null
    _min: LivroCaixaMinAggregateOutputType | null
    _max: LivroCaixaMaxAggregateOutputType | null
  }

  export type LivroCaixaAvgAggregateOutputType = {
    id: number | null
    saldoInicial: Decimal | null
    saldoFinal: Decimal | null
    usuarioID: number | null
  }

  export type LivroCaixaSumAggregateOutputType = {
    id: number | null
    saldoInicial: Decimal | null
    saldoFinal: Decimal | null
    usuarioID: number | null
  }

  export type LivroCaixaMinAggregateOutputType = {
    id: number | null
    dataAbertura: Date | null
    dataFechamento: Date | null
    saldoInicial: Decimal | null
    saldoFinal: Decimal | null
    status: $Enums.StatusCaixa | null
    usuarioID: number | null
  }

  export type LivroCaixaMaxAggregateOutputType = {
    id: number | null
    dataAbertura: Date | null
    dataFechamento: Date | null
    saldoInicial: Decimal | null
    saldoFinal: Decimal | null
    status: $Enums.StatusCaixa | null
    usuarioID: number | null
  }

  export type LivroCaixaCountAggregateOutputType = {
    id: number
    dataAbertura: number
    dataFechamento: number
    saldoInicial: number
    saldoFinal: number
    status: number
    usuarioID: number
    _all: number
  }


  export type LivroCaixaAvgAggregateInputType = {
    id?: true
    saldoInicial?: true
    saldoFinal?: true
    usuarioID?: true
  }

  export type LivroCaixaSumAggregateInputType = {
    id?: true
    saldoInicial?: true
    saldoFinal?: true
    usuarioID?: true
  }

  export type LivroCaixaMinAggregateInputType = {
    id?: true
    dataAbertura?: true
    dataFechamento?: true
    saldoInicial?: true
    saldoFinal?: true
    status?: true
    usuarioID?: true
  }

  export type LivroCaixaMaxAggregateInputType = {
    id?: true
    dataAbertura?: true
    dataFechamento?: true
    saldoInicial?: true
    saldoFinal?: true
    status?: true
    usuarioID?: true
  }

  export type LivroCaixaCountAggregateInputType = {
    id?: true
    dataAbertura?: true
    dataFechamento?: true
    saldoInicial?: true
    saldoFinal?: true
    status?: true
    usuarioID?: true
    _all?: true
  }

  export type LivroCaixaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which LivroCaixa to aggregate.
     */
    where?: LivroCaixaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LivroCaixas to fetch.
     */
    orderBy?: LivroCaixaOrderByWithRelationInput | LivroCaixaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LivroCaixaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LivroCaixas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LivroCaixas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned LivroCaixas
    **/
    _count?: true | LivroCaixaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LivroCaixaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LivroCaixaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LivroCaixaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LivroCaixaMaxAggregateInputType
  }

  export type GetLivroCaixaAggregateType<T extends LivroCaixaAggregateArgs> = {
        [P in keyof T & keyof AggregateLivroCaixa]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLivroCaixa[P]>
      : GetScalarType<T[P], AggregateLivroCaixa[P]>
  }




  export type LivroCaixaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LivroCaixaWhereInput
    orderBy?: LivroCaixaOrderByWithAggregationInput | LivroCaixaOrderByWithAggregationInput[]
    by: LivroCaixaScalarFieldEnum[] | LivroCaixaScalarFieldEnum
    having?: LivroCaixaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LivroCaixaCountAggregateInputType | true
    _avg?: LivroCaixaAvgAggregateInputType
    _sum?: LivroCaixaSumAggregateInputType
    _min?: LivroCaixaMinAggregateInputType
    _max?: LivroCaixaMaxAggregateInputType
  }

  export type LivroCaixaGroupByOutputType = {
    id: number
    dataAbertura: Date
    dataFechamento: Date | null
    saldoInicial: Decimal
    saldoFinal: Decimal | null
    status: $Enums.StatusCaixa
    usuarioID: number
    _count: LivroCaixaCountAggregateOutputType | null
    _avg: LivroCaixaAvgAggregateOutputType | null
    _sum: LivroCaixaSumAggregateOutputType | null
    _min: LivroCaixaMinAggregateOutputType | null
    _max: LivroCaixaMaxAggregateOutputType | null
  }

  type GetLivroCaixaGroupByPayload<T extends LivroCaixaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LivroCaixaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LivroCaixaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LivroCaixaGroupByOutputType[P]>
            : GetScalarType<T[P], LivroCaixaGroupByOutputType[P]>
        }
      >
    >


  export type LivroCaixaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    dataAbertura?: boolean
    dataFechamento?: boolean
    saldoInicial?: boolean
    saldoFinal?: boolean
    status?: boolean
    usuarioID?: boolean
    usuario?: boolean | UserDefaultArgs<ExtArgs>
    movimentacoes?: boolean | LivroCaixa$movimentacoesArgs<ExtArgs>
    _count?: boolean | LivroCaixaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["livroCaixa"]>

  export type LivroCaixaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    dataAbertura?: boolean
    dataFechamento?: boolean
    saldoInicial?: boolean
    saldoFinal?: boolean
    status?: boolean
    usuarioID?: boolean
    usuario?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["livroCaixa"]>

  export type LivroCaixaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    dataAbertura?: boolean
    dataFechamento?: boolean
    saldoInicial?: boolean
    saldoFinal?: boolean
    status?: boolean
    usuarioID?: boolean
    usuario?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["livroCaixa"]>

  export type LivroCaixaSelectScalar = {
    id?: boolean
    dataAbertura?: boolean
    dataFechamento?: boolean
    saldoInicial?: boolean
    saldoFinal?: boolean
    status?: boolean
    usuarioID?: boolean
  }

  export type LivroCaixaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "dataAbertura" | "dataFechamento" | "saldoInicial" | "saldoFinal" | "status" | "usuarioID", ExtArgs["result"]["livroCaixa"]>
  export type LivroCaixaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UserDefaultArgs<ExtArgs>
    movimentacoes?: boolean | LivroCaixa$movimentacoesArgs<ExtArgs>
    _count?: boolean | LivroCaixaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type LivroCaixaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type LivroCaixaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $LivroCaixaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "LivroCaixa"
    objects: {
      usuario: Prisma.$UserPayload<ExtArgs>
      movimentacoes: Prisma.$MovimentacaoFinanceiraPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      dataAbertura: Date
      dataFechamento: Date | null
      saldoInicial: Prisma.Decimal
      saldoFinal: Prisma.Decimal | null
      status: $Enums.StatusCaixa
      usuarioID: number
    }, ExtArgs["result"]["livroCaixa"]>
    composites: {}
  }

  type LivroCaixaGetPayload<S extends boolean | null | undefined | LivroCaixaDefaultArgs> = $Result.GetResult<Prisma.$LivroCaixaPayload, S>

  type LivroCaixaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<LivroCaixaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: LivroCaixaCountAggregateInputType | true
    }

  export interface LivroCaixaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['LivroCaixa'], meta: { name: 'LivroCaixa' } }
    /**
     * Find zero or one LivroCaixa that matches the filter.
     * @param {LivroCaixaFindUniqueArgs} args - Arguments to find a LivroCaixa
     * @example
     * // Get one LivroCaixa
     * const livroCaixa = await prisma.livroCaixa.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends LivroCaixaFindUniqueArgs>(args: SelectSubset<T, LivroCaixaFindUniqueArgs<ExtArgs>>): Prisma__LivroCaixaClient<$Result.GetResult<Prisma.$LivroCaixaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one LivroCaixa that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {LivroCaixaFindUniqueOrThrowArgs} args - Arguments to find a LivroCaixa
     * @example
     * // Get one LivroCaixa
     * const livroCaixa = await prisma.livroCaixa.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends LivroCaixaFindUniqueOrThrowArgs>(args: SelectSubset<T, LivroCaixaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__LivroCaixaClient<$Result.GetResult<Prisma.$LivroCaixaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first LivroCaixa that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LivroCaixaFindFirstArgs} args - Arguments to find a LivroCaixa
     * @example
     * // Get one LivroCaixa
     * const livroCaixa = await prisma.livroCaixa.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends LivroCaixaFindFirstArgs>(args?: SelectSubset<T, LivroCaixaFindFirstArgs<ExtArgs>>): Prisma__LivroCaixaClient<$Result.GetResult<Prisma.$LivroCaixaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first LivroCaixa that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LivroCaixaFindFirstOrThrowArgs} args - Arguments to find a LivroCaixa
     * @example
     * // Get one LivroCaixa
     * const livroCaixa = await prisma.livroCaixa.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends LivroCaixaFindFirstOrThrowArgs>(args?: SelectSubset<T, LivroCaixaFindFirstOrThrowArgs<ExtArgs>>): Prisma__LivroCaixaClient<$Result.GetResult<Prisma.$LivroCaixaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more LivroCaixas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LivroCaixaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all LivroCaixas
     * const livroCaixas = await prisma.livroCaixa.findMany()
     * 
     * // Get first 10 LivroCaixas
     * const livroCaixas = await prisma.livroCaixa.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const livroCaixaWithIdOnly = await prisma.livroCaixa.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends LivroCaixaFindManyArgs>(args?: SelectSubset<T, LivroCaixaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LivroCaixaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a LivroCaixa.
     * @param {LivroCaixaCreateArgs} args - Arguments to create a LivroCaixa.
     * @example
     * // Create one LivroCaixa
     * const LivroCaixa = await prisma.livroCaixa.create({
     *   data: {
     *     // ... data to create a LivroCaixa
     *   }
     * })
     * 
     */
    create<T extends LivroCaixaCreateArgs>(args: SelectSubset<T, LivroCaixaCreateArgs<ExtArgs>>): Prisma__LivroCaixaClient<$Result.GetResult<Prisma.$LivroCaixaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many LivroCaixas.
     * @param {LivroCaixaCreateManyArgs} args - Arguments to create many LivroCaixas.
     * @example
     * // Create many LivroCaixas
     * const livroCaixa = await prisma.livroCaixa.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends LivroCaixaCreateManyArgs>(args?: SelectSubset<T, LivroCaixaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many LivroCaixas and returns the data saved in the database.
     * @param {LivroCaixaCreateManyAndReturnArgs} args - Arguments to create many LivroCaixas.
     * @example
     * // Create many LivroCaixas
     * const livroCaixa = await prisma.livroCaixa.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many LivroCaixas and only return the `id`
     * const livroCaixaWithIdOnly = await prisma.livroCaixa.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends LivroCaixaCreateManyAndReturnArgs>(args?: SelectSubset<T, LivroCaixaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LivroCaixaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a LivroCaixa.
     * @param {LivroCaixaDeleteArgs} args - Arguments to delete one LivroCaixa.
     * @example
     * // Delete one LivroCaixa
     * const LivroCaixa = await prisma.livroCaixa.delete({
     *   where: {
     *     // ... filter to delete one LivroCaixa
     *   }
     * })
     * 
     */
    delete<T extends LivroCaixaDeleteArgs>(args: SelectSubset<T, LivroCaixaDeleteArgs<ExtArgs>>): Prisma__LivroCaixaClient<$Result.GetResult<Prisma.$LivroCaixaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one LivroCaixa.
     * @param {LivroCaixaUpdateArgs} args - Arguments to update one LivroCaixa.
     * @example
     * // Update one LivroCaixa
     * const livroCaixa = await prisma.livroCaixa.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends LivroCaixaUpdateArgs>(args: SelectSubset<T, LivroCaixaUpdateArgs<ExtArgs>>): Prisma__LivroCaixaClient<$Result.GetResult<Prisma.$LivroCaixaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more LivroCaixas.
     * @param {LivroCaixaDeleteManyArgs} args - Arguments to filter LivroCaixas to delete.
     * @example
     * // Delete a few LivroCaixas
     * const { count } = await prisma.livroCaixa.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends LivroCaixaDeleteManyArgs>(args?: SelectSubset<T, LivroCaixaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more LivroCaixas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LivroCaixaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many LivroCaixas
     * const livroCaixa = await prisma.livroCaixa.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends LivroCaixaUpdateManyArgs>(args: SelectSubset<T, LivroCaixaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more LivroCaixas and returns the data updated in the database.
     * @param {LivroCaixaUpdateManyAndReturnArgs} args - Arguments to update many LivroCaixas.
     * @example
     * // Update many LivroCaixas
     * const livroCaixa = await prisma.livroCaixa.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more LivroCaixas and only return the `id`
     * const livroCaixaWithIdOnly = await prisma.livroCaixa.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends LivroCaixaUpdateManyAndReturnArgs>(args: SelectSubset<T, LivroCaixaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LivroCaixaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one LivroCaixa.
     * @param {LivroCaixaUpsertArgs} args - Arguments to update or create a LivroCaixa.
     * @example
     * // Update or create a LivroCaixa
     * const livroCaixa = await prisma.livroCaixa.upsert({
     *   create: {
     *     // ... data to create a LivroCaixa
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the LivroCaixa we want to update
     *   }
     * })
     */
    upsert<T extends LivroCaixaUpsertArgs>(args: SelectSubset<T, LivroCaixaUpsertArgs<ExtArgs>>): Prisma__LivroCaixaClient<$Result.GetResult<Prisma.$LivroCaixaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of LivroCaixas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LivroCaixaCountArgs} args - Arguments to filter LivroCaixas to count.
     * @example
     * // Count the number of LivroCaixas
     * const count = await prisma.livroCaixa.count({
     *   where: {
     *     // ... the filter for the LivroCaixas we want to count
     *   }
     * })
    **/
    count<T extends LivroCaixaCountArgs>(
      args?: Subset<T, LivroCaixaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LivroCaixaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a LivroCaixa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LivroCaixaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LivroCaixaAggregateArgs>(args: Subset<T, LivroCaixaAggregateArgs>): Prisma.PrismaPromise<GetLivroCaixaAggregateType<T>>

    /**
     * Group by LivroCaixa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LivroCaixaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LivroCaixaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LivroCaixaGroupByArgs['orderBy'] }
        : { orderBy?: LivroCaixaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LivroCaixaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLivroCaixaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the LivroCaixa model
   */
  readonly fields: LivroCaixaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for LivroCaixa.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LivroCaixaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuario<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    movimentacoes<T extends LivroCaixa$movimentacoesArgs<ExtArgs> = {}>(args?: Subset<T, LivroCaixa$movimentacoesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MovimentacaoFinanceiraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the LivroCaixa model
   */
  interface LivroCaixaFieldRefs {
    readonly id: FieldRef<"LivroCaixa", 'Int'>
    readonly dataAbertura: FieldRef<"LivroCaixa", 'DateTime'>
    readonly dataFechamento: FieldRef<"LivroCaixa", 'DateTime'>
    readonly saldoInicial: FieldRef<"LivroCaixa", 'Decimal'>
    readonly saldoFinal: FieldRef<"LivroCaixa", 'Decimal'>
    readonly status: FieldRef<"LivroCaixa", 'StatusCaixa'>
    readonly usuarioID: FieldRef<"LivroCaixa", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * LivroCaixa findUnique
   */
  export type LivroCaixaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LivroCaixa
     */
    select?: LivroCaixaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LivroCaixa
     */
    omit?: LivroCaixaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LivroCaixaInclude<ExtArgs> | null
    /**
     * Filter, which LivroCaixa to fetch.
     */
    where: LivroCaixaWhereUniqueInput
  }

  /**
   * LivroCaixa findUniqueOrThrow
   */
  export type LivroCaixaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LivroCaixa
     */
    select?: LivroCaixaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LivroCaixa
     */
    omit?: LivroCaixaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LivroCaixaInclude<ExtArgs> | null
    /**
     * Filter, which LivroCaixa to fetch.
     */
    where: LivroCaixaWhereUniqueInput
  }

  /**
   * LivroCaixa findFirst
   */
  export type LivroCaixaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LivroCaixa
     */
    select?: LivroCaixaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LivroCaixa
     */
    omit?: LivroCaixaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LivroCaixaInclude<ExtArgs> | null
    /**
     * Filter, which LivroCaixa to fetch.
     */
    where?: LivroCaixaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LivroCaixas to fetch.
     */
    orderBy?: LivroCaixaOrderByWithRelationInput | LivroCaixaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LivroCaixas.
     */
    cursor?: LivroCaixaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LivroCaixas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LivroCaixas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LivroCaixas.
     */
    distinct?: LivroCaixaScalarFieldEnum | LivroCaixaScalarFieldEnum[]
  }

  /**
   * LivroCaixa findFirstOrThrow
   */
  export type LivroCaixaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LivroCaixa
     */
    select?: LivroCaixaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LivroCaixa
     */
    omit?: LivroCaixaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LivroCaixaInclude<ExtArgs> | null
    /**
     * Filter, which LivroCaixa to fetch.
     */
    where?: LivroCaixaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LivroCaixas to fetch.
     */
    orderBy?: LivroCaixaOrderByWithRelationInput | LivroCaixaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LivroCaixas.
     */
    cursor?: LivroCaixaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LivroCaixas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LivroCaixas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LivroCaixas.
     */
    distinct?: LivroCaixaScalarFieldEnum | LivroCaixaScalarFieldEnum[]
  }

  /**
   * LivroCaixa findMany
   */
  export type LivroCaixaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LivroCaixa
     */
    select?: LivroCaixaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LivroCaixa
     */
    omit?: LivroCaixaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LivroCaixaInclude<ExtArgs> | null
    /**
     * Filter, which LivroCaixas to fetch.
     */
    where?: LivroCaixaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LivroCaixas to fetch.
     */
    orderBy?: LivroCaixaOrderByWithRelationInput | LivroCaixaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing LivroCaixas.
     */
    cursor?: LivroCaixaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LivroCaixas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LivroCaixas.
     */
    skip?: number
    distinct?: LivroCaixaScalarFieldEnum | LivroCaixaScalarFieldEnum[]
  }

  /**
   * LivroCaixa create
   */
  export type LivroCaixaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LivroCaixa
     */
    select?: LivroCaixaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LivroCaixa
     */
    omit?: LivroCaixaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LivroCaixaInclude<ExtArgs> | null
    /**
     * The data needed to create a LivroCaixa.
     */
    data: XOR<LivroCaixaCreateInput, LivroCaixaUncheckedCreateInput>
  }

  /**
   * LivroCaixa createMany
   */
  export type LivroCaixaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many LivroCaixas.
     */
    data: LivroCaixaCreateManyInput | LivroCaixaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * LivroCaixa createManyAndReturn
   */
  export type LivroCaixaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LivroCaixa
     */
    select?: LivroCaixaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the LivroCaixa
     */
    omit?: LivroCaixaOmit<ExtArgs> | null
    /**
     * The data used to create many LivroCaixas.
     */
    data: LivroCaixaCreateManyInput | LivroCaixaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LivroCaixaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * LivroCaixa update
   */
  export type LivroCaixaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LivroCaixa
     */
    select?: LivroCaixaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LivroCaixa
     */
    omit?: LivroCaixaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LivroCaixaInclude<ExtArgs> | null
    /**
     * The data needed to update a LivroCaixa.
     */
    data: XOR<LivroCaixaUpdateInput, LivroCaixaUncheckedUpdateInput>
    /**
     * Choose, which LivroCaixa to update.
     */
    where: LivroCaixaWhereUniqueInput
  }

  /**
   * LivroCaixa updateMany
   */
  export type LivroCaixaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update LivroCaixas.
     */
    data: XOR<LivroCaixaUpdateManyMutationInput, LivroCaixaUncheckedUpdateManyInput>
    /**
     * Filter which LivroCaixas to update
     */
    where?: LivroCaixaWhereInput
    /**
     * Limit how many LivroCaixas to update.
     */
    limit?: number
  }

  /**
   * LivroCaixa updateManyAndReturn
   */
  export type LivroCaixaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LivroCaixa
     */
    select?: LivroCaixaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the LivroCaixa
     */
    omit?: LivroCaixaOmit<ExtArgs> | null
    /**
     * The data used to update LivroCaixas.
     */
    data: XOR<LivroCaixaUpdateManyMutationInput, LivroCaixaUncheckedUpdateManyInput>
    /**
     * Filter which LivroCaixas to update
     */
    where?: LivroCaixaWhereInput
    /**
     * Limit how many LivroCaixas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LivroCaixaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * LivroCaixa upsert
   */
  export type LivroCaixaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LivroCaixa
     */
    select?: LivroCaixaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LivroCaixa
     */
    omit?: LivroCaixaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LivroCaixaInclude<ExtArgs> | null
    /**
     * The filter to search for the LivroCaixa to update in case it exists.
     */
    where: LivroCaixaWhereUniqueInput
    /**
     * In case the LivroCaixa found by the `where` argument doesn't exist, create a new LivroCaixa with this data.
     */
    create: XOR<LivroCaixaCreateInput, LivroCaixaUncheckedCreateInput>
    /**
     * In case the LivroCaixa was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LivroCaixaUpdateInput, LivroCaixaUncheckedUpdateInput>
  }

  /**
   * LivroCaixa delete
   */
  export type LivroCaixaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LivroCaixa
     */
    select?: LivroCaixaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LivroCaixa
     */
    omit?: LivroCaixaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LivroCaixaInclude<ExtArgs> | null
    /**
     * Filter which LivroCaixa to delete.
     */
    where: LivroCaixaWhereUniqueInput
  }

  /**
   * LivroCaixa deleteMany
   */
  export type LivroCaixaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which LivroCaixas to delete
     */
    where?: LivroCaixaWhereInput
    /**
     * Limit how many LivroCaixas to delete.
     */
    limit?: number
  }

  /**
   * LivroCaixa.movimentacoes
   */
  export type LivroCaixa$movimentacoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MovimentacaoFinanceira
     */
    select?: MovimentacaoFinanceiraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MovimentacaoFinanceira
     */
    omit?: MovimentacaoFinanceiraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MovimentacaoFinanceiraInclude<ExtArgs> | null
    where?: MovimentacaoFinanceiraWhereInput
    orderBy?: MovimentacaoFinanceiraOrderByWithRelationInput | MovimentacaoFinanceiraOrderByWithRelationInput[]
    cursor?: MovimentacaoFinanceiraWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MovimentacaoFinanceiraScalarFieldEnum | MovimentacaoFinanceiraScalarFieldEnum[]
  }

  /**
   * LivroCaixa without action
   */
  export type LivroCaixaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LivroCaixa
     */
    select?: LivroCaixaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LivroCaixa
     */
    omit?: LivroCaixaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LivroCaixaInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UserScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    email: 'email',
    senha: 'senha',
    telefone: 'telefone',
    cargoID: 'cargoID',
    deletedAt: 'deletedAt'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const PermissoesScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    descricao: 'descricao'
  };

  export type PermissoesScalarFieldEnum = (typeof PermissoesScalarFieldEnum)[keyof typeof PermissoesScalarFieldEnum]


  export const CargoScalarFieldEnum: {
    id: 'id',
    nome: 'nome'
  };

  export type CargoScalarFieldEnum = (typeof CargoScalarFieldEnum)[keyof typeof CargoScalarFieldEnum]


  export const RegistroScalarFieldEnum: {
    id: 'id',
    nome_razao: 'nome_razao',
    apelido: 'apelido',
    tipo: 'tipo',
    tabelaID: 'tabelaID',
    email: 'email',
    telefone: 'telefone',
    criadoEm: 'criadoEm'
  };

  export type RegistroScalarFieldEnum = (typeof RegistroScalarFieldEnum)[keyof typeof RegistroScalarFieldEnum]


  export const PessoaFisicaScalarFieldEnum: {
    id: 'id',
    cpf: 'cpf',
    nascimento: 'nascimento'
  };

  export type PessoaFisicaScalarFieldEnum = (typeof PessoaFisicaScalarFieldEnum)[keyof typeof PessoaFisicaScalarFieldEnum]


  export const PessoaJuridicaScalarFieldEnum: {
    id: 'id',
    cnpj: 'cnpj',
    ie: 'ie',
    fantasia: 'fantasia'
  };

  export type PessoaJuridicaScalarFieldEnum = (typeof PessoaJuridicaScalarFieldEnum)[keyof typeof PessoaJuridicaScalarFieldEnum]


  export const SaldoFinanceiroScalarFieldEnum: {
    id: 'id',
    regID: 'regID',
    saldo: 'saldo'
  };

  export type SaldoFinanceiroScalarFieldEnum = (typeof SaldoFinanceiroScalarFieldEnum)[keyof typeof SaldoFinanceiroScalarFieldEnum]


  export const EnderecoScalarFieldEnum: {
    id: 'id',
    regID: 'regID',
    estado: 'estado',
    cidade: 'cidade',
    bairro: 'bairro',
    logradouro: 'logradouro',
    numero: 'numero',
    complemento: 'complemento'
  };

  export type EnderecoScalarFieldEnum = (typeof EnderecoScalarFieldEnum)[keyof typeof EnderecoScalarFieldEnum]


  export const DadosPagamentoScalarFieldEnum: {
    id: 'id',
    banco: 'banco',
    agencia: 'agencia',
    conta: 'conta',
    chave: 'chave',
    cpf: 'cpf',
    regID: 'regID'
  };

  export type DadosPagamentoScalarFieldEnum = (typeof DadosPagamentoScalarFieldEnum)[keyof typeof DadosPagamentoScalarFieldEnum]


  export const TabelaScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    updatedAt: 'updatedAt'
  };

  export type TabelaScalarFieldEnum = (typeof TabelaScalarFieldEnum)[keyof typeof TabelaScalarFieldEnum]


  export const PrecoPorTabelaScalarFieldEnum: {
    id: 'id',
    v_compra: 'v_compra',
    materialID: 'materialID',
    tabelaID: 'tabelaID',
    editadoEm: 'editadoEm'
  };

  export type PrecoPorTabelaScalarFieldEnum = (typeof PrecoPorTabelaScalarFieldEnum)[keyof typeof PrecoPorTabelaScalarFieldEnum]


  export const MaterialScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    catID: 'catID',
    v_venda: 'v_venda',
    estoque: 'estoque',
    criado_em: 'criado_em',
    editado_em: 'editado_em',
    status: 'status'
  };

  export type MaterialScalarFieldEnum = (typeof MaterialScalarFieldEnum)[keyof typeof MaterialScalarFieldEnum]


  export const CategoriaMaterialScalarFieldEnum: {
    id: 'id',
    name: 'name'
  };

  export type CategoriaMaterialScalarFieldEnum = (typeof CategoriaMaterialScalarFieldEnum)[keyof typeof CategoriaMaterialScalarFieldEnum]


  export const ItemPedidoScalarFieldEnum: {
    id: 'id',
    pedidoID: 'pedidoID',
    materialID: 'materialID',
    preco: 'preco',
    quantidade: 'quantidade',
    tara: 'tara',
    impureza: 'impureza'
  };

  export type ItemPedidoScalarFieldEnum = (typeof ItemPedidoScalarFieldEnum)[keyof typeof ItemPedidoScalarFieldEnum]


  export const PedidoScalarFieldEnum: {
    id: 'id',
    regID: 'regID',
    tipo: 'tipo',
    valor_total: 'valor_total',
    status: 'status',
    userID: 'userID',
    criado_em: 'criado_em',
    atualizado: 'atualizado'
  };

  export type PedidoScalarFieldEnum = (typeof PedidoScalarFieldEnum)[keyof typeof PedidoScalarFieldEnum]


  export const PagamentoScalarFieldEnum: {
    id: 'id',
    pedidoID: 'pedidoID',
    valor: 'valor',
    forma: 'forma',
    data: 'data'
  };

  export type PagamentoScalarFieldEnum = (typeof PagamentoScalarFieldEnum)[keyof typeof PagamentoScalarFieldEnum]


  export const ContaScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    saldo: 'saldo'
  };

  export type ContaScalarFieldEnum = (typeof ContaScalarFieldEnum)[keyof typeof ContaScalarFieldEnum]


  export const MovimentacaoFinanceiraScalarFieldEnum: {
    id: 'id',
    contaID: 'contaID',
    tipoMovimentacao: 'tipoMovimentacao',
    valor: 'valor',
    descricao: 'descricao',
    data: 'data',
    origem: 'origem',
    origemID: 'origemID',
    caixaID: 'caixaID'
  };

  export type MovimentacaoFinanceiraScalarFieldEnum = (typeof MovimentacaoFinanceiraScalarFieldEnum)[keyof typeof MovimentacaoFinanceiraScalarFieldEnum]


  export const MovimentacaoEstoqueScalarFieldEnum: {
    id: 'id',
    materialID: 'materialID',
    tipo: 'tipo',
    quantidade: 'quantidade',
    createdAt: 'createdAt',
    origemID: 'origemID',
    origemTipo: 'origemTipo',
    conversaoEstoqueId: 'conversaoEstoqueId'
  };

  export type MovimentacaoEstoqueScalarFieldEnum = (typeof MovimentacaoEstoqueScalarFieldEnum)[keyof typeof MovimentacaoEstoqueScalarFieldEnum]


  export const ConversaoEstoqueScalarFieldEnum: {
    id: 'id',
    mat_origemID: 'mat_origemID',
    mat_destinoID: 'mat_destinoID',
    quantidade: 'quantidade',
    descricao: 'descricao',
    createdAt: 'createdAt'
  };

  export type ConversaoEstoqueScalarFieldEnum = (typeof ConversaoEstoqueScalarFieldEnum)[keyof typeof ConversaoEstoqueScalarFieldEnum]


  export const LivroCaixaScalarFieldEnum: {
    id: 'id',
    dataAbertura: 'dataAbertura',
    dataFechamento: 'dataFechamento',
    saldoInicial: 'saldoInicial',
    saldoFinal: 'saldoFinal',
    status: 'status',
    usuarioID: 'usuarioID'
  };

  export type LivroCaixaScalarFieldEnum = (typeof LivroCaixaScalarFieldEnum)[keyof typeof LivroCaixaScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'TipoRegistro'
   */
  export type EnumTipoRegistroFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoRegistro'>
    


  /**
   * Reference to a field of type 'TipoRegistro[]'
   */
  export type ListEnumTipoRegistroFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoRegistro[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'TipoPedido'
   */
  export type EnumTipoPedidoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoPedido'>
    


  /**
   * Reference to a field of type 'TipoPedido[]'
   */
  export type ListEnumTipoPedidoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoPedido[]'>
    


  /**
   * Reference to a field of type 'TipoStatusPedido'
   */
  export type EnumTipoStatusPedidoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoStatusPedido'>
    


  /**
   * Reference to a field of type 'TipoStatusPedido[]'
   */
  export type ListEnumTipoStatusPedidoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoStatusPedido[]'>
    


  /**
   * Reference to a field of type 'FormaPagamento'
   */
  export type EnumFormaPagamentoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'FormaPagamento'>
    


  /**
   * Reference to a field of type 'FormaPagamento[]'
   */
  export type ListEnumFormaPagamentoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'FormaPagamento[]'>
    


  /**
   * Reference to a field of type 'TipoMovimentacao'
   */
  export type EnumTipoMovimentacaoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoMovimentacao'>
    


  /**
   * Reference to a field of type 'TipoMovimentacao[]'
   */
  export type ListEnumTipoMovimentacaoFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoMovimentacao[]'>
    


  /**
   * Reference to a field of type 'TipoOrigem'
   */
  export type EnumTipoOrigemFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoOrigem'>
    


  /**
   * Reference to a field of type 'TipoOrigem[]'
   */
  export type ListEnumTipoOrigemFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoOrigem[]'>
    


  /**
   * Reference to a field of type 'TipoMovimentacaoEstoque'
   */
  export type EnumTipoMovimentacaoEstoqueFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoMovimentacaoEstoque'>
    


  /**
   * Reference to a field of type 'TipoMovimentacaoEstoque[]'
   */
  export type ListEnumTipoMovimentacaoEstoqueFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TipoMovimentacaoEstoque[]'>
    


  /**
   * Reference to a field of type 'OrigemMovimentacaoEstoque'
   */
  export type EnumOrigemMovimentacaoEstoqueFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OrigemMovimentacaoEstoque'>
    


  /**
   * Reference to a field of type 'OrigemMovimentacaoEstoque[]'
   */
  export type ListEnumOrigemMovimentacaoEstoqueFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OrigemMovimentacaoEstoque[]'>
    


  /**
   * Reference to a field of type 'StatusCaixa'
   */
  export type EnumStatusCaixaFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'StatusCaixa'>
    


  /**
   * Reference to a field of type 'StatusCaixa[]'
   */
  export type ListEnumStatusCaixaFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'StatusCaixa[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: IntFilter<"User"> | number
    nome?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    senha?: StringFilter<"User"> | string
    telefone?: StringFilter<"User"> | string
    cargoID?: IntFilter<"User"> | number
    deletedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    pedidos?: PedidoListRelationFilter
    cargo?: XOR<CargoScalarRelationFilter, CargoWhereInput>
    permissoes?: PermissoesListRelationFilter
    caixas?: LivroCaixaListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    telefone?: SortOrder
    cargoID?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    pedidos?: PedidoOrderByRelationAggregateInput
    cargo?: CargoOrderByWithRelationInput
    permissoes?: PermissoesOrderByRelationAggregateInput
    caixas?: LivroCaixaOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    nome?: StringFilter<"User"> | string
    senha?: StringFilter<"User"> | string
    telefone?: StringFilter<"User"> | string
    cargoID?: IntFilter<"User"> | number
    deletedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    pedidos?: PedidoListRelationFilter
    cargo?: XOR<CargoScalarRelationFilter, CargoWhereInput>
    permissoes?: PermissoesListRelationFilter
    caixas?: LivroCaixaListRelationFilter
  }, "id" | "email">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    telefone?: SortOrder
    cargoID?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    _count?: UserCountOrderByAggregateInput
    _avg?: UserAvgOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
    _sum?: UserSumOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"User"> | number
    nome?: StringWithAggregatesFilter<"User"> | string
    email?: StringWithAggregatesFilter<"User"> | string
    senha?: StringWithAggregatesFilter<"User"> | string
    telefone?: StringWithAggregatesFilter<"User"> | string
    cargoID?: IntWithAggregatesFilter<"User"> | number
    deletedAt?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
  }

  export type PermissoesWhereInput = {
    AND?: PermissoesWhereInput | PermissoesWhereInput[]
    OR?: PermissoesWhereInput[]
    NOT?: PermissoesWhereInput | PermissoesWhereInput[]
    id?: IntFilter<"Permissoes"> | number
    nome?: StringFilter<"Permissoes"> | string
    descricao?: StringNullableFilter<"Permissoes"> | string | null
    users?: UserListRelationFilter
  }

  export type PermissoesOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    descricao?: SortOrderInput | SortOrder
    users?: UserOrderByRelationAggregateInput
  }

  export type PermissoesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nome?: string
    AND?: PermissoesWhereInput | PermissoesWhereInput[]
    OR?: PermissoesWhereInput[]
    NOT?: PermissoesWhereInput | PermissoesWhereInput[]
    descricao?: StringNullableFilter<"Permissoes"> | string | null
    users?: UserListRelationFilter
  }, "id" | "nome">

  export type PermissoesOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    descricao?: SortOrderInput | SortOrder
    _count?: PermissoesCountOrderByAggregateInput
    _avg?: PermissoesAvgOrderByAggregateInput
    _max?: PermissoesMaxOrderByAggregateInput
    _min?: PermissoesMinOrderByAggregateInput
    _sum?: PermissoesSumOrderByAggregateInput
  }

  export type PermissoesScalarWhereWithAggregatesInput = {
    AND?: PermissoesScalarWhereWithAggregatesInput | PermissoesScalarWhereWithAggregatesInput[]
    OR?: PermissoesScalarWhereWithAggregatesInput[]
    NOT?: PermissoesScalarWhereWithAggregatesInput | PermissoesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Permissoes"> | number
    nome?: StringWithAggregatesFilter<"Permissoes"> | string
    descricao?: StringNullableWithAggregatesFilter<"Permissoes"> | string | null
  }

  export type CargoWhereInput = {
    AND?: CargoWhereInput | CargoWhereInput[]
    OR?: CargoWhereInput[]
    NOT?: CargoWhereInput | CargoWhereInput[]
    id?: IntFilter<"Cargo"> | number
    nome?: StringFilter<"Cargo"> | string
    users?: UserListRelationFilter
  }

  export type CargoOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    users?: UserOrderByRelationAggregateInput
  }

  export type CargoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nome?: string
    AND?: CargoWhereInput | CargoWhereInput[]
    OR?: CargoWhereInput[]
    NOT?: CargoWhereInput | CargoWhereInput[]
    users?: UserListRelationFilter
  }, "id" | "nome">

  export type CargoOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    _count?: CargoCountOrderByAggregateInput
    _avg?: CargoAvgOrderByAggregateInput
    _max?: CargoMaxOrderByAggregateInput
    _min?: CargoMinOrderByAggregateInput
    _sum?: CargoSumOrderByAggregateInput
  }

  export type CargoScalarWhereWithAggregatesInput = {
    AND?: CargoScalarWhereWithAggregatesInput | CargoScalarWhereWithAggregatesInput[]
    OR?: CargoScalarWhereWithAggregatesInput[]
    NOT?: CargoScalarWhereWithAggregatesInput | CargoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Cargo"> | number
    nome?: StringWithAggregatesFilter<"Cargo"> | string
  }

  export type RegistroWhereInput = {
    AND?: RegistroWhereInput | RegistroWhereInput[]
    OR?: RegistroWhereInput[]
    NOT?: RegistroWhereInput | RegistroWhereInput[]
    id?: IntFilter<"Registro"> | number
    nome_razao?: StringFilter<"Registro"> | string
    apelido?: StringNullableFilter<"Registro"> | string | null
    tipo?: EnumTipoRegistroFilter<"Registro"> | $Enums.TipoRegistro
    tabelaID?: IntFilter<"Registro"> | number
    email?: StringNullableFilter<"Registro"> | string | null
    telefone?: StringNullableFilter<"Registro"> | string | null
    criadoEm?: DateTimeFilter<"Registro"> | Date | string
    dados_pagamento?: XOR<DadosPagamentoNullableScalarRelationFilter, DadosPagamentoWhereInput> | null
    endereco?: XOR<EnderecoNullableScalarRelationFilter, EnderecoWhereInput> | null
    pedidos?: PedidoListRelationFilter
    fisica?: XOR<PessoaFisicaNullableScalarRelationFilter, PessoaFisicaWhereInput> | null
    juridica?: XOR<PessoaJuridicaNullableScalarRelationFilter, PessoaJuridicaWhereInput> | null
    tabela?: XOR<TabelaScalarRelationFilter, TabelaWhereInput>
    saldo?: XOR<SaldoFinanceiroNullableScalarRelationFilter, SaldoFinanceiroWhereInput> | null
  }

  export type RegistroOrderByWithRelationInput = {
    id?: SortOrder
    nome_razao?: SortOrder
    apelido?: SortOrderInput | SortOrder
    tipo?: SortOrder
    tabelaID?: SortOrder
    email?: SortOrderInput | SortOrder
    telefone?: SortOrderInput | SortOrder
    criadoEm?: SortOrder
    dados_pagamento?: DadosPagamentoOrderByWithRelationInput
    endereco?: EnderecoOrderByWithRelationInput
    pedidos?: PedidoOrderByRelationAggregateInput
    fisica?: PessoaFisicaOrderByWithRelationInput
    juridica?: PessoaJuridicaOrderByWithRelationInput
    tabela?: TabelaOrderByWithRelationInput
    saldo?: SaldoFinanceiroOrderByWithRelationInput
  }

  export type RegistroWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: RegistroWhereInput | RegistroWhereInput[]
    OR?: RegistroWhereInput[]
    NOT?: RegistroWhereInput | RegistroWhereInput[]
    nome_razao?: StringFilter<"Registro"> | string
    apelido?: StringNullableFilter<"Registro"> | string | null
    tipo?: EnumTipoRegistroFilter<"Registro"> | $Enums.TipoRegistro
    tabelaID?: IntFilter<"Registro"> | number
    email?: StringNullableFilter<"Registro"> | string | null
    telefone?: StringNullableFilter<"Registro"> | string | null
    criadoEm?: DateTimeFilter<"Registro"> | Date | string
    dados_pagamento?: XOR<DadosPagamentoNullableScalarRelationFilter, DadosPagamentoWhereInput> | null
    endereco?: XOR<EnderecoNullableScalarRelationFilter, EnderecoWhereInput> | null
    pedidos?: PedidoListRelationFilter
    fisica?: XOR<PessoaFisicaNullableScalarRelationFilter, PessoaFisicaWhereInput> | null
    juridica?: XOR<PessoaJuridicaNullableScalarRelationFilter, PessoaJuridicaWhereInput> | null
    tabela?: XOR<TabelaScalarRelationFilter, TabelaWhereInput>
    saldo?: XOR<SaldoFinanceiroNullableScalarRelationFilter, SaldoFinanceiroWhereInput> | null
  }, "id">

  export type RegistroOrderByWithAggregationInput = {
    id?: SortOrder
    nome_razao?: SortOrder
    apelido?: SortOrderInput | SortOrder
    tipo?: SortOrder
    tabelaID?: SortOrder
    email?: SortOrderInput | SortOrder
    telefone?: SortOrderInput | SortOrder
    criadoEm?: SortOrder
    _count?: RegistroCountOrderByAggregateInput
    _avg?: RegistroAvgOrderByAggregateInput
    _max?: RegistroMaxOrderByAggregateInput
    _min?: RegistroMinOrderByAggregateInput
    _sum?: RegistroSumOrderByAggregateInput
  }

  export type RegistroScalarWhereWithAggregatesInput = {
    AND?: RegistroScalarWhereWithAggregatesInput | RegistroScalarWhereWithAggregatesInput[]
    OR?: RegistroScalarWhereWithAggregatesInput[]
    NOT?: RegistroScalarWhereWithAggregatesInput | RegistroScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Registro"> | number
    nome_razao?: StringWithAggregatesFilter<"Registro"> | string
    apelido?: StringNullableWithAggregatesFilter<"Registro"> | string | null
    tipo?: EnumTipoRegistroWithAggregatesFilter<"Registro"> | $Enums.TipoRegistro
    tabelaID?: IntWithAggregatesFilter<"Registro"> | number
    email?: StringNullableWithAggregatesFilter<"Registro"> | string | null
    telefone?: StringNullableWithAggregatesFilter<"Registro"> | string | null
    criadoEm?: DateTimeWithAggregatesFilter<"Registro"> | Date | string
  }

  export type PessoaFisicaWhereInput = {
    AND?: PessoaFisicaWhereInput | PessoaFisicaWhereInput[]
    OR?: PessoaFisicaWhereInput[]
    NOT?: PessoaFisicaWhereInput | PessoaFisicaWhereInput[]
    id?: IntFilter<"PessoaFisica"> | number
    cpf?: StringFilter<"PessoaFisica"> | string
    nascimento?: DateTimeNullableFilter<"PessoaFisica"> | Date | string | null
    registro?: XOR<RegistroScalarRelationFilter, RegistroWhereInput>
  }

  export type PessoaFisicaOrderByWithRelationInput = {
    id?: SortOrder
    cpf?: SortOrder
    nascimento?: SortOrderInput | SortOrder
    registro?: RegistroOrderByWithRelationInput
  }

  export type PessoaFisicaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    cpf?: string
    AND?: PessoaFisicaWhereInput | PessoaFisicaWhereInput[]
    OR?: PessoaFisicaWhereInput[]
    NOT?: PessoaFisicaWhereInput | PessoaFisicaWhereInput[]
    nascimento?: DateTimeNullableFilter<"PessoaFisica"> | Date | string | null
    registro?: XOR<RegistroScalarRelationFilter, RegistroWhereInput>
  }, "id" | "cpf">

  export type PessoaFisicaOrderByWithAggregationInput = {
    id?: SortOrder
    cpf?: SortOrder
    nascimento?: SortOrderInput | SortOrder
    _count?: PessoaFisicaCountOrderByAggregateInput
    _avg?: PessoaFisicaAvgOrderByAggregateInput
    _max?: PessoaFisicaMaxOrderByAggregateInput
    _min?: PessoaFisicaMinOrderByAggregateInput
    _sum?: PessoaFisicaSumOrderByAggregateInput
  }

  export type PessoaFisicaScalarWhereWithAggregatesInput = {
    AND?: PessoaFisicaScalarWhereWithAggregatesInput | PessoaFisicaScalarWhereWithAggregatesInput[]
    OR?: PessoaFisicaScalarWhereWithAggregatesInput[]
    NOT?: PessoaFisicaScalarWhereWithAggregatesInput | PessoaFisicaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"PessoaFisica"> | number
    cpf?: StringWithAggregatesFilter<"PessoaFisica"> | string
    nascimento?: DateTimeNullableWithAggregatesFilter<"PessoaFisica"> | Date | string | null
  }

  export type PessoaJuridicaWhereInput = {
    AND?: PessoaJuridicaWhereInput | PessoaJuridicaWhereInput[]
    OR?: PessoaJuridicaWhereInput[]
    NOT?: PessoaJuridicaWhereInput | PessoaJuridicaWhereInput[]
    id?: IntFilter<"PessoaJuridica"> | number
    cnpj?: StringFilter<"PessoaJuridica"> | string
    ie?: StringNullableFilter<"PessoaJuridica"> | string | null
    fantasia?: StringNullableFilter<"PessoaJuridica"> | string | null
    registro?: XOR<RegistroScalarRelationFilter, RegistroWhereInput>
  }

  export type PessoaJuridicaOrderByWithRelationInput = {
    id?: SortOrder
    cnpj?: SortOrder
    ie?: SortOrderInput | SortOrder
    fantasia?: SortOrderInput | SortOrder
    registro?: RegistroOrderByWithRelationInput
  }

  export type PessoaJuridicaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    cnpj?: string
    AND?: PessoaJuridicaWhereInput | PessoaJuridicaWhereInput[]
    OR?: PessoaJuridicaWhereInput[]
    NOT?: PessoaJuridicaWhereInput | PessoaJuridicaWhereInput[]
    ie?: StringNullableFilter<"PessoaJuridica"> | string | null
    fantasia?: StringNullableFilter<"PessoaJuridica"> | string | null
    registro?: XOR<RegistroScalarRelationFilter, RegistroWhereInput>
  }, "id" | "cnpj">

  export type PessoaJuridicaOrderByWithAggregationInput = {
    id?: SortOrder
    cnpj?: SortOrder
    ie?: SortOrderInput | SortOrder
    fantasia?: SortOrderInput | SortOrder
    _count?: PessoaJuridicaCountOrderByAggregateInput
    _avg?: PessoaJuridicaAvgOrderByAggregateInput
    _max?: PessoaJuridicaMaxOrderByAggregateInput
    _min?: PessoaJuridicaMinOrderByAggregateInput
    _sum?: PessoaJuridicaSumOrderByAggregateInput
  }

  export type PessoaJuridicaScalarWhereWithAggregatesInput = {
    AND?: PessoaJuridicaScalarWhereWithAggregatesInput | PessoaJuridicaScalarWhereWithAggregatesInput[]
    OR?: PessoaJuridicaScalarWhereWithAggregatesInput[]
    NOT?: PessoaJuridicaScalarWhereWithAggregatesInput | PessoaJuridicaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"PessoaJuridica"> | number
    cnpj?: StringWithAggregatesFilter<"PessoaJuridica"> | string
    ie?: StringNullableWithAggregatesFilter<"PessoaJuridica"> | string | null
    fantasia?: StringNullableWithAggregatesFilter<"PessoaJuridica"> | string | null
  }

  export type SaldoFinanceiroWhereInput = {
    AND?: SaldoFinanceiroWhereInput | SaldoFinanceiroWhereInput[]
    OR?: SaldoFinanceiroWhereInput[]
    NOT?: SaldoFinanceiroWhereInput | SaldoFinanceiroWhereInput[]
    id?: IntFilter<"SaldoFinanceiro"> | number
    regID?: IntFilter<"SaldoFinanceiro"> | number
    saldo?: DecimalFilter<"SaldoFinanceiro"> | Decimal | DecimalJsLike | number | string
    registro?: XOR<RegistroScalarRelationFilter, RegistroWhereInput>
  }

  export type SaldoFinanceiroOrderByWithRelationInput = {
    id?: SortOrder
    regID?: SortOrder
    saldo?: SortOrder
    registro?: RegistroOrderByWithRelationInput
  }

  export type SaldoFinanceiroWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    regID?: number
    AND?: SaldoFinanceiroWhereInput | SaldoFinanceiroWhereInput[]
    OR?: SaldoFinanceiroWhereInput[]
    NOT?: SaldoFinanceiroWhereInput | SaldoFinanceiroWhereInput[]
    saldo?: DecimalFilter<"SaldoFinanceiro"> | Decimal | DecimalJsLike | number | string
    registro?: XOR<RegistroScalarRelationFilter, RegistroWhereInput>
  }, "id" | "regID">

  export type SaldoFinanceiroOrderByWithAggregationInput = {
    id?: SortOrder
    regID?: SortOrder
    saldo?: SortOrder
    _count?: SaldoFinanceiroCountOrderByAggregateInput
    _avg?: SaldoFinanceiroAvgOrderByAggregateInput
    _max?: SaldoFinanceiroMaxOrderByAggregateInput
    _min?: SaldoFinanceiroMinOrderByAggregateInput
    _sum?: SaldoFinanceiroSumOrderByAggregateInput
  }

  export type SaldoFinanceiroScalarWhereWithAggregatesInput = {
    AND?: SaldoFinanceiroScalarWhereWithAggregatesInput | SaldoFinanceiroScalarWhereWithAggregatesInput[]
    OR?: SaldoFinanceiroScalarWhereWithAggregatesInput[]
    NOT?: SaldoFinanceiroScalarWhereWithAggregatesInput | SaldoFinanceiroScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"SaldoFinanceiro"> | number
    regID?: IntWithAggregatesFilter<"SaldoFinanceiro"> | number
    saldo?: DecimalWithAggregatesFilter<"SaldoFinanceiro"> | Decimal | DecimalJsLike | number | string
  }

  export type EnderecoWhereInput = {
    AND?: EnderecoWhereInput | EnderecoWhereInput[]
    OR?: EnderecoWhereInput[]
    NOT?: EnderecoWhereInput | EnderecoWhereInput[]
    id?: IntFilter<"Endereco"> | number
    regID?: IntFilter<"Endereco"> | number
    estado?: StringNullableFilter<"Endereco"> | string | null
    cidade?: StringNullableFilter<"Endereco"> | string | null
    bairro?: StringNullableFilter<"Endereco"> | string | null
    logradouro?: StringNullableFilter<"Endereco"> | string | null
    numero?: StringNullableFilter<"Endereco"> | string | null
    complemento?: StringNullableFilter<"Endereco"> | string | null
    registro?: XOR<RegistroScalarRelationFilter, RegistroWhereInput>
  }

  export type EnderecoOrderByWithRelationInput = {
    id?: SortOrder
    regID?: SortOrder
    estado?: SortOrderInput | SortOrder
    cidade?: SortOrderInput | SortOrder
    bairro?: SortOrderInput | SortOrder
    logradouro?: SortOrderInput | SortOrder
    numero?: SortOrderInput | SortOrder
    complemento?: SortOrderInput | SortOrder
    registro?: RegistroOrderByWithRelationInput
  }

  export type EnderecoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    regID?: number
    AND?: EnderecoWhereInput | EnderecoWhereInput[]
    OR?: EnderecoWhereInput[]
    NOT?: EnderecoWhereInput | EnderecoWhereInput[]
    estado?: StringNullableFilter<"Endereco"> | string | null
    cidade?: StringNullableFilter<"Endereco"> | string | null
    bairro?: StringNullableFilter<"Endereco"> | string | null
    logradouro?: StringNullableFilter<"Endereco"> | string | null
    numero?: StringNullableFilter<"Endereco"> | string | null
    complemento?: StringNullableFilter<"Endereco"> | string | null
    registro?: XOR<RegistroScalarRelationFilter, RegistroWhereInput>
  }, "id" | "regID">

  export type EnderecoOrderByWithAggregationInput = {
    id?: SortOrder
    regID?: SortOrder
    estado?: SortOrderInput | SortOrder
    cidade?: SortOrderInput | SortOrder
    bairro?: SortOrderInput | SortOrder
    logradouro?: SortOrderInput | SortOrder
    numero?: SortOrderInput | SortOrder
    complemento?: SortOrderInput | SortOrder
    _count?: EnderecoCountOrderByAggregateInput
    _avg?: EnderecoAvgOrderByAggregateInput
    _max?: EnderecoMaxOrderByAggregateInput
    _min?: EnderecoMinOrderByAggregateInput
    _sum?: EnderecoSumOrderByAggregateInput
  }

  export type EnderecoScalarWhereWithAggregatesInput = {
    AND?: EnderecoScalarWhereWithAggregatesInput | EnderecoScalarWhereWithAggregatesInput[]
    OR?: EnderecoScalarWhereWithAggregatesInput[]
    NOT?: EnderecoScalarWhereWithAggregatesInput | EnderecoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Endereco"> | number
    regID?: IntWithAggregatesFilter<"Endereco"> | number
    estado?: StringNullableWithAggregatesFilter<"Endereco"> | string | null
    cidade?: StringNullableWithAggregatesFilter<"Endereco"> | string | null
    bairro?: StringNullableWithAggregatesFilter<"Endereco"> | string | null
    logradouro?: StringNullableWithAggregatesFilter<"Endereco"> | string | null
    numero?: StringNullableWithAggregatesFilter<"Endereco"> | string | null
    complemento?: StringNullableWithAggregatesFilter<"Endereco"> | string | null
  }

  export type DadosPagamentoWhereInput = {
    AND?: DadosPagamentoWhereInput | DadosPagamentoWhereInput[]
    OR?: DadosPagamentoWhereInput[]
    NOT?: DadosPagamentoWhereInput | DadosPagamentoWhereInput[]
    id?: IntFilter<"DadosPagamento"> | number
    banco?: StringNullableFilter<"DadosPagamento"> | string | null
    agencia?: IntNullableFilter<"DadosPagamento"> | number | null
    conta?: IntNullableFilter<"DadosPagamento"> | number | null
    chave?: StringNullableFilter<"DadosPagamento"> | string | null
    cpf?: StringNullableFilter<"DadosPagamento"> | string | null
    regID?: IntFilter<"DadosPagamento"> | number
    registro?: XOR<RegistroScalarRelationFilter, RegistroWhereInput>
  }

  export type DadosPagamentoOrderByWithRelationInput = {
    id?: SortOrder
    banco?: SortOrderInput | SortOrder
    agencia?: SortOrderInput | SortOrder
    conta?: SortOrderInput | SortOrder
    chave?: SortOrderInput | SortOrder
    cpf?: SortOrderInput | SortOrder
    regID?: SortOrder
    registro?: RegistroOrderByWithRelationInput
  }

  export type DadosPagamentoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    regID?: number
    AND?: DadosPagamentoWhereInput | DadosPagamentoWhereInput[]
    OR?: DadosPagamentoWhereInput[]
    NOT?: DadosPagamentoWhereInput | DadosPagamentoWhereInput[]
    banco?: StringNullableFilter<"DadosPagamento"> | string | null
    agencia?: IntNullableFilter<"DadosPagamento"> | number | null
    conta?: IntNullableFilter<"DadosPagamento"> | number | null
    chave?: StringNullableFilter<"DadosPagamento"> | string | null
    cpf?: StringNullableFilter<"DadosPagamento"> | string | null
    registro?: XOR<RegistroScalarRelationFilter, RegistroWhereInput>
  }, "id" | "regID">

  export type DadosPagamentoOrderByWithAggregationInput = {
    id?: SortOrder
    banco?: SortOrderInput | SortOrder
    agencia?: SortOrderInput | SortOrder
    conta?: SortOrderInput | SortOrder
    chave?: SortOrderInput | SortOrder
    cpf?: SortOrderInput | SortOrder
    regID?: SortOrder
    _count?: DadosPagamentoCountOrderByAggregateInput
    _avg?: DadosPagamentoAvgOrderByAggregateInput
    _max?: DadosPagamentoMaxOrderByAggregateInput
    _min?: DadosPagamentoMinOrderByAggregateInput
    _sum?: DadosPagamentoSumOrderByAggregateInput
  }

  export type DadosPagamentoScalarWhereWithAggregatesInput = {
    AND?: DadosPagamentoScalarWhereWithAggregatesInput | DadosPagamentoScalarWhereWithAggregatesInput[]
    OR?: DadosPagamentoScalarWhereWithAggregatesInput[]
    NOT?: DadosPagamentoScalarWhereWithAggregatesInput | DadosPagamentoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"DadosPagamento"> | number
    banco?: StringNullableWithAggregatesFilter<"DadosPagamento"> | string | null
    agencia?: IntNullableWithAggregatesFilter<"DadosPagamento"> | number | null
    conta?: IntNullableWithAggregatesFilter<"DadosPagamento"> | number | null
    chave?: StringNullableWithAggregatesFilter<"DadosPagamento"> | string | null
    cpf?: StringNullableWithAggregatesFilter<"DadosPagamento"> | string | null
    regID?: IntWithAggregatesFilter<"DadosPagamento"> | number
  }

  export type TabelaWhereInput = {
    AND?: TabelaWhereInput | TabelaWhereInput[]
    OR?: TabelaWhereInput[]
    NOT?: TabelaWhereInput | TabelaWhereInput[]
    id?: IntFilter<"Tabela"> | number
    nome?: StringFilter<"Tabela"> | string
    updatedAt?: DateTimeFilter<"Tabela"> | Date | string
    materiais?: PrecoPorTabelaListRelationFilter
    registros?: RegistroListRelationFilter
  }

  export type TabelaOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    updatedAt?: SortOrder
    materiais?: PrecoPorTabelaOrderByRelationAggregateInput
    registros?: RegistroOrderByRelationAggregateInput
  }

  export type TabelaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nome?: string
    AND?: TabelaWhereInput | TabelaWhereInput[]
    OR?: TabelaWhereInput[]
    NOT?: TabelaWhereInput | TabelaWhereInput[]
    updatedAt?: DateTimeFilter<"Tabela"> | Date | string
    materiais?: PrecoPorTabelaListRelationFilter
    registros?: RegistroListRelationFilter
  }, "id" | "nome">

  export type TabelaOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    updatedAt?: SortOrder
    _count?: TabelaCountOrderByAggregateInput
    _avg?: TabelaAvgOrderByAggregateInput
    _max?: TabelaMaxOrderByAggregateInput
    _min?: TabelaMinOrderByAggregateInput
    _sum?: TabelaSumOrderByAggregateInput
  }

  export type TabelaScalarWhereWithAggregatesInput = {
    AND?: TabelaScalarWhereWithAggregatesInput | TabelaScalarWhereWithAggregatesInput[]
    OR?: TabelaScalarWhereWithAggregatesInput[]
    NOT?: TabelaScalarWhereWithAggregatesInput | TabelaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Tabela"> | number
    nome?: StringWithAggregatesFilter<"Tabela"> | string
    updatedAt?: DateTimeWithAggregatesFilter<"Tabela"> | Date | string
  }

  export type PrecoPorTabelaWhereInput = {
    AND?: PrecoPorTabelaWhereInput | PrecoPorTabelaWhereInput[]
    OR?: PrecoPorTabelaWhereInput[]
    NOT?: PrecoPorTabelaWhereInput | PrecoPorTabelaWhereInput[]
    id?: IntFilter<"PrecoPorTabela"> | number
    v_compra?: DecimalFilter<"PrecoPorTabela"> | Decimal | DecimalJsLike | number | string
    materialID?: IntFilter<"PrecoPorTabela"> | number
    tabelaID?: IntFilter<"PrecoPorTabela"> | number
    editadoEm?: DateTimeFilter<"PrecoPorTabela"> | Date | string
    material?: XOR<MaterialScalarRelationFilter, MaterialWhereInput>
    tabela?: XOR<TabelaScalarRelationFilter, TabelaWhereInput>
  }

  export type PrecoPorTabelaOrderByWithRelationInput = {
    id?: SortOrder
    v_compra?: SortOrder
    materialID?: SortOrder
    tabelaID?: SortOrder
    editadoEm?: SortOrder
    material?: MaterialOrderByWithRelationInput
    tabela?: TabelaOrderByWithRelationInput
  }

  export type PrecoPorTabelaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: PrecoPorTabelaWhereInput | PrecoPorTabelaWhereInput[]
    OR?: PrecoPorTabelaWhereInput[]
    NOT?: PrecoPorTabelaWhereInput | PrecoPorTabelaWhereInput[]
    v_compra?: DecimalFilter<"PrecoPorTabela"> | Decimal | DecimalJsLike | number | string
    materialID?: IntFilter<"PrecoPorTabela"> | number
    tabelaID?: IntFilter<"PrecoPorTabela"> | number
    editadoEm?: DateTimeFilter<"PrecoPorTabela"> | Date | string
    material?: XOR<MaterialScalarRelationFilter, MaterialWhereInput>
    tabela?: XOR<TabelaScalarRelationFilter, TabelaWhereInput>
  }, "id">

  export type PrecoPorTabelaOrderByWithAggregationInput = {
    id?: SortOrder
    v_compra?: SortOrder
    materialID?: SortOrder
    tabelaID?: SortOrder
    editadoEm?: SortOrder
    _count?: PrecoPorTabelaCountOrderByAggregateInput
    _avg?: PrecoPorTabelaAvgOrderByAggregateInput
    _max?: PrecoPorTabelaMaxOrderByAggregateInput
    _min?: PrecoPorTabelaMinOrderByAggregateInput
    _sum?: PrecoPorTabelaSumOrderByAggregateInput
  }

  export type PrecoPorTabelaScalarWhereWithAggregatesInput = {
    AND?: PrecoPorTabelaScalarWhereWithAggregatesInput | PrecoPorTabelaScalarWhereWithAggregatesInput[]
    OR?: PrecoPorTabelaScalarWhereWithAggregatesInput[]
    NOT?: PrecoPorTabelaScalarWhereWithAggregatesInput | PrecoPorTabelaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"PrecoPorTabela"> | number
    v_compra?: DecimalWithAggregatesFilter<"PrecoPorTabela"> | Decimal | DecimalJsLike | number | string
    materialID?: IntWithAggregatesFilter<"PrecoPorTabela"> | number
    tabelaID?: IntWithAggregatesFilter<"PrecoPorTabela"> | number
    editadoEm?: DateTimeWithAggregatesFilter<"PrecoPorTabela"> | Date | string
  }

  export type MaterialWhereInput = {
    AND?: MaterialWhereInput | MaterialWhereInput[]
    OR?: MaterialWhereInput[]
    NOT?: MaterialWhereInput | MaterialWhereInput[]
    id?: IntFilter<"Material"> | number
    nome?: StringFilter<"Material"> | string
    catID?: IntFilter<"Material"> | number
    v_venda?: DecimalFilter<"Material"> | Decimal | DecimalJsLike | number | string
    estoque?: DecimalFilter<"Material"> | Decimal | DecimalJsLike | number | string
    criado_em?: DateTimeFilter<"Material"> | Date | string
    editado_em?: DateTimeFilter<"Material"> | Date | string
    status?: BoolFilter<"Material"> | boolean
    items?: ItemPedidoListRelationFilter
    categoria?: XOR<CategoriaMaterialScalarRelationFilter, CategoriaMaterialWhereInput>
    movimentacoes?: MovimentacaoEstoqueListRelationFilter
    preco_tabela?: PrecoPorTabelaListRelationFilter
  }

  export type MaterialOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    catID?: SortOrder
    v_venda?: SortOrder
    estoque?: SortOrder
    criado_em?: SortOrder
    editado_em?: SortOrder
    status?: SortOrder
    items?: ItemPedidoOrderByRelationAggregateInput
    categoria?: CategoriaMaterialOrderByWithRelationInput
    movimentacoes?: MovimentacaoEstoqueOrderByRelationAggregateInput
    preco_tabela?: PrecoPorTabelaOrderByRelationAggregateInput
  }

  export type MaterialWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: MaterialWhereInput | MaterialWhereInput[]
    OR?: MaterialWhereInput[]
    NOT?: MaterialWhereInput | MaterialWhereInput[]
    nome?: StringFilter<"Material"> | string
    catID?: IntFilter<"Material"> | number
    v_venda?: DecimalFilter<"Material"> | Decimal | DecimalJsLike | number | string
    estoque?: DecimalFilter<"Material"> | Decimal | DecimalJsLike | number | string
    criado_em?: DateTimeFilter<"Material"> | Date | string
    editado_em?: DateTimeFilter<"Material"> | Date | string
    status?: BoolFilter<"Material"> | boolean
    items?: ItemPedidoListRelationFilter
    categoria?: XOR<CategoriaMaterialScalarRelationFilter, CategoriaMaterialWhereInput>
    movimentacoes?: MovimentacaoEstoqueListRelationFilter
    preco_tabela?: PrecoPorTabelaListRelationFilter
  }, "id">

  export type MaterialOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    catID?: SortOrder
    v_venda?: SortOrder
    estoque?: SortOrder
    criado_em?: SortOrder
    editado_em?: SortOrder
    status?: SortOrder
    _count?: MaterialCountOrderByAggregateInput
    _avg?: MaterialAvgOrderByAggregateInput
    _max?: MaterialMaxOrderByAggregateInput
    _min?: MaterialMinOrderByAggregateInput
    _sum?: MaterialSumOrderByAggregateInput
  }

  export type MaterialScalarWhereWithAggregatesInput = {
    AND?: MaterialScalarWhereWithAggregatesInput | MaterialScalarWhereWithAggregatesInput[]
    OR?: MaterialScalarWhereWithAggregatesInput[]
    NOT?: MaterialScalarWhereWithAggregatesInput | MaterialScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Material"> | number
    nome?: StringWithAggregatesFilter<"Material"> | string
    catID?: IntWithAggregatesFilter<"Material"> | number
    v_venda?: DecimalWithAggregatesFilter<"Material"> | Decimal | DecimalJsLike | number | string
    estoque?: DecimalWithAggregatesFilter<"Material"> | Decimal | DecimalJsLike | number | string
    criado_em?: DateTimeWithAggregatesFilter<"Material"> | Date | string
    editado_em?: DateTimeWithAggregatesFilter<"Material"> | Date | string
    status?: BoolWithAggregatesFilter<"Material"> | boolean
  }

  export type CategoriaMaterialWhereInput = {
    AND?: CategoriaMaterialWhereInput | CategoriaMaterialWhereInput[]
    OR?: CategoriaMaterialWhereInput[]
    NOT?: CategoriaMaterialWhereInput | CategoriaMaterialWhereInput[]
    id?: IntFilter<"CategoriaMaterial"> | number
    name?: StringFilter<"CategoriaMaterial"> | string
    materiais?: MaterialListRelationFilter
  }

  export type CategoriaMaterialOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    materiais?: MaterialOrderByRelationAggregateInput
  }

  export type CategoriaMaterialWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: CategoriaMaterialWhereInput | CategoriaMaterialWhereInput[]
    OR?: CategoriaMaterialWhereInput[]
    NOT?: CategoriaMaterialWhereInput | CategoriaMaterialWhereInput[]
    name?: StringFilter<"CategoriaMaterial"> | string
    materiais?: MaterialListRelationFilter
  }, "id">

  export type CategoriaMaterialOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    _count?: CategoriaMaterialCountOrderByAggregateInput
    _avg?: CategoriaMaterialAvgOrderByAggregateInput
    _max?: CategoriaMaterialMaxOrderByAggregateInput
    _min?: CategoriaMaterialMinOrderByAggregateInput
    _sum?: CategoriaMaterialSumOrderByAggregateInput
  }

  export type CategoriaMaterialScalarWhereWithAggregatesInput = {
    AND?: CategoriaMaterialScalarWhereWithAggregatesInput | CategoriaMaterialScalarWhereWithAggregatesInput[]
    OR?: CategoriaMaterialScalarWhereWithAggregatesInput[]
    NOT?: CategoriaMaterialScalarWhereWithAggregatesInput | CategoriaMaterialScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"CategoriaMaterial"> | number
    name?: StringWithAggregatesFilter<"CategoriaMaterial"> | string
  }

  export type ItemPedidoWhereInput = {
    AND?: ItemPedidoWhereInput | ItemPedidoWhereInput[]
    OR?: ItemPedidoWhereInput[]
    NOT?: ItemPedidoWhereInput | ItemPedidoWhereInput[]
    id?: IntFilter<"ItemPedido"> | number
    pedidoID?: IntFilter<"ItemPedido"> | number
    materialID?: IntFilter<"ItemPedido"> | number
    preco?: DecimalFilter<"ItemPedido"> | Decimal | DecimalJsLike | number | string
    quantidade?: DecimalFilter<"ItemPedido"> | Decimal | DecimalJsLike | number | string
    tara?: DecimalFilter<"ItemPedido"> | Decimal | DecimalJsLike | number | string
    impureza?: DecimalFilter<"ItemPedido"> | Decimal | DecimalJsLike | number | string
    material?: XOR<MaterialScalarRelationFilter, MaterialWhereInput>
    pedido?: XOR<PedidoScalarRelationFilter, PedidoWhereInput>
  }

  export type ItemPedidoOrderByWithRelationInput = {
    id?: SortOrder
    pedidoID?: SortOrder
    materialID?: SortOrder
    preco?: SortOrder
    quantidade?: SortOrder
    tara?: SortOrder
    impureza?: SortOrder
    material?: MaterialOrderByWithRelationInput
    pedido?: PedidoOrderByWithRelationInput
  }

  export type ItemPedidoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ItemPedidoWhereInput | ItemPedidoWhereInput[]
    OR?: ItemPedidoWhereInput[]
    NOT?: ItemPedidoWhereInput | ItemPedidoWhereInput[]
    pedidoID?: IntFilter<"ItemPedido"> | number
    materialID?: IntFilter<"ItemPedido"> | number
    preco?: DecimalFilter<"ItemPedido"> | Decimal | DecimalJsLike | number | string
    quantidade?: DecimalFilter<"ItemPedido"> | Decimal | DecimalJsLike | number | string
    tara?: DecimalFilter<"ItemPedido"> | Decimal | DecimalJsLike | number | string
    impureza?: DecimalFilter<"ItemPedido"> | Decimal | DecimalJsLike | number | string
    material?: XOR<MaterialScalarRelationFilter, MaterialWhereInput>
    pedido?: XOR<PedidoScalarRelationFilter, PedidoWhereInput>
  }, "id">

  export type ItemPedidoOrderByWithAggregationInput = {
    id?: SortOrder
    pedidoID?: SortOrder
    materialID?: SortOrder
    preco?: SortOrder
    quantidade?: SortOrder
    tara?: SortOrder
    impureza?: SortOrder
    _count?: ItemPedidoCountOrderByAggregateInput
    _avg?: ItemPedidoAvgOrderByAggregateInput
    _max?: ItemPedidoMaxOrderByAggregateInput
    _min?: ItemPedidoMinOrderByAggregateInput
    _sum?: ItemPedidoSumOrderByAggregateInput
  }

  export type ItemPedidoScalarWhereWithAggregatesInput = {
    AND?: ItemPedidoScalarWhereWithAggregatesInput | ItemPedidoScalarWhereWithAggregatesInput[]
    OR?: ItemPedidoScalarWhereWithAggregatesInput[]
    NOT?: ItemPedidoScalarWhereWithAggregatesInput | ItemPedidoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ItemPedido"> | number
    pedidoID?: IntWithAggregatesFilter<"ItemPedido"> | number
    materialID?: IntWithAggregatesFilter<"ItemPedido"> | number
    preco?: DecimalWithAggregatesFilter<"ItemPedido"> | Decimal | DecimalJsLike | number | string
    quantidade?: DecimalWithAggregatesFilter<"ItemPedido"> | Decimal | DecimalJsLike | number | string
    tara?: DecimalWithAggregatesFilter<"ItemPedido"> | Decimal | DecimalJsLike | number | string
    impureza?: DecimalWithAggregatesFilter<"ItemPedido"> | Decimal | DecimalJsLike | number | string
  }

  export type PedidoWhereInput = {
    AND?: PedidoWhereInput | PedidoWhereInput[]
    OR?: PedidoWhereInput[]
    NOT?: PedidoWhereInput | PedidoWhereInput[]
    id?: IntFilter<"Pedido"> | number
    regID?: IntNullableFilter<"Pedido"> | number | null
    tipo?: EnumTipoPedidoFilter<"Pedido"> | $Enums.TipoPedido
    valor_total?: DecimalFilter<"Pedido"> | Decimal | DecimalJsLike | number | string
    status?: EnumTipoStatusPedidoFilter<"Pedido"> | $Enums.TipoStatusPedido
    userID?: IntFilter<"Pedido"> | number
    criado_em?: DateTimeFilter<"Pedido"> | Date | string
    atualizado?: DateTimeFilter<"Pedido"> | Date | string
    items?: ItemPedidoListRelationFilter
    pagamentos?: PagamentoListRelationFilter
    registro?: XOR<RegistroNullableScalarRelationFilter, RegistroWhereInput> | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type PedidoOrderByWithRelationInput = {
    id?: SortOrder
    regID?: SortOrderInput | SortOrder
    tipo?: SortOrder
    valor_total?: SortOrder
    status?: SortOrder
    userID?: SortOrder
    criado_em?: SortOrder
    atualizado?: SortOrder
    items?: ItemPedidoOrderByRelationAggregateInput
    pagamentos?: PagamentoOrderByRelationAggregateInput
    registro?: RegistroOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type PedidoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: PedidoWhereInput | PedidoWhereInput[]
    OR?: PedidoWhereInput[]
    NOT?: PedidoWhereInput | PedidoWhereInput[]
    regID?: IntNullableFilter<"Pedido"> | number | null
    tipo?: EnumTipoPedidoFilter<"Pedido"> | $Enums.TipoPedido
    valor_total?: DecimalFilter<"Pedido"> | Decimal | DecimalJsLike | number | string
    status?: EnumTipoStatusPedidoFilter<"Pedido"> | $Enums.TipoStatusPedido
    userID?: IntFilter<"Pedido"> | number
    criado_em?: DateTimeFilter<"Pedido"> | Date | string
    atualizado?: DateTimeFilter<"Pedido"> | Date | string
    items?: ItemPedidoListRelationFilter
    pagamentos?: PagamentoListRelationFilter
    registro?: XOR<RegistroNullableScalarRelationFilter, RegistroWhereInput> | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type PedidoOrderByWithAggregationInput = {
    id?: SortOrder
    regID?: SortOrderInput | SortOrder
    tipo?: SortOrder
    valor_total?: SortOrder
    status?: SortOrder
    userID?: SortOrder
    criado_em?: SortOrder
    atualizado?: SortOrder
    _count?: PedidoCountOrderByAggregateInput
    _avg?: PedidoAvgOrderByAggregateInput
    _max?: PedidoMaxOrderByAggregateInput
    _min?: PedidoMinOrderByAggregateInput
    _sum?: PedidoSumOrderByAggregateInput
  }

  export type PedidoScalarWhereWithAggregatesInput = {
    AND?: PedidoScalarWhereWithAggregatesInput | PedidoScalarWhereWithAggregatesInput[]
    OR?: PedidoScalarWhereWithAggregatesInput[]
    NOT?: PedidoScalarWhereWithAggregatesInput | PedidoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Pedido"> | number
    regID?: IntNullableWithAggregatesFilter<"Pedido"> | number | null
    tipo?: EnumTipoPedidoWithAggregatesFilter<"Pedido"> | $Enums.TipoPedido
    valor_total?: DecimalWithAggregatesFilter<"Pedido"> | Decimal | DecimalJsLike | number | string
    status?: EnumTipoStatusPedidoWithAggregatesFilter<"Pedido"> | $Enums.TipoStatusPedido
    userID?: IntWithAggregatesFilter<"Pedido"> | number
    criado_em?: DateTimeWithAggregatesFilter<"Pedido"> | Date | string
    atualizado?: DateTimeWithAggregatesFilter<"Pedido"> | Date | string
  }

  export type PagamentoWhereInput = {
    AND?: PagamentoWhereInput | PagamentoWhereInput[]
    OR?: PagamentoWhereInput[]
    NOT?: PagamentoWhereInput | PagamentoWhereInput[]
    id?: IntFilter<"Pagamento"> | number
    pedidoID?: IntFilter<"Pagamento"> | number
    valor?: DecimalFilter<"Pagamento"> | Decimal | DecimalJsLike | number | string
    forma?: EnumFormaPagamentoFilter<"Pagamento"> | $Enums.FormaPagamento
    data?: DateTimeFilter<"Pagamento"> | Date | string
    pedido?: XOR<PedidoScalarRelationFilter, PedidoWhereInput>
  }

  export type PagamentoOrderByWithRelationInput = {
    id?: SortOrder
    pedidoID?: SortOrder
    valor?: SortOrder
    forma?: SortOrder
    data?: SortOrder
    pedido?: PedidoOrderByWithRelationInput
  }

  export type PagamentoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: PagamentoWhereInput | PagamentoWhereInput[]
    OR?: PagamentoWhereInput[]
    NOT?: PagamentoWhereInput | PagamentoWhereInput[]
    pedidoID?: IntFilter<"Pagamento"> | number
    valor?: DecimalFilter<"Pagamento"> | Decimal | DecimalJsLike | number | string
    forma?: EnumFormaPagamentoFilter<"Pagamento"> | $Enums.FormaPagamento
    data?: DateTimeFilter<"Pagamento"> | Date | string
    pedido?: XOR<PedidoScalarRelationFilter, PedidoWhereInput>
  }, "id">

  export type PagamentoOrderByWithAggregationInput = {
    id?: SortOrder
    pedidoID?: SortOrder
    valor?: SortOrder
    forma?: SortOrder
    data?: SortOrder
    _count?: PagamentoCountOrderByAggregateInput
    _avg?: PagamentoAvgOrderByAggregateInput
    _max?: PagamentoMaxOrderByAggregateInput
    _min?: PagamentoMinOrderByAggregateInput
    _sum?: PagamentoSumOrderByAggregateInput
  }

  export type PagamentoScalarWhereWithAggregatesInput = {
    AND?: PagamentoScalarWhereWithAggregatesInput | PagamentoScalarWhereWithAggregatesInput[]
    OR?: PagamentoScalarWhereWithAggregatesInput[]
    NOT?: PagamentoScalarWhereWithAggregatesInput | PagamentoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Pagamento"> | number
    pedidoID?: IntWithAggregatesFilter<"Pagamento"> | number
    valor?: DecimalWithAggregatesFilter<"Pagamento"> | Decimal | DecimalJsLike | number | string
    forma?: EnumFormaPagamentoWithAggregatesFilter<"Pagamento"> | $Enums.FormaPagamento
    data?: DateTimeWithAggregatesFilter<"Pagamento"> | Date | string
  }

  export type ContaWhereInput = {
    AND?: ContaWhereInput | ContaWhereInput[]
    OR?: ContaWhereInput[]
    NOT?: ContaWhereInput | ContaWhereInput[]
    id?: IntFilter<"Conta"> | number
    nome?: StringFilter<"Conta"> | string
    saldo?: DecimalFilter<"Conta"> | Decimal | DecimalJsLike | number | string
    movimentacoes?: MovimentacaoFinanceiraListRelationFilter
  }

  export type ContaOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    saldo?: SortOrder
    movimentacoes?: MovimentacaoFinanceiraOrderByRelationAggregateInput
  }

  export type ContaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ContaWhereInput | ContaWhereInput[]
    OR?: ContaWhereInput[]
    NOT?: ContaWhereInput | ContaWhereInput[]
    nome?: StringFilter<"Conta"> | string
    saldo?: DecimalFilter<"Conta"> | Decimal | DecimalJsLike | number | string
    movimentacoes?: MovimentacaoFinanceiraListRelationFilter
  }, "id">

  export type ContaOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    saldo?: SortOrder
    _count?: ContaCountOrderByAggregateInput
    _avg?: ContaAvgOrderByAggregateInput
    _max?: ContaMaxOrderByAggregateInput
    _min?: ContaMinOrderByAggregateInput
    _sum?: ContaSumOrderByAggregateInput
  }

  export type ContaScalarWhereWithAggregatesInput = {
    AND?: ContaScalarWhereWithAggregatesInput | ContaScalarWhereWithAggregatesInput[]
    OR?: ContaScalarWhereWithAggregatesInput[]
    NOT?: ContaScalarWhereWithAggregatesInput | ContaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Conta"> | number
    nome?: StringWithAggregatesFilter<"Conta"> | string
    saldo?: DecimalWithAggregatesFilter<"Conta"> | Decimal | DecimalJsLike | number | string
  }

  export type MovimentacaoFinanceiraWhereInput = {
    AND?: MovimentacaoFinanceiraWhereInput | MovimentacaoFinanceiraWhereInput[]
    OR?: MovimentacaoFinanceiraWhereInput[]
    NOT?: MovimentacaoFinanceiraWhereInput | MovimentacaoFinanceiraWhereInput[]
    id?: IntFilter<"MovimentacaoFinanceira"> | number
    contaID?: IntFilter<"MovimentacaoFinanceira"> | number
    tipoMovimentacao?: EnumTipoMovimentacaoFilter<"MovimentacaoFinanceira"> | $Enums.TipoMovimentacao
    valor?: DecimalFilter<"MovimentacaoFinanceira"> | Decimal | DecimalJsLike | number | string
    descricao?: StringNullableFilter<"MovimentacaoFinanceira"> | string | null
    data?: DateTimeFilter<"MovimentacaoFinanceira"> | Date | string
    origem?: EnumTipoOrigemFilter<"MovimentacaoFinanceira"> | $Enums.TipoOrigem
    origemID?: IntNullableFilter<"MovimentacaoFinanceira"> | number | null
    caixaID?: IntFilter<"MovimentacaoFinanceira"> | number
    conta?: XOR<ContaScalarRelationFilter, ContaWhereInput>
    caixa?: XOR<LivroCaixaScalarRelationFilter, LivroCaixaWhereInput>
  }

  export type MovimentacaoFinanceiraOrderByWithRelationInput = {
    id?: SortOrder
    contaID?: SortOrder
    tipoMovimentacao?: SortOrder
    valor?: SortOrder
    descricao?: SortOrderInput | SortOrder
    data?: SortOrder
    origem?: SortOrder
    origemID?: SortOrderInput | SortOrder
    caixaID?: SortOrder
    conta?: ContaOrderByWithRelationInput
    caixa?: LivroCaixaOrderByWithRelationInput
  }

  export type MovimentacaoFinanceiraWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: MovimentacaoFinanceiraWhereInput | MovimentacaoFinanceiraWhereInput[]
    OR?: MovimentacaoFinanceiraWhereInput[]
    NOT?: MovimentacaoFinanceiraWhereInput | MovimentacaoFinanceiraWhereInput[]
    contaID?: IntFilter<"MovimentacaoFinanceira"> | number
    tipoMovimentacao?: EnumTipoMovimentacaoFilter<"MovimentacaoFinanceira"> | $Enums.TipoMovimentacao
    valor?: DecimalFilter<"MovimentacaoFinanceira"> | Decimal | DecimalJsLike | number | string
    descricao?: StringNullableFilter<"MovimentacaoFinanceira"> | string | null
    data?: DateTimeFilter<"MovimentacaoFinanceira"> | Date | string
    origem?: EnumTipoOrigemFilter<"MovimentacaoFinanceira"> | $Enums.TipoOrigem
    origemID?: IntNullableFilter<"MovimentacaoFinanceira"> | number | null
    caixaID?: IntFilter<"MovimentacaoFinanceira"> | number
    conta?: XOR<ContaScalarRelationFilter, ContaWhereInput>
    caixa?: XOR<LivroCaixaScalarRelationFilter, LivroCaixaWhereInput>
  }, "id">

  export type MovimentacaoFinanceiraOrderByWithAggregationInput = {
    id?: SortOrder
    contaID?: SortOrder
    tipoMovimentacao?: SortOrder
    valor?: SortOrder
    descricao?: SortOrderInput | SortOrder
    data?: SortOrder
    origem?: SortOrder
    origemID?: SortOrderInput | SortOrder
    caixaID?: SortOrder
    _count?: MovimentacaoFinanceiraCountOrderByAggregateInput
    _avg?: MovimentacaoFinanceiraAvgOrderByAggregateInput
    _max?: MovimentacaoFinanceiraMaxOrderByAggregateInput
    _min?: MovimentacaoFinanceiraMinOrderByAggregateInput
    _sum?: MovimentacaoFinanceiraSumOrderByAggregateInput
  }

  export type MovimentacaoFinanceiraScalarWhereWithAggregatesInput = {
    AND?: MovimentacaoFinanceiraScalarWhereWithAggregatesInput | MovimentacaoFinanceiraScalarWhereWithAggregatesInput[]
    OR?: MovimentacaoFinanceiraScalarWhereWithAggregatesInput[]
    NOT?: MovimentacaoFinanceiraScalarWhereWithAggregatesInput | MovimentacaoFinanceiraScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"MovimentacaoFinanceira"> | number
    contaID?: IntWithAggregatesFilter<"MovimentacaoFinanceira"> | number
    tipoMovimentacao?: EnumTipoMovimentacaoWithAggregatesFilter<"MovimentacaoFinanceira"> | $Enums.TipoMovimentacao
    valor?: DecimalWithAggregatesFilter<"MovimentacaoFinanceira"> | Decimal | DecimalJsLike | number | string
    descricao?: StringNullableWithAggregatesFilter<"MovimentacaoFinanceira"> | string | null
    data?: DateTimeWithAggregatesFilter<"MovimentacaoFinanceira"> | Date | string
    origem?: EnumTipoOrigemWithAggregatesFilter<"MovimentacaoFinanceira"> | $Enums.TipoOrigem
    origemID?: IntNullableWithAggregatesFilter<"MovimentacaoFinanceira"> | number | null
    caixaID?: IntWithAggregatesFilter<"MovimentacaoFinanceira"> | number
  }

  export type MovimentacaoEstoqueWhereInput = {
    AND?: MovimentacaoEstoqueWhereInput | MovimentacaoEstoqueWhereInput[]
    OR?: MovimentacaoEstoqueWhereInput[]
    NOT?: MovimentacaoEstoqueWhereInput | MovimentacaoEstoqueWhereInput[]
    id?: IntFilter<"MovimentacaoEstoque"> | number
    materialID?: IntFilter<"MovimentacaoEstoque"> | number
    tipo?: EnumTipoMovimentacaoEstoqueFilter<"MovimentacaoEstoque"> | $Enums.TipoMovimentacaoEstoque
    quantidade?: DecimalFilter<"MovimentacaoEstoque"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"MovimentacaoEstoque"> | Date | string
    origemID?: IntNullableFilter<"MovimentacaoEstoque"> | number | null
    origemTipo?: EnumOrigemMovimentacaoEstoqueFilter<"MovimentacaoEstoque"> | $Enums.OrigemMovimentacaoEstoque
    conversaoEstoqueId?: IntNullableFilter<"MovimentacaoEstoque"> | number | null
    conversaoEstoque?: XOR<ConversaoEstoqueNullableScalarRelationFilter, ConversaoEstoqueWhereInput> | null
    material?: XOR<MaterialScalarRelationFilter, MaterialWhereInput>
  }

  export type MovimentacaoEstoqueOrderByWithRelationInput = {
    id?: SortOrder
    materialID?: SortOrder
    tipo?: SortOrder
    quantidade?: SortOrder
    createdAt?: SortOrder
    origemID?: SortOrderInput | SortOrder
    origemTipo?: SortOrder
    conversaoEstoqueId?: SortOrderInput | SortOrder
    conversaoEstoque?: ConversaoEstoqueOrderByWithRelationInput
    material?: MaterialOrderByWithRelationInput
  }

  export type MovimentacaoEstoqueWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: MovimentacaoEstoqueWhereInput | MovimentacaoEstoqueWhereInput[]
    OR?: MovimentacaoEstoqueWhereInput[]
    NOT?: MovimentacaoEstoqueWhereInput | MovimentacaoEstoqueWhereInput[]
    materialID?: IntFilter<"MovimentacaoEstoque"> | number
    tipo?: EnumTipoMovimentacaoEstoqueFilter<"MovimentacaoEstoque"> | $Enums.TipoMovimentacaoEstoque
    quantidade?: DecimalFilter<"MovimentacaoEstoque"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"MovimentacaoEstoque"> | Date | string
    origemID?: IntNullableFilter<"MovimentacaoEstoque"> | number | null
    origemTipo?: EnumOrigemMovimentacaoEstoqueFilter<"MovimentacaoEstoque"> | $Enums.OrigemMovimentacaoEstoque
    conversaoEstoqueId?: IntNullableFilter<"MovimentacaoEstoque"> | number | null
    conversaoEstoque?: XOR<ConversaoEstoqueNullableScalarRelationFilter, ConversaoEstoqueWhereInput> | null
    material?: XOR<MaterialScalarRelationFilter, MaterialWhereInput>
  }, "id">

  export type MovimentacaoEstoqueOrderByWithAggregationInput = {
    id?: SortOrder
    materialID?: SortOrder
    tipo?: SortOrder
    quantidade?: SortOrder
    createdAt?: SortOrder
    origemID?: SortOrderInput | SortOrder
    origemTipo?: SortOrder
    conversaoEstoqueId?: SortOrderInput | SortOrder
    _count?: MovimentacaoEstoqueCountOrderByAggregateInput
    _avg?: MovimentacaoEstoqueAvgOrderByAggregateInput
    _max?: MovimentacaoEstoqueMaxOrderByAggregateInput
    _min?: MovimentacaoEstoqueMinOrderByAggregateInput
    _sum?: MovimentacaoEstoqueSumOrderByAggregateInput
  }

  export type MovimentacaoEstoqueScalarWhereWithAggregatesInput = {
    AND?: MovimentacaoEstoqueScalarWhereWithAggregatesInput | MovimentacaoEstoqueScalarWhereWithAggregatesInput[]
    OR?: MovimentacaoEstoqueScalarWhereWithAggregatesInput[]
    NOT?: MovimentacaoEstoqueScalarWhereWithAggregatesInput | MovimentacaoEstoqueScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"MovimentacaoEstoque"> | number
    materialID?: IntWithAggregatesFilter<"MovimentacaoEstoque"> | number
    tipo?: EnumTipoMovimentacaoEstoqueWithAggregatesFilter<"MovimentacaoEstoque"> | $Enums.TipoMovimentacaoEstoque
    quantidade?: DecimalWithAggregatesFilter<"MovimentacaoEstoque"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeWithAggregatesFilter<"MovimentacaoEstoque"> | Date | string
    origemID?: IntNullableWithAggregatesFilter<"MovimentacaoEstoque"> | number | null
    origemTipo?: EnumOrigemMovimentacaoEstoqueWithAggregatesFilter<"MovimentacaoEstoque"> | $Enums.OrigemMovimentacaoEstoque
    conversaoEstoqueId?: IntNullableWithAggregatesFilter<"MovimentacaoEstoque"> | number | null
  }

  export type ConversaoEstoqueWhereInput = {
    AND?: ConversaoEstoqueWhereInput | ConversaoEstoqueWhereInput[]
    OR?: ConversaoEstoqueWhereInput[]
    NOT?: ConversaoEstoqueWhereInput | ConversaoEstoqueWhereInput[]
    id?: IntFilter<"ConversaoEstoque"> | number
    mat_origemID?: IntFilter<"ConversaoEstoque"> | number
    mat_destinoID?: IntFilter<"ConversaoEstoque"> | number
    quantidade?: DecimalFilter<"ConversaoEstoque"> | Decimal | DecimalJsLike | number | string
    descricao?: StringNullableFilter<"ConversaoEstoque"> | string | null
    createdAt?: DateTimeFilter<"ConversaoEstoque"> | Date | string
    movimentacoes?: MovimentacaoEstoqueListRelationFilter
  }

  export type ConversaoEstoqueOrderByWithRelationInput = {
    id?: SortOrder
    mat_origemID?: SortOrder
    mat_destinoID?: SortOrder
    quantidade?: SortOrder
    descricao?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    movimentacoes?: MovimentacaoEstoqueOrderByRelationAggregateInput
  }

  export type ConversaoEstoqueWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ConversaoEstoqueWhereInput | ConversaoEstoqueWhereInput[]
    OR?: ConversaoEstoqueWhereInput[]
    NOT?: ConversaoEstoqueWhereInput | ConversaoEstoqueWhereInput[]
    mat_origemID?: IntFilter<"ConversaoEstoque"> | number
    mat_destinoID?: IntFilter<"ConversaoEstoque"> | number
    quantidade?: DecimalFilter<"ConversaoEstoque"> | Decimal | DecimalJsLike | number | string
    descricao?: StringNullableFilter<"ConversaoEstoque"> | string | null
    createdAt?: DateTimeFilter<"ConversaoEstoque"> | Date | string
    movimentacoes?: MovimentacaoEstoqueListRelationFilter
  }, "id">

  export type ConversaoEstoqueOrderByWithAggregationInput = {
    id?: SortOrder
    mat_origemID?: SortOrder
    mat_destinoID?: SortOrder
    quantidade?: SortOrder
    descricao?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: ConversaoEstoqueCountOrderByAggregateInput
    _avg?: ConversaoEstoqueAvgOrderByAggregateInput
    _max?: ConversaoEstoqueMaxOrderByAggregateInput
    _min?: ConversaoEstoqueMinOrderByAggregateInput
    _sum?: ConversaoEstoqueSumOrderByAggregateInput
  }

  export type ConversaoEstoqueScalarWhereWithAggregatesInput = {
    AND?: ConversaoEstoqueScalarWhereWithAggregatesInput | ConversaoEstoqueScalarWhereWithAggregatesInput[]
    OR?: ConversaoEstoqueScalarWhereWithAggregatesInput[]
    NOT?: ConversaoEstoqueScalarWhereWithAggregatesInput | ConversaoEstoqueScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ConversaoEstoque"> | number
    mat_origemID?: IntWithAggregatesFilter<"ConversaoEstoque"> | number
    mat_destinoID?: IntWithAggregatesFilter<"ConversaoEstoque"> | number
    quantidade?: DecimalWithAggregatesFilter<"ConversaoEstoque"> | Decimal | DecimalJsLike | number | string
    descricao?: StringNullableWithAggregatesFilter<"ConversaoEstoque"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"ConversaoEstoque"> | Date | string
  }

  export type LivroCaixaWhereInput = {
    AND?: LivroCaixaWhereInput | LivroCaixaWhereInput[]
    OR?: LivroCaixaWhereInput[]
    NOT?: LivroCaixaWhereInput | LivroCaixaWhereInput[]
    id?: IntFilter<"LivroCaixa"> | number
    dataAbertura?: DateTimeFilter<"LivroCaixa"> | Date | string
    dataFechamento?: DateTimeNullableFilter<"LivroCaixa"> | Date | string | null
    saldoInicial?: DecimalFilter<"LivroCaixa"> | Decimal | DecimalJsLike | number | string
    saldoFinal?: DecimalNullableFilter<"LivroCaixa"> | Decimal | DecimalJsLike | number | string | null
    status?: EnumStatusCaixaFilter<"LivroCaixa"> | $Enums.StatusCaixa
    usuarioID?: IntFilter<"LivroCaixa"> | number
    usuario?: XOR<UserScalarRelationFilter, UserWhereInput>
    movimentacoes?: MovimentacaoFinanceiraListRelationFilter
  }

  export type LivroCaixaOrderByWithRelationInput = {
    id?: SortOrder
    dataAbertura?: SortOrder
    dataFechamento?: SortOrderInput | SortOrder
    saldoInicial?: SortOrder
    saldoFinal?: SortOrderInput | SortOrder
    status?: SortOrder
    usuarioID?: SortOrder
    usuario?: UserOrderByWithRelationInput
    movimentacoes?: MovimentacaoFinanceiraOrderByRelationAggregateInput
  }

  export type LivroCaixaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: LivroCaixaWhereInput | LivroCaixaWhereInput[]
    OR?: LivroCaixaWhereInput[]
    NOT?: LivroCaixaWhereInput | LivroCaixaWhereInput[]
    dataAbertura?: DateTimeFilter<"LivroCaixa"> | Date | string
    dataFechamento?: DateTimeNullableFilter<"LivroCaixa"> | Date | string | null
    saldoInicial?: DecimalFilter<"LivroCaixa"> | Decimal | DecimalJsLike | number | string
    saldoFinal?: DecimalNullableFilter<"LivroCaixa"> | Decimal | DecimalJsLike | number | string | null
    status?: EnumStatusCaixaFilter<"LivroCaixa"> | $Enums.StatusCaixa
    usuarioID?: IntFilter<"LivroCaixa"> | number
    usuario?: XOR<UserScalarRelationFilter, UserWhereInput>
    movimentacoes?: MovimentacaoFinanceiraListRelationFilter
  }, "id">

  export type LivroCaixaOrderByWithAggregationInput = {
    id?: SortOrder
    dataAbertura?: SortOrder
    dataFechamento?: SortOrderInput | SortOrder
    saldoInicial?: SortOrder
    saldoFinal?: SortOrderInput | SortOrder
    status?: SortOrder
    usuarioID?: SortOrder
    _count?: LivroCaixaCountOrderByAggregateInput
    _avg?: LivroCaixaAvgOrderByAggregateInput
    _max?: LivroCaixaMaxOrderByAggregateInput
    _min?: LivroCaixaMinOrderByAggregateInput
    _sum?: LivroCaixaSumOrderByAggregateInput
  }

  export type LivroCaixaScalarWhereWithAggregatesInput = {
    AND?: LivroCaixaScalarWhereWithAggregatesInput | LivroCaixaScalarWhereWithAggregatesInput[]
    OR?: LivroCaixaScalarWhereWithAggregatesInput[]
    NOT?: LivroCaixaScalarWhereWithAggregatesInput | LivroCaixaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"LivroCaixa"> | number
    dataAbertura?: DateTimeWithAggregatesFilter<"LivroCaixa"> | Date | string
    dataFechamento?: DateTimeNullableWithAggregatesFilter<"LivroCaixa"> | Date | string | null
    saldoInicial?: DecimalWithAggregatesFilter<"LivroCaixa"> | Decimal | DecimalJsLike | number | string
    saldoFinal?: DecimalNullableWithAggregatesFilter<"LivroCaixa"> | Decimal | DecimalJsLike | number | string | null
    status?: EnumStatusCaixaWithAggregatesFilter<"LivroCaixa"> | $Enums.StatusCaixa
    usuarioID?: IntWithAggregatesFilter<"LivroCaixa"> | number
  }

  export type UserCreateInput = {
    nome: string
    email: string
    senha: string
    telefone: string
    deletedAt?: Date | string | null
    pedidos?: PedidoCreateNestedManyWithoutUserInput
    cargo: CargoCreateNestedOneWithoutUsersInput
    permissoes?: PermissoesCreateNestedManyWithoutUsersInput
    caixas?: LivroCaixaCreateNestedManyWithoutUsuarioInput
  }

  export type UserUncheckedCreateInput = {
    id?: number
    nome: string
    email: string
    senha: string
    telefone: string
    cargoID: number
    deletedAt?: Date | string | null
    pedidos?: PedidoUncheckedCreateNestedManyWithoutUserInput
    permissoes?: PermissoesUncheckedCreateNestedManyWithoutUsersInput
    caixas?: LivroCaixaUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UserUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pedidos?: PedidoUpdateManyWithoutUserNestedInput
    cargo?: CargoUpdateOneRequiredWithoutUsersNestedInput
    permissoes?: PermissoesUpdateManyWithoutUsersNestedInput
    caixas?: LivroCaixaUpdateManyWithoutUsuarioNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    cargoID?: IntFieldUpdateOperationsInput | number
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pedidos?: PedidoUncheckedUpdateManyWithoutUserNestedInput
    permissoes?: PermissoesUncheckedUpdateManyWithoutUsersNestedInput
    caixas?: LivroCaixaUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type UserCreateManyInput = {
    id?: number
    nome: string
    email: string
    senha: string
    telefone: string
    cargoID: number
    deletedAt?: Date | string | null
  }

  export type UserUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    cargoID?: IntFieldUpdateOperationsInput | number
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PermissoesCreateInput = {
    nome: string
    descricao?: string | null
    users?: UserCreateNestedManyWithoutPermissoesInput
  }

  export type PermissoesUncheckedCreateInput = {
    id?: number
    nome: string
    descricao?: string | null
    users?: UserUncheckedCreateNestedManyWithoutPermissoesInput
  }

  export type PermissoesUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UserUpdateManyWithoutPermissoesNestedInput
  }

  export type PermissoesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UserUncheckedUpdateManyWithoutPermissoesNestedInput
  }

  export type PermissoesCreateManyInput = {
    id?: number
    nome: string
    descricao?: string | null
  }

  export type PermissoesUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PermissoesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CargoCreateInput = {
    nome: string
    users?: UserCreateNestedManyWithoutCargoInput
  }

  export type CargoUncheckedCreateInput = {
    id?: number
    nome: string
    users?: UserUncheckedCreateNestedManyWithoutCargoInput
  }

  export type CargoUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    users?: UserUpdateManyWithoutCargoNestedInput
  }

  export type CargoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    users?: UserUncheckedUpdateManyWithoutCargoNestedInput
  }

  export type CargoCreateManyInput = {
    id?: number
    nome: string
  }

  export type CargoUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
  }

  export type CargoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
  }

  export type RegistroCreateInput = {
    nome_razao: string
    apelido?: string | null
    tipo: $Enums.TipoRegistro
    email?: string | null
    telefone?: string | null
    criadoEm?: Date | string
    dados_pagamento?: DadosPagamentoCreateNestedOneWithoutRegistroInput
    endereco?: EnderecoCreateNestedOneWithoutRegistroInput
    pedidos?: PedidoCreateNestedManyWithoutRegistroInput
    fisica?: PessoaFisicaCreateNestedOneWithoutRegistroInput
    juridica?: PessoaJuridicaCreateNestedOneWithoutRegistroInput
    tabela: TabelaCreateNestedOneWithoutRegistrosInput
    saldo?: SaldoFinanceiroCreateNestedOneWithoutRegistroInput
  }

  export type RegistroUncheckedCreateInput = {
    id?: number
    nome_razao: string
    apelido?: string | null
    tipo: $Enums.TipoRegistro
    tabelaID: number
    email?: string | null
    telefone?: string | null
    criadoEm?: Date | string
    dados_pagamento?: DadosPagamentoUncheckedCreateNestedOneWithoutRegistroInput
    endereco?: EnderecoUncheckedCreateNestedOneWithoutRegistroInput
    pedidos?: PedidoUncheckedCreateNestedManyWithoutRegistroInput
    fisica?: PessoaFisicaUncheckedCreateNestedOneWithoutRegistroInput
    juridica?: PessoaJuridicaUncheckedCreateNestedOneWithoutRegistroInput
    saldo?: SaldoFinanceiroUncheckedCreateNestedOneWithoutRegistroInput
  }

  export type RegistroUpdateInput = {
    nome_razao?: StringFieldUpdateOperationsInput | string
    apelido?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumTipoRegistroFieldUpdateOperationsInput | $Enums.TipoRegistro
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    dados_pagamento?: DadosPagamentoUpdateOneWithoutRegistroNestedInput
    endereco?: EnderecoUpdateOneWithoutRegistroNestedInput
    pedidos?: PedidoUpdateManyWithoutRegistroNestedInput
    fisica?: PessoaFisicaUpdateOneWithoutRegistroNestedInput
    juridica?: PessoaJuridicaUpdateOneWithoutRegistroNestedInput
    tabela?: TabelaUpdateOneRequiredWithoutRegistrosNestedInput
    saldo?: SaldoFinanceiroUpdateOneWithoutRegistroNestedInput
  }

  export type RegistroUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_razao?: StringFieldUpdateOperationsInput | string
    apelido?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumTipoRegistroFieldUpdateOperationsInput | $Enums.TipoRegistro
    tabelaID?: IntFieldUpdateOperationsInput | number
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    dados_pagamento?: DadosPagamentoUncheckedUpdateOneWithoutRegistroNestedInput
    endereco?: EnderecoUncheckedUpdateOneWithoutRegistroNestedInput
    pedidos?: PedidoUncheckedUpdateManyWithoutRegistroNestedInput
    fisica?: PessoaFisicaUncheckedUpdateOneWithoutRegistroNestedInput
    juridica?: PessoaJuridicaUncheckedUpdateOneWithoutRegistroNestedInput
    saldo?: SaldoFinanceiroUncheckedUpdateOneWithoutRegistroNestedInput
  }

  export type RegistroCreateManyInput = {
    id?: number
    nome_razao: string
    apelido?: string | null
    tipo: $Enums.TipoRegistro
    tabelaID: number
    email?: string | null
    telefone?: string | null
    criadoEm?: Date | string
  }

  export type RegistroUpdateManyMutationInput = {
    nome_razao?: StringFieldUpdateOperationsInput | string
    apelido?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumTipoRegistroFieldUpdateOperationsInput | $Enums.TipoRegistro
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegistroUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_razao?: StringFieldUpdateOperationsInput | string
    apelido?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumTipoRegistroFieldUpdateOperationsInput | $Enums.TipoRegistro
    tabelaID?: IntFieldUpdateOperationsInput | number
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PessoaFisicaCreateInput = {
    cpf: string
    nascimento?: Date | string | null
    registro: RegistroCreateNestedOneWithoutFisicaInput
  }

  export type PessoaFisicaUncheckedCreateInput = {
    id: number
    cpf: string
    nascimento?: Date | string | null
  }

  export type PessoaFisicaUpdateInput = {
    cpf?: StringFieldUpdateOperationsInput | string
    nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registro?: RegistroUpdateOneRequiredWithoutFisicaNestedInput
  }

  export type PessoaFisicaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    cpf?: StringFieldUpdateOperationsInput | string
    nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PessoaFisicaCreateManyInput = {
    id: number
    cpf: string
    nascimento?: Date | string | null
  }

  export type PessoaFisicaUpdateManyMutationInput = {
    cpf?: StringFieldUpdateOperationsInput | string
    nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PessoaFisicaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    cpf?: StringFieldUpdateOperationsInput | string
    nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PessoaJuridicaCreateInput = {
    cnpj: string
    ie?: string | null
    fantasia?: string | null
    registro: RegistroCreateNestedOneWithoutJuridicaInput
  }

  export type PessoaJuridicaUncheckedCreateInput = {
    id: number
    cnpj: string
    ie?: string | null
    fantasia?: string | null
  }

  export type PessoaJuridicaUpdateInput = {
    cnpj?: StringFieldUpdateOperationsInput | string
    ie?: NullableStringFieldUpdateOperationsInput | string | null
    fantasia?: NullableStringFieldUpdateOperationsInput | string | null
    registro?: RegistroUpdateOneRequiredWithoutJuridicaNestedInput
  }

  export type PessoaJuridicaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    cnpj?: StringFieldUpdateOperationsInput | string
    ie?: NullableStringFieldUpdateOperationsInput | string | null
    fantasia?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PessoaJuridicaCreateManyInput = {
    id: number
    cnpj: string
    ie?: string | null
    fantasia?: string | null
  }

  export type PessoaJuridicaUpdateManyMutationInput = {
    cnpj?: StringFieldUpdateOperationsInput | string
    ie?: NullableStringFieldUpdateOperationsInput | string | null
    fantasia?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PessoaJuridicaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    cnpj?: StringFieldUpdateOperationsInput | string
    ie?: NullableStringFieldUpdateOperationsInput | string | null
    fantasia?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SaldoFinanceiroCreateInput = {
    saldo: Decimal | DecimalJsLike | number | string
    registro: RegistroCreateNestedOneWithoutSaldoInput
  }

  export type SaldoFinanceiroUncheckedCreateInput = {
    id?: number
    regID: number
    saldo: Decimal | DecimalJsLike | number | string
  }

  export type SaldoFinanceiroUpdateInput = {
    saldo?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    registro?: RegistroUpdateOneRequiredWithoutSaldoNestedInput
  }

  export type SaldoFinanceiroUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    regID?: IntFieldUpdateOperationsInput | number
    saldo?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type SaldoFinanceiroCreateManyInput = {
    id?: number
    regID: number
    saldo: Decimal | DecimalJsLike | number | string
  }

  export type SaldoFinanceiroUpdateManyMutationInput = {
    saldo?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type SaldoFinanceiroUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    regID?: IntFieldUpdateOperationsInput | number
    saldo?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type EnderecoCreateInput = {
    estado?: string | null
    cidade?: string | null
    bairro?: string | null
    logradouro?: string | null
    numero?: string | null
    complemento?: string | null
    registro: RegistroCreateNestedOneWithoutEnderecoInput
  }

  export type EnderecoUncheckedCreateInput = {
    id?: number
    regID: number
    estado?: string | null
    cidade?: string | null
    bairro?: string | null
    logradouro?: string | null
    numero?: string | null
    complemento?: string | null
  }

  export type EnderecoUpdateInput = {
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    registro?: RegistroUpdateOneRequiredWithoutEnderecoNestedInput
  }

  export type EnderecoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    regID?: IntFieldUpdateOperationsInput | number
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EnderecoCreateManyInput = {
    id?: number
    regID: number
    estado?: string | null
    cidade?: string | null
    bairro?: string | null
    logradouro?: string | null
    numero?: string | null
    complemento?: string | null
  }

  export type EnderecoUpdateManyMutationInput = {
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EnderecoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    regID?: IntFieldUpdateOperationsInput | number
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DadosPagamentoCreateInput = {
    banco?: string | null
    agencia?: number | null
    conta?: number | null
    chave?: string | null
    cpf?: string | null
    registro: RegistroCreateNestedOneWithoutDados_pagamentoInput
  }

  export type DadosPagamentoUncheckedCreateInput = {
    id?: number
    banco?: string | null
    agencia?: number | null
    conta?: number | null
    chave?: string | null
    cpf?: string | null
    regID: number
  }

  export type DadosPagamentoUpdateInput = {
    banco?: NullableStringFieldUpdateOperationsInput | string | null
    agencia?: NullableIntFieldUpdateOperationsInput | number | null
    conta?: NullableIntFieldUpdateOperationsInput | number | null
    chave?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    registro?: RegistroUpdateOneRequiredWithoutDados_pagamentoNestedInput
  }

  export type DadosPagamentoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    banco?: NullableStringFieldUpdateOperationsInput | string | null
    agencia?: NullableIntFieldUpdateOperationsInput | number | null
    conta?: NullableIntFieldUpdateOperationsInput | number | null
    chave?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    regID?: IntFieldUpdateOperationsInput | number
  }

  export type DadosPagamentoCreateManyInput = {
    id?: number
    banco?: string | null
    agencia?: number | null
    conta?: number | null
    chave?: string | null
    cpf?: string | null
    regID: number
  }

  export type DadosPagamentoUpdateManyMutationInput = {
    banco?: NullableStringFieldUpdateOperationsInput | string | null
    agencia?: NullableIntFieldUpdateOperationsInput | number | null
    conta?: NullableIntFieldUpdateOperationsInput | number | null
    chave?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DadosPagamentoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    banco?: NullableStringFieldUpdateOperationsInput | string | null
    agencia?: NullableIntFieldUpdateOperationsInput | number | null
    conta?: NullableIntFieldUpdateOperationsInput | number | null
    chave?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    regID?: IntFieldUpdateOperationsInput | number
  }

  export type TabelaCreateInput = {
    nome: string
    updatedAt?: Date | string
    materiais?: PrecoPorTabelaCreateNestedManyWithoutTabelaInput
    registros?: RegistroCreateNestedManyWithoutTabelaInput
  }

  export type TabelaUncheckedCreateInput = {
    id?: number
    nome: string
    updatedAt?: Date | string
    materiais?: PrecoPorTabelaUncheckedCreateNestedManyWithoutTabelaInput
    registros?: RegistroUncheckedCreateNestedManyWithoutTabelaInput
  }

  export type TabelaUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    materiais?: PrecoPorTabelaUpdateManyWithoutTabelaNestedInput
    registros?: RegistroUpdateManyWithoutTabelaNestedInput
  }

  export type TabelaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    materiais?: PrecoPorTabelaUncheckedUpdateManyWithoutTabelaNestedInput
    registros?: RegistroUncheckedUpdateManyWithoutTabelaNestedInput
  }

  export type TabelaCreateManyInput = {
    id?: number
    nome: string
    updatedAt?: Date | string
  }

  export type TabelaUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TabelaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PrecoPorTabelaCreateInput = {
    v_compra: Decimal | DecimalJsLike | number | string
    editadoEm?: Date | string
    material: MaterialCreateNestedOneWithoutPreco_tabelaInput
    tabela: TabelaCreateNestedOneWithoutMateriaisInput
  }

  export type PrecoPorTabelaUncheckedCreateInput = {
    id?: number
    v_compra: Decimal | DecimalJsLike | number | string
    materialID: number
    tabelaID: number
    editadoEm?: Date | string
  }

  export type PrecoPorTabelaUpdateInput = {
    v_compra?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    editadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    material?: MaterialUpdateOneRequiredWithoutPreco_tabelaNestedInput
    tabela?: TabelaUpdateOneRequiredWithoutMateriaisNestedInput
  }

  export type PrecoPorTabelaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    v_compra?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    materialID?: IntFieldUpdateOperationsInput | number
    tabelaID?: IntFieldUpdateOperationsInput | number
    editadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PrecoPorTabelaCreateManyInput = {
    id?: number
    v_compra: Decimal | DecimalJsLike | number | string
    materialID: number
    tabelaID: number
    editadoEm?: Date | string
  }

  export type PrecoPorTabelaUpdateManyMutationInput = {
    v_compra?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    editadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PrecoPorTabelaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    v_compra?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    materialID?: IntFieldUpdateOperationsInput | number
    tabelaID?: IntFieldUpdateOperationsInput | number
    editadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MaterialCreateInput = {
    nome: string
    v_venda: Decimal | DecimalJsLike | number | string
    estoque: Decimal | DecimalJsLike | number | string
    criado_em?: Date | string
    editado_em?: Date | string
    status?: boolean
    items?: ItemPedidoCreateNestedManyWithoutMaterialInput
    categoria: CategoriaMaterialCreateNestedOneWithoutMateriaisInput
    movimentacoes?: MovimentacaoEstoqueCreateNestedManyWithoutMaterialInput
    preco_tabela?: PrecoPorTabelaCreateNestedManyWithoutMaterialInput
  }

  export type MaterialUncheckedCreateInput = {
    id?: number
    nome: string
    catID: number
    v_venda: Decimal | DecimalJsLike | number | string
    estoque: Decimal | DecimalJsLike | number | string
    criado_em?: Date | string
    editado_em?: Date | string
    status?: boolean
    items?: ItemPedidoUncheckedCreateNestedManyWithoutMaterialInput
    movimentacoes?: MovimentacaoEstoqueUncheckedCreateNestedManyWithoutMaterialInput
    preco_tabela?: PrecoPorTabelaUncheckedCreateNestedManyWithoutMaterialInput
  }

  export type MaterialUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    v_venda?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estoque?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    editado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: BoolFieldUpdateOperationsInput | boolean
    items?: ItemPedidoUpdateManyWithoutMaterialNestedInput
    categoria?: CategoriaMaterialUpdateOneRequiredWithoutMateriaisNestedInput
    movimentacoes?: MovimentacaoEstoqueUpdateManyWithoutMaterialNestedInput
    preco_tabela?: PrecoPorTabelaUpdateManyWithoutMaterialNestedInput
  }

  export type MaterialUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    catID?: IntFieldUpdateOperationsInput | number
    v_venda?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estoque?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    editado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: BoolFieldUpdateOperationsInput | boolean
    items?: ItemPedidoUncheckedUpdateManyWithoutMaterialNestedInput
    movimentacoes?: MovimentacaoEstoqueUncheckedUpdateManyWithoutMaterialNestedInput
    preco_tabela?: PrecoPorTabelaUncheckedUpdateManyWithoutMaterialNestedInput
  }

  export type MaterialCreateManyInput = {
    id?: number
    nome: string
    catID: number
    v_venda: Decimal | DecimalJsLike | number | string
    estoque: Decimal | DecimalJsLike | number | string
    criado_em?: Date | string
    editado_em?: Date | string
    status?: boolean
  }

  export type MaterialUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    v_venda?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estoque?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    editado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: BoolFieldUpdateOperationsInput | boolean
  }

  export type MaterialUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    catID?: IntFieldUpdateOperationsInput | number
    v_venda?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estoque?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    editado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: BoolFieldUpdateOperationsInput | boolean
  }

  export type CategoriaMaterialCreateInput = {
    name: string
    materiais?: MaterialCreateNestedManyWithoutCategoriaInput
  }

  export type CategoriaMaterialUncheckedCreateInput = {
    id?: number
    name: string
    materiais?: MaterialUncheckedCreateNestedManyWithoutCategoriaInput
  }

  export type CategoriaMaterialUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    materiais?: MaterialUpdateManyWithoutCategoriaNestedInput
  }

  export type CategoriaMaterialUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    materiais?: MaterialUncheckedUpdateManyWithoutCategoriaNestedInput
  }

  export type CategoriaMaterialCreateManyInput = {
    id?: number
    name: string
  }

  export type CategoriaMaterialUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
  }

  export type CategoriaMaterialUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
  }

  export type ItemPedidoCreateInput = {
    preco: Decimal | DecimalJsLike | number | string
    quantidade: Decimal | DecimalJsLike | number | string
    tara: Decimal | DecimalJsLike | number | string
    impureza: Decimal | DecimalJsLike | number | string
    material: MaterialCreateNestedOneWithoutItemsInput
    pedido: PedidoCreateNestedOneWithoutItemsInput
  }

  export type ItemPedidoUncheckedCreateInput = {
    id?: number
    pedidoID: number
    materialID: number
    preco: Decimal | DecimalJsLike | number | string
    quantidade: Decimal | DecimalJsLike | number | string
    tara: Decimal | DecimalJsLike | number | string
    impureza: Decimal | DecimalJsLike | number | string
  }

  export type ItemPedidoUpdateInput = {
    preco?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tara?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impureza?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    material?: MaterialUpdateOneRequiredWithoutItemsNestedInput
    pedido?: PedidoUpdateOneRequiredWithoutItemsNestedInput
  }

  export type ItemPedidoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    pedidoID?: IntFieldUpdateOperationsInput | number
    materialID?: IntFieldUpdateOperationsInput | number
    preco?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tara?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impureza?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type ItemPedidoCreateManyInput = {
    id?: number
    pedidoID: number
    materialID: number
    preco: Decimal | DecimalJsLike | number | string
    quantidade: Decimal | DecimalJsLike | number | string
    tara: Decimal | DecimalJsLike | number | string
    impureza: Decimal | DecimalJsLike | number | string
  }

  export type ItemPedidoUpdateManyMutationInput = {
    preco?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tara?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impureza?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type ItemPedidoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    pedidoID?: IntFieldUpdateOperationsInput | number
    materialID?: IntFieldUpdateOperationsInput | number
    preco?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tara?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impureza?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type PedidoCreateInput = {
    tipo: $Enums.TipoPedido
    valor_total?: Decimal | DecimalJsLike | number | string
    status: $Enums.TipoStatusPedido
    criado_em?: Date | string
    atualizado?: Date | string
    items?: ItemPedidoCreateNestedManyWithoutPedidoInput
    pagamentos?: PagamentoCreateNestedManyWithoutPedidoInput
    registro?: RegistroCreateNestedOneWithoutPedidosInput
    user: UserCreateNestedOneWithoutPedidosInput
  }

  export type PedidoUncheckedCreateInput = {
    id?: number
    regID?: number | null
    tipo: $Enums.TipoPedido
    valor_total?: Decimal | DecimalJsLike | number | string
    status: $Enums.TipoStatusPedido
    userID: number
    criado_em?: Date | string
    atualizado?: Date | string
    items?: ItemPedidoUncheckedCreateNestedManyWithoutPedidoInput
    pagamentos?: PagamentoUncheckedCreateNestedManyWithoutPedidoInput
  }

  export type PedidoUpdateInput = {
    tipo?: EnumTipoPedidoFieldUpdateOperationsInput | $Enums.TipoPedido
    valor_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumTipoStatusPedidoFieldUpdateOperationsInput | $Enums.TipoStatusPedido
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado?: DateTimeFieldUpdateOperationsInput | Date | string
    items?: ItemPedidoUpdateManyWithoutPedidoNestedInput
    pagamentos?: PagamentoUpdateManyWithoutPedidoNestedInput
    registro?: RegistroUpdateOneWithoutPedidosNestedInput
    user?: UserUpdateOneRequiredWithoutPedidosNestedInput
  }

  export type PedidoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    regID?: NullableIntFieldUpdateOperationsInput | number | null
    tipo?: EnumTipoPedidoFieldUpdateOperationsInput | $Enums.TipoPedido
    valor_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumTipoStatusPedidoFieldUpdateOperationsInput | $Enums.TipoStatusPedido
    userID?: IntFieldUpdateOperationsInput | number
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado?: DateTimeFieldUpdateOperationsInput | Date | string
    items?: ItemPedidoUncheckedUpdateManyWithoutPedidoNestedInput
    pagamentos?: PagamentoUncheckedUpdateManyWithoutPedidoNestedInput
  }

  export type PedidoCreateManyInput = {
    id?: number
    regID?: number | null
    tipo: $Enums.TipoPedido
    valor_total?: Decimal | DecimalJsLike | number | string
    status: $Enums.TipoStatusPedido
    userID: number
    criado_em?: Date | string
    atualizado?: Date | string
  }

  export type PedidoUpdateManyMutationInput = {
    tipo?: EnumTipoPedidoFieldUpdateOperationsInput | $Enums.TipoPedido
    valor_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumTipoStatusPedidoFieldUpdateOperationsInput | $Enums.TipoStatusPedido
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PedidoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    regID?: NullableIntFieldUpdateOperationsInput | number | null
    tipo?: EnumTipoPedidoFieldUpdateOperationsInput | $Enums.TipoPedido
    valor_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumTipoStatusPedidoFieldUpdateOperationsInput | $Enums.TipoStatusPedido
    userID?: IntFieldUpdateOperationsInput | number
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PagamentoCreateInput = {
    valor: Decimal | DecimalJsLike | number | string
    forma: $Enums.FormaPagamento
    data?: Date | string
    pedido: PedidoCreateNestedOneWithoutPagamentosInput
  }

  export type PagamentoUncheckedCreateInput = {
    id?: number
    pedidoID: number
    valor: Decimal | DecimalJsLike | number | string
    forma: $Enums.FormaPagamento
    data?: Date | string
  }

  export type PagamentoUpdateInput = {
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    forma?: EnumFormaPagamentoFieldUpdateOperationsInput | $Enums.FormaPagamento
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    pedido?: PedidoUpdateOneRequiredWithoutPagamentosNestedInput
  }

  export type PagamentoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    pedidoID?: IntFieldUpdateOperationsInput | number
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    forma?: EnumFormaPagamentoFieldUpdateOperationsInput | $Enums.FormaPagamento
    data?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PagamentoCreateManyInput = {
    id?: number
    pedidoID: number
    valor: Decimal | DecimalJsLike | number | string
    forma: $Enums.FormaPagamento
    data?: Date | string
  }

  export type PagamentoUpdateManyMutationInput = {
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    forma?: EnumFormaPagamentoFieldUpdateOperationsInput | $Enums.FormaPagamento
    data?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PagamentoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    pedidoID?: IntFieldUpdateOperationsInput | number
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    forma?: EnumFormaPagamentoFieldUpdateOperationsInput | $Enums.FormaPagamento
    data?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ContaCreateInput = {
    nome: string
    saldo: Decimal | DecimalJsLike | number | string
    movimentacoes?: MovimentacaoFinanceiraCreateNestedManyWithoutContaInput
  }

  export type ContaUncheckedCreateInput = {
    id?: number
    nome: string
    saldo: Decimal | DecimalJsLike | number | string
    movimentacoes?: MovimentacaoFinanceiraUncheckedCreateNestedManyWithoutContaInput
  }

  export type ContaUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    saldo?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    movimentacoes?: MovimentacaoFinanceiraUpdateManyWithoutContaNestedInput
  }

  export type ContaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    saldo?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    movimentacoes?: MovimentacaoFinanceiraUncheckedUpdateManyWithoutContaNestedInput
  }

  export type ContaCreateManyInput = {
    id?: number
    nome: string
    saldo: Decimal | DecimalJsLike | number | string
  }

  export type ContaUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    saldo?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type ContaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    saldo?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type MovimentacaoFinanceiraCreateInput = {
    tipoMovimentacao: $Enums.TipoMovimentacao
    valor: Decimal | DecimalJsLike | number | string
    descricao?: string | null
    data?: Date | string
    origem: $Enums.TipoOrigem
    origemID?: number | null
    conta: ContaCreateNestedOneWithoutMovimentacoesInput
    caixa: LivroCaixaCreateNestedOneWithoutMovimentacoesInput
  }

  export type MovimentacaoFinanceiraUncheckedCreateInput = {
    id?: number
    contaID: number
    tipoMovimentacao: $Enums.TipoMovimentacao
    valor: Decimal | DecimalJsLike | number | string
    descricao?: string | null
    data?: Date | string
    origem: $Enums.TipoOrigem
    origemID?: number | null
    caixaID: number
  }

  export type MovimentacaoFinanceiraUpdateInput = {
    tipoMovimentacao?: EnumTipoMovimentacaoFieldUpdateOperationsInput | $Enums.TipoMovimentacao
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    origem?: EnumTipoOrigemFieldUpdateOperationsInput | $Enums.TipoOrigem
    origemID?: NullableIntFieldUpdateOperationsInput | number | null
    conta?: ContaUpdateOneRequiredWithoutMovimentacoesNestedInput
    caixa?: LivroCaixaUpdateOneRequiredWithoutMovimentacoesNestedInput
  }

  export type MovimentacaoFinanceiraUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    contaID?: IntFieldUpdateOperationsInput | number
    tipoMovimentacao?: EnumTipoMovimentacaoFieldUpdateOperationsInput | $Enums.TipoMovimentacao
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    origem?: EnumTipoOrigemFieldUpdateOperationsInput | $Enums.TipoOrigem
    origemID?: NullableIntFieldUpdateOperationsInput | number | null
    caixaID?: IntFieldUpdateOperationsInput | number
  }

  export type MovimentacaoFinanceiraCreateManyInput = {
    id?: number
    contaID: number
    tipoMovimentacao: $Enums.TipoMovimentacao
    valor: Decimal | DecimalJsLike | number | string
    descricao?: string | null
    data?: Date | string
    origem: $Enums.TipoOrigem
    origemID?: number | null
    caixaID: number
  }

  export type MovimentacaoFinanceiraUpdateManyMutationInput = {
    tipoMovimentacao?: EnumTipoMovimentacaoFieldUpdateOperationsInput | $Enums.TipoMovimentacao
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    origem?: EnumTipoOrigemFieldUpdateOperationsInput | $Enums.TipoOrigem
    origemID?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type MovimentacaoFinanceiraUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    contaID?: IntFieldUpdateOperationsInput | number
    tipoMovimentacao?: EnumTipoMovimentacaoFieldUpdateOperationsInput | $Enums.TipoMovimentacao
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    origem?: EnumTipoOrigemFieldUpdateOperationsInput | $Enums.TipoOrigem
    origemID?: NullableIntFieldUpdateOperationsInput | number | null
    caixaID?: IntFieldUpdateOperationsInput | number
  }

  export type MovimentacaoEstoqueCreateInput = {
    tipo: $Enums.TipoMovimentacaoEstoque
    quantidade: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    origemID?: number | null
    origemTipo: $Enums.OrigemMovimentacaoEstoque
    conversaoEstoque?: ConversaoEstoqueCreateNestedOneWithoutMovimentacoesInput
    material: MaterialCreateNestedOneWithoutMovimentacoesInput
  }

  export type MovimentacaoEstoqueUncheckedCreateInput = {
    id?: number
    materialID: number
    tipo: $Enums.TipoMovimentacaoEstoque
    quantidade: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    origemID?: number | null
    origemTipo: $Enums.OrigemMovimentacaoEstoque
    conversaoEstoqueId?: number | null
  }

  export type MovimentacaoEstoqueUpdateInput = {
    tipo?: EnumTipoMovimentacaoEstoqueFieldUpdateOperationsInput | $Enums.TipoMovimentacaoEstoque
    quantidade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    origemID?: NullableIntFieldUpdateOperationsInput | number | null
    origemTipo?: EnumOrigemMovimentacaoEstoqueFieldUpdateOperationsInput | $Enums.OrigemMovimentacaoEstoque
    conversaoEstoque?: ConversaoEstoqueUpdateOneWithoutMovimentacoesNestedInput
    material?: MaterialUpdateOneRequiredWithoutMovimentacoesNestedInput
  }

  export type MovimentacaoEstoqueUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    materialID?: IntFieldUpdateOperationsInput | number
    tipo?: EnumTipoMovimentacaoEstoqueFieldUpdateOperationsInput | $Enums.TipoMovimentacaoEstoque
    quantidade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    origemID?: NullableIntFieldUpdateOperationsInput | number | null
    origemTipo?: EnumOrigemMovimentacaoEstoqueFieldUpdateOperationsInput | $Enums.OrigemMovimentacaoEstoque
    conversaoEstoqueId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type MovimentacaoEstoqueCreateManyInput = {
    id?: number
    materialID: number
    tipo: $Enums.TipoMovimentacaoEstoque
    quantidade: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    origemID?: number | null
    origemTipo: $Enums.OrigemMovimentacaoEstoque
    conversaoEstoqueId?: number | null
  }

  export type MovimentacaoEstoqueUpdateManyMutationInput = {
    tipo?: EnumTipoMovimentacaoEstoqueFieldUpdateOperationsInput | $Enums.TipoMovimentacaoEstoque
    quantidade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    origemID?: NullableIntFieldUpdateOperationsInput | number | null
    origemTipo?: EnumOrigemMovimentacaoEstoqueFieldUpdateOperationsInput | $Enums.OrigemMovimentacaoEstoque
  }

  export type MovimentacaoEstoqueUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    materialID?: IntFieldUpdateOperationsInput | number
    tipo?: EnumTipoMovimentacaoEstoqueFieldUpdateOperationsInput | $Enums.TipoMovimentacaoEstoque
    quantidade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    origemID?: NullableIntFieldUpdateOperationsInput | number | null
    origemTipo?: EnumOrigemMovimentacaoEstoqueFieldUpdateOperationsInput | $Enums.OrigemMovimentacaoEstoque
    conversaoEstoqueId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ConversaoEstoqueCreateInput = {
    mat_origemID: number
    mat_destinoID: number
    quantidade: Decimal | DecimalJsLike | number | string
    descricao?: string | null
    createdAt?: Date | string
    movimentacoes?: MovimentacaoEstoqueCreateNestedManyWithoutConversaoEstoqueInput
  }

  export type ConversaoEstoqueUncheckedCreateInput = {
    id?: number
    mat_origemID: number
    mat_destinoID: number
    quantidade: Decimal | DecimalJsLike | number | string
    descricao?: string | null
    createdAt?: Date | string
    movimentacoes?: MovimentacaoEstoqueUncheckedCreateNestedManyWithoutConversaoEstoqueInput
  }

  export type ConversaoEstoqueUpdateInput = {
    mat_origemID?: IntFieldUpdateOperationsInput | number
    mat_destinoID?: IntFieldUpdateOperationsInput | number
    quantidade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    movimentacoes?: MovimentacaoEstoqueUpdateManyWithoutConversaoEstoqueNestedInput
  }

  export type ConversaoEstoqueUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    mat_origemID?: IntFieldUpdateOperationsInput | number
    mat_destinoID?: IntFieldUpdateOperationsInput | number
    quantidade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    movimentacoes?: MovimentacaoEstoqueUncheckedUpdateManyWithoutConversaoEstoqueNestedInput
  }

  export type ConversaoEstoqueCreateManyInput = {
    id?: number
    mat_origemID: number
    mat_destinoID: number
    quantidade: Decimal | DecimalJsLike | number | string
    descricao?: string | null
    createdAt?: Date | string
  }

  export type ConversaoEstoqueUpdateManyMutationInput = {
    mat_origemID?: IntFieldUpdateOperationsInput | number
    mat_destinoID?: IntFieldUpdateOperationsInput | number
    quantidade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConversaoEstoqueUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    mat_origemID?: IntFieldUpdateOperationsInput | number
    mat_destinoID?: IntFieldUpdateOperationsInput | number
    quantidade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LivroCaixaCreateInput = {
    dataAbertura?: Date | string
    dataFechamento?: Date | string | null
    saldoInicial: Decimal | DecimalJsLike | number | string
    saldoFinal?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.StatusCaixa
    usuario: UserCreateNestedOneWithoutCaixasInput
    movimentacoes?: MovimentacaoFinanceiraCreateNestedManyWithoutCaixaInput
  }

  export type LivroCaixaUncheckedCreateInput = {
    id?: number
    dataAbertura?: Date | string
    dataFechamento?: Date | string | null
    saldoInicial: Decimal | DecimalJsLike | number | string
    saldoFinal?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.StatusCaixa
    usuarioID: number
    movimentacoes?: MovimentacaoFinanceiraUncheckedCreateNestedManyWithoutCaixaInput
  }

  export type LivroCaixaUpdateInput = {
    dataAbertura?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFechamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saldoInicial?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    saldoFinal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumStatusCaixaFieldUpdateOperationsInput | $Enums.StatusCaixa
    usuario?: UserUpdateOneRequiredWithoutCaixasNestedInput
    movimentacoes?: MovimentacaoFinanceiraUpdateManyWithoutCaixaNestedInput
  }

  export type LivroCaixaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    dataAbertura?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFechamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saldoInicial?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    saldoFinal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumStatusCaixaFieldUpdateOperationsInput | $Enums.StatusCaixa
    usuarioID?: IntFieldUpdateOperationsInput | number
    movimentacoes?: MovimentacaoFinanceiraUncheckedUpdateManyWithoutCaixaNestedInput
  }

  export type LivroCaixaCreateManyInput = {
    id?: number
    dataAbertura?: Date | string
    dataFechamento?: Date | string | null
    saldoInicial: Decimal | DecimalJsLike | number | string
    saldoFinal?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.StatusCaixa
    usuarioID: number
  }

  export type LivroCaixaUpdateManyMutationInput = {
    dataAbertura?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFechamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saldoInicial?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    saldoFinal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumStatusCaixaFieldUpdateOperationsInput | $Enums.StatusCaixa
  }

  export type LivroCaixaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    dataAbertura?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFechamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saldoInicial?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    saldoFinal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumStatusCaixaFieldUpdateOperationsInput | $Enums.StatusCaixa
    usuarioID?: IntFieldUpdateOperationsInput | number
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type PedidoListRelationFilter = {
    every?: PedidoWhereInput
    some?: PedidoWhereInput
    none?: PedidoWhereInput
  }

  export type CargoScalarRelationFilter = {
    is?: CargoWhereInput
    isNot?: CargoWhereInput
  }

  export type PermissoesListRelationFilter = {
    every?: PermissoesWhereInput
    some?: PermissoesWhereInput
    none?: PermissoesWhereInput
  }

  export type LivroCaixaListRelationFilter = {
    every?: LivroCaixaWhereInput
    some?: LivroCaixaWhereInput
    none?: LivroCaixaWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type PedidoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PermissoesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type LivroCaixaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    telefone?: SortOrder
    cargoID?: SortOrder
    deletedAt?: SortOrder
  }

  export type UserAvgOrderByAggregateInput = {
    id?: SortOrder
    cargoID?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    telefone?: SortOrder
    cargoID?: SortOrder
    deletedAt?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    telefone?: SortOrder
    cargoID?: SortOrder
    deletedAt?: SortOrder
  }

  export type UserSumOrderByAggregateInput = {
    id?: SortOrder
    cargoID?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type UserListRelationFilter = {
    every?: UserWhereInput
    some?: UserWhereInput
    none?: UserWhereInput
  }

  export type UserOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PermissoesCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
  }

  export type PermissoesAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type PermissoesMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
  }

  export type PermissoesMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
  }

  export type PermissoesSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type CargoCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
  }

  export type CargoAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type CargoMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
  }

  export type CargoMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
  }

  export type CargoSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EnumTipoRegistroFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoRegistro | EnumTipoRegistroFieldRefInput<$PrismaModel>
    in?: $Enums.TipoRegistro[] | ListEnumTipoRegistroFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoRegistro[] | ListEnumTipoRegistroFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoRegistroFilter<$PrismaModel> | $Enums.TipoRegistro
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type DadosPagamentoNullableScalarRelationFilter = {
    is?: DadosPagamentoWhereInput | null
    isNot?: DadosPagamentoWhereInput | null
  }

  export type EnderecoNullableScalarRelationFilter = {
    is?: EnderecoWhereInput | null
    isNot?: EnderecoWhereInput | null
  }

  export type PessoaFisicaNullableScalarRelationFilter = {
    is?: PessoaFisicaWhereInput | null
    isNot?: PessoaFisicaWhereInput | null
  }

  export type PessoaJuridicaNullableScalarRelationFilter = {
    is?: PessoaJuridicaWhereInput | null
    isNot?: PessoaJuridicaWhereInput | null
  }

  export type TabelaScalarRelationFilter = {
    is?: TabelaWhereInput
    isNot?: TabelaWhereInput
  }

  export type SaldoFinanceiroNullableScalarRelationFilter = {
    is?: SaldoFinanceiroWhereInput | null
    isNot?: SaldoFinanceiroWhereInput | null
  }

  export type RegistroCountOrderByAggregateInput = {
    id?: SortOrder
    nome_razao?: SortOrder
    apelido?: SortOrder
    tipo?: SortOrder
    tabelaID?: SortOrder
    email?: SortOrder
    telefone?: SortOrder
    criadoEm?: SortOrder
  }

  export type RegistroAvgOrderByAggregateInput = {
    id?: SortOrder
    tabelaID?: SortOrder
  }

  export type RegistroMaxOrderByAggregateInput = {
    id?: SortOrder
    nome_razao?: SortOrder
    apelido?: SortOrder
    tipo?: SortOrder
    tabelaID?: SortOrder
    email?: SortOrder
    telefone?: SortOrder
    criadoEm?: SortOrder
  }

  export type RegistroMinOrderByAggregateInput = {
    id?: SortOrder
    nome_razao?: SortOrder
    apelido?: SortOrder
    tipo?: SortOrder
    tabelaID?: SortOrder
    email?: SortOrder
    telefone?: SortOrder
    criadoEm?: SortOrder
  }

  export type RegistroSumOrderByAggregateInput = {
    id?: SortOrder
    tabelaID?: SortOrder
  }

  export type EnumTipoRegistroWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoRegistro | EnumTipoRegistroFieldRefInput<$PrismaModel>
    in?: $Enums.TipoRegistro[] | ListEnumTipoRegistroFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoRegistro[] | ListEnumTipoRegistroFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoRegistroWithAggregatesFilter<$PrismaModel> | $Enums.TipoRegistro
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoRegistroFilter<$PrismaModel>
    _max?: NestedEnumTipoRegistroFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type RegistroScalarRelationFilter = {
    is?: RegistroWhereInput
    isNot?: RegistroWhereInput
  }

  export type PessoaFisicaCountOrderByAggregateInput = {
    id?: SortOrder
    cpf?: SortOrder
    nascimento?: SortOrder
  }

  export type PessoaFisicaAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type PessoaFisicaMaxOrderByAggregateInput = {
    id?: SortOrder
    cpf?: SortOrder
    nascimento?: SortOrder
  }

  export type PessoaFisicaMinOrderByAggregateInput = {
    id?: SortOrder
    cpf?: SortOrder
    nascimento?: SortOrder
  }

  export type PessoaFisicaSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type PessoaJuridicaCountOrderByAggregateInput = {
    id?: SortOrder
    cnpj?: SortOrder
    ie?: SortOrder
    fantasia?: SortOrder
  }

  export type PessoaJuridicaAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type PessoaJuridicaMaxOrderByAggregateInput = {
    id?: SortOrder
    cnpj?: SortOrder
    ie?: SortOrder
    fantasia?: SortOrder
  }

  export type PessoaJuridicaMinOrderByAggregateInput = {
    id?: SortOrder
    cnpj?: SortOrder
    ie?: SortOrder
    fantasia?: SortOrder
  }

  export type PessoaJuridicaSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type SaldoFinanceiroCountOrderByAggregateInput = {
    id?: SortOrder
    regID?: SortOrder
    saldo?: SortOrder
  }

  export type SaldoFinanceiroAvgOrderByAggregateInput = {
    id?: SortOrder
    regID?: SortOrder
    saldo?: SortOrder
  }

  export type SaldoFinanceiroMaxOrderByAggregateInput = {
    id?: SortOrder
    regID?: SortOrder
    saldo?: SortOrder
  }

  export type SaldoFinanceiroMinOrderByAggregateInput = {
    id?: SortOrder
    regID?: SortOrder
    saldo?: SortOrder
  }

  export type SaldoFinanceiroSumOrderByAggregateInput = {
    id?: SortOrder
    regID?: SortOrder
    saldo?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type EnderecoCountOrderByAggregateInput = {
    id?: SortOrder
    regID?: SortOrder
    estado?: SortOrder
    cidade?: SortOrder
    bairro?: SortOrder
    logradouro?: SortOrder
    numero?: SortOrder
    complemento?: SortOrder
  }

  export type EnderecoAvgOrderByAggregateInput = {
    id?: SortOrder
    regID?: SortOrder
  }

  export type EnderecoMaxOrderByAggregateInput = {
    id?: SortOrder
    regID?: SortOrder
    estado?: SortOrder
    cidade?: SortOrder
    bairro?: SortOrder
    logradouro?: SortOrder
    numero?: SortOrder
    complemento?: SortOrder
  }

  export type EnderecoMinOrderByAggregateInput = {
    id?: SortOrder
    regID?: SortOrder
    estado?: SortOrder
    cidade?: SortOrder
    bairro?: SortOrder
    logradouro?: SortOrder
    numero?: SortOrder
    complemento?: SortOrder
  }

  export type EnderecoSumOrderByAggregateInput = {
    id?: SortOrder
    regID?: SortOrder
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type DadosPagamentoCountOrderByAggregateInput = {
    id?: SortOrder
    banco?: SortOrder
    agencia?: SortOrder
    conta?: SortOrder
    chave?: SortOrder
    cpf?: SortOrder
    regID?: SortOrder
  }

  export type DadosPagamentoAvgOrderByAggregateInput = {
    id?: SortOrder
    agencia?: SortOrder
    conta?: SortOrder
    regID?: SortOrder
  }

  export type DadosPagamentoMaxOrderByAggregateInput = {
    id?: SortOrder
    banco?: SortOrder
    agencia?: SortOrder
    conta?: SortOrder
    chave?: SortOrder
    cpf?: SortOrder
    regID?: SortOrder
  }

  export type DadosPagamentoMinOrderByAggregateInput = {
    id?: SortOrder
    banco?: SortOrder
    agencia?: SortOrder
    conta?: SortOrder
    chave?: SortOrder
    cpf?: SortOrder
    regID?: SortOrder
  }

  export type DadosPagamentoSumOrderByAggregateInput = {
    id?: SortOrder
    agencia?: SortOrder
    conta?: SortOrder
    regID?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type PrecoPorTabelaListRelationFilter = {
    every?: PrecoPorTabelaWhereInput
    some?: PrecoPorTabelaWhereInput
    none?: PrecoPorTabelaWhereInput
  }

  export type RegistroListRelationFilter = {
    every?: RegistroWhereInput
    some?: RegistroWhereInput
    none?: RegistroWhereInput
  }

  export type PrecoPorTabelaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RegistroOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TabelaCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    updatedAt?: SortOrder
  }

  export type TabelaAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type TabelaMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    updatedAt?: SortOrder
  }

  export type TabelaMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    updatedAt?: SortOrder
  }

  export type TabelaSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type MaterialScalarRelationFilter = {
    is?: MaterialWhereInput
    isNot?: MaterialWhereInput
  }

  export type PrecoPorTabelaCountOrderByAggregateInput = {
    id?: SortOrder
    v_compra?: SortOrder
    materialID?: SortOrder
    tabelaID?: SortOrder
    editadoEm?: SortOrder
  }

  export type PrecoPorTabelaAvgOrderByAggregateInput = {
    id?: SortOrder
    v_compra?: SortOrder
    materialID?: SortOrder
    tabelaID?: SortOrder
  }

  export type PrecoPorTabelaMaxOrderByAggregateInput = {
    id?: SortOrder
    v_compra?: SortOrder
    materialID?: SortOrder
    tabelaID?: SortOrder
    editadoEm?: SortOrder
  }

  export type PrecoPorTabelaMinOrderByAggregateInput = {
    id?: SortOrder
    v_compra?: SortOrder
    materialID?: SortOrder
    tabelaID?: SortOrder
    editadoEm?: SortOrder
  }

  export type PrecoPorTabelaSumOrderByAggregateInput = {
    id?: SortOrder
    v_compra?: SortOrder
    materialID?: SortOrder
    tabelaID?: SortOrder
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type ItemPedidoListRelationFilter = {
    every?: ItemPedidoWhereInput
    some?: ItemPedidoWhereInput
    none?: ItemPedidoWhereInput
  }

  export type CategoriaMaterialScalarRelationFilter = {
    is?: CategoriaMaterialWhereInput
    isNot?: CategoriaMaterialWhereInput
  }

  export type MovimentacaoEstoqueListRelationFilter = {
    every?: MovimentacaoEstoqueWhereInput
    some?: MovimentacaoEstoqueWhereInput
    none?: MovimentacaoEstoqueWhereInput
  }

  export type ItemPedidoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MovimentacaoEstoqueOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MaterialCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    catID?: SortOrder
    v_venda?: SortOrder
    estoque?: SortOrder
    criado_em?: SortOrder
    editado_em?: SortOrder
    status?: SortOrder
  }

  export type MaterialAvgOrderByAggregateInput = {
    id?: SortOrder
    catID?: SortOrder
    v_venda?: SortOrder
    estoque?: SortOrder
  }

  export type MaterialMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    catID?: SortOrder
    v_venda?: SortOrder
    estoque?: SortOrder
    criado_em?: SortOrder
    editado_em?: SortOrder
    status?: SortOrder
  }

  export type MaterialMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    catID?: SortOrder
    v_venda?: SortOrder
    estoque?: SortOrder
    criado_em?: SortOrder
    editado_em?: SortOrder
    status?: SortOrder
  }

  export type MaterialSumOrderByAggregateInput = {
    id?: SortOrder
    catID?: SortOrder
    v_venda?: SortOrder
    estoque?: SortOrder
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type MaterialListRelationFilter = {
    every?: MaterialWhereInput
    some?: MaterialWhereInput
    none?: MaterialWhereInput
  }

  export type MaterialOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CategoriaMaterialCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type CategoriaMaterialAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type CategoriaMaterialMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type CategoriaMaterialMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type CategoriaMaterialSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type PedidoScalarRelationFilter = {
    is?: PedidoWhereInput
    isNot?: PedidoWhereInput
  }

  export type ItemPedidoCountOrderByAggregateInput = {
    id?: SortOrder
    pedidoID?: SortOrder
    materialID?: SortOrder
    preco?: SortOrder
    quantidade?: SortOrder
    tara?: SortOrder
    impureza?: SortOrder
  }

  export type ItemPedidoAvgOrderByAggregateInput = {
    id?: SortOrder
    pedidoID?: SortOrder
    materialID?: SortOrder
    preco?: SortOrder
    quantidade?: SortOrder
    tara?: SortOrder
    impureza?: SortOrder
  }

  export type ItemPedidoMaxOrderByAggregateInput = {
    id?: SortOrder
    pedidoID?: SortOrder
    materialID?: SortOrder
    preco?: SortOrder
    quantidade?: SortOrder
    tara?: SortOrder
    impureza?: SortOrder
  }

  export type ItemPedidoMinOrderByAggregateInput = {
    id?: SortOrder
    pedidoID?: SortOrder
    materialID?: SortOrder
    preco?: SortOrder
    quantidade?: SortOrder
    tara?: SortOrder
    impureza?: SortOrder
  }

  export type ItemPedidoSumOrderByAggregateInput = {
    id?: SortOrder
    pedidoID?: SortOrder
    materialID?: SortOrder
    preco?: SortOrder
    quantidade?: SortOrder
    tara?: SortOrder
    impureza?: SortOrder
  }

  export type EnumTipoPedidoFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoPedido | EnumTipoPedidoFieldRefInput<$PrismaModel>
    in?: $Enums.TipoPedido[] | ListEnumTipoPedidoFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoPedido[] | ListEnumTipoPedidoFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoPedidoFilter<$PrismaModel> | $Enums.TipoPedido
  }

  export type EnumTipoStatusPedidoFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoStatusPedido | EnumTipoStatusPedidoFieldRefInput<$PrismaModel>
    in?: $Enums.TipoStatusPedido[] | ListEnumTipoStatusPedidoFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoStatusPedido[] | ListEnumTipoStatusPedidoFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoStatusPedidoFilter<$PrismaModel> | $Enums.TipoStatusPedido
  }

  export type PagamentoListRelationFilter = {
    every?: PagamentoWhereInput
    some?: PagamentoWhereInput
    none?: PagamentoWhereInput
  }

  export type RegistroNullableScalarRelationFilter = {
    is?: RegistroWhereInput | null
    isNot?: RegistroWhereInput | null
  }

  export type UserScalarRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type PagamentoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PedidoCountOrderByAggregateInput = {
    id?: SortOrder
    regID?: SortOrder
    tipo?: SortOrder
    valor_total?: SortOrder
    status?: SortOrder
    userID?: SortOrder
    criado_em?: SortOrder
    atualizado?: SortOrder
  }

  export type PedidoAvgOrderByAggregateInput = {
    id?: SortOrder
    regID?: SortOrder
    valor_total?: SortOrder
    userID?: SortOrder
  }

  export type PedidoMaxOrderByAggregateInput = {
    id?: SortOrder
    regID?: SortOrder
    tipo?: SortOrder
    valor_total?: SortOrder
    status?: SortOrder
    userID?: SortOrder
    criado_em?: SortOrder
    atualizado?: SortOrder
  }

  export type PedidoMinOrderByAggregateInput = {
    id?: SortOrder
    regID?: SortOrder
    tipo?: SortOrder
    valor_total?: SortOrder
    status?: SortOrder
    userID?: SortOrder
    criado_em?: SortOrder
    atualizado?: SortOrder
  }

  export type PedidoSumOrderByAggregateInput = {
    id?: SortOrder
    regID?: SortOrder
    valor_total?: SortOrder
    userID?: SortOrder
  }

  export type EnumTipoPedidoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoPedido | EnumTipoPedidoFieldRefInput<$PrismaModel>
    in?: $Enums.TipoPedido[] | ListEnumTipoPedidoFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoPedido[] | ListEnumTipoPedidoFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoPedidoWithAggregatesFilter<$PrismaModel> | $Enums.TipoPedido
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoPedidoFilter<$PrismaModel>
    _max?: NestedEnumTipoPedidoFilter<$PrismaModel>
  }

  export type EnumTipoStatusPedidoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoStatusPedido | EnumTipoStatusPedidoFieldRefInput<$PrismaModel>
    in?: $Enums.TipoStatusPedido[] | ListEnumTipoStatusPedidoFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoStatusPedido[] | ListEnumTipoStatusPedidoFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoStatusPedidoWithAggregatesFilter<$PrismaModel> | $Enums.TipoStatusPedido
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoStatusPedidoFilter<$PrismaModel>
    _max?: NestedEnumTipoStatusPedidoFilter<$PrismaModel>
  }

  export type EnumFormaPagamentoFilter<$PrismaModel = never> = {
    equals?: $Enums.FormaPagamento | EnumFormaPagamentoFieldRefInput<$PrismaModel>
    in?: $Enums.FormaPagamento[] | ListEnumFormaPagamentoFieldRefInput<$PrismaModel>
    notIn?: $Enums.FormaPagamento[] | ListEnumFormaPagamentoFieldRefInput<$PrismaModel>
    not?: NestedEnumFormaPagamentoFilter<$PrismaModel> | $Enums.FormaPagamento
  }

  export type PagamentoCountOrderByAggregateInput = {
    id?: SortOrder
    pedidoID?: SortOrder
    valor?: SortOrder
    forma?: SortOrder
    data?: SortOrder
  }

  export type PagamentoAvgOrderByAggregateInput = {
    id?: SortOrder
    pedidoID?: SortOrder
    valor?: SortOrder
  }

  export type PagamentoMaxOrderByAggregateInput = {
    id?: SortOrder
    pedidoID?: SortOrder
    valor?: SortOrder
    forma?: SortOrder
    data?: SortOrder
  }

  export type PagamentoMinOrderByAggregateInput = {
    id?: SortOrder
    pedidoID?: SortOrder
    valor?: SortOrder
    forma?: SortOrder
    data?: SortOrder
  }

  export type PagamentoSumOrderByAggregateInput = {
    id?: SortOrder
    pedidoID?: SortOrder
    valor?: SortOrder
  }

  export type EnumFormaPagamentoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.FormaPagamento | EnumFormaPagamentoFieldRefInput<$PrismaModel>
    in?: $Enums.FormaPagamento[] | ListEnumFormaPagamentoFieldRefInput<$PrismaModel>
    notIn?: $Enums.FormaPagamento[] | ListEnumFormaPagamentoFieldRefInput<$PrismaModel>
    not?: NestedEnumFormaPagamentoWithAggregatesFilter<$PrismaModel> | $Enums.FormaPagamento
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumFormaPagamentoFilter<$PrismaModel>
    _max?: NestedEnumFormaPagamentoFilter<$PrismaModel>
  }

  export type MovimentacaoFinanceiraListRelationFilter = {
    every?: MovimentacaoFinanceiraWhereInput
    some?: MovimentacaoFinanceiraWhereInput
    none?: MovimentacaoFinanceiraWhereInput
  }

  export type MovimentacaoFinanceiraOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ContaCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    saldo?: SortOrder
  }

  export type ContaAvgOrderByAggregateInput = {
    id?: SortOrder
    saldo?: SortOrder
  }

  export type ContaMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    saldo?: SortOrder
  }

  export type ContaMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    saldo?: SortOrder
  }

  export type ContaSumOrderByAggregateInput = {
    id?: SortOrder
    saldo?: SortOrder
  }

  export type EnumTipoMovimentacaoFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoMovimentacao | EnumTipoMovimentacaoFieldRefInput<$PrismaModel>
    in?: $Enums.TipoMovimentacao[] | ListEnumTipoMovimentacaoFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoMovimentacao[] | ListEnumTipoMovimentacaoFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoMovimentacaoFilter<$PrismaModel> | $Enums.TipoMovimentacao
  }

  export type EnumTipoOrigemFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoOrigem | EnumTipoOrigemFieldRefInput<$PrismaModel>
    in?: $Enums.TipoOrigem[] | ListEnumTipoOrigemFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoOrigem[] | ListEnumTipoOrigemFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoOrigemFilter<$PrismaModel> | $Enums.TipoOrigem
  }

  export type ContaScalarRelationFilter = {
    is?: ContaWhereInput
    isNot?: ContaWhereInput
  }

  export type LivroCaixaScalarRelationFilter = {
    is?: LivroCaixaWhereInput
    isNot?: LivroCaixaWhereInput
  }

  export type MovimentacaoFinanceiraCountOrderByAggregateInput = {
    id?: SortOrder
    contaID?: SortOrder
    tipoMovimentacao?: SortOrder
    valor?: SortOrder
    descricao?: SortOrder
    data?: SortOrder
    origem?: SortOrder
    origemID?: SortOrder
    caixaID?: SortOrder
  }

  export type MovimentacaoFinanceiraAvgOrderByAggregateInput = {
    id?: SortOrder
    contaID?: SortOrder
    valor?: SortOrder
    origemID?: SortOrder
    caixaID?: SortOrder
  }

  export type MovimentacaoFinanceiraMaxOrderByAggregateInput = {
    id?: SortOrder
    contaID?: SortOrder
    tipoMovimentacao?: SortOrder
    valor?: SortOrder
    descricao?: SortOrder
    data?: SortOrder
    origem?: SortOrder
    origemID?: SortOrder
    caixaID?: SortOrder
  }

  export type MovimentacaoFinanceiraMinOrderByAggregateInput = {
    id?: SortOrder
    contaID?: SortOrder
    tipoMovimentacao?: SortOrder
    valor?: SortOrder
    descricao?: SortOrder
    data?: SortOrder
    origem?: SortOrder
    origemID?: SortOrder
    caixaID?: SortOrder
  }

  export type MovimentacaoFinanceiraSumOrderByAggregateInput = {
    id?: SortOrder
    contaID?: SortOrder
    valor?: SortOrder
    origemID?: SortOrder
    caixaID?: SortOrder
  }

  export type EnumTipoMovimentacaoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoMovimentacao | EnumTipoMovimentacaoFieldRefInput<$PrismaModel>
    in?: $Enums.TipoMovimentacao[] | ListEnumTipoMovimentacaoFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoMovimentacao[] | ListEnumTipoMovimentacaoFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoMovimentacaoWithAggregatesFilter<$PrismaModel> | $Enums.TipoMovimentacao
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoMovimentacaoFilter<$PrismaModel>
    _max?: NestedEnumTipoMovimentacaoFilter<$PrismaModel>
  }

  export type EnumTipoOrigemWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoOrigem | EnumTipoOrigemFieldRefInput<$PrismaModel>
    in?: $Enums.TipoOrigem[] | ListEnumTipoOrigemFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoOrigem[] | ListEnumTipoOrigemFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoOrigemWithAggregatesFilter<$PrismaModel> | $Enums.TipoOrigem
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoOrigemFilter<$PrismaModel>
    _max?: NestedEnumTipoOrigemFilter<$PrismaModel>
  }

  export type EnumTipoMovimentacaoEstoqueFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoMovimentacaoEstoque | EnumTipoMovimentacaoEstoqueFieldRefInput<$PrismaModel>
    in?: $Enums.TipoMovimentacaoEstoque[] | ListEnumTipoMovimentacaoEstoqueFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoMovimentacaoEstoque[] | ListEnumTipoMovimentacaoEstoqueFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoMovimentacaoEstoqueFilter<$PrismaModel> | $Enums.TipoMovimentacaoEstoque
  }

  export type EnumOrigemMovimentacaoEstoqueFilter<$PrismaModel = never> = {
    equals?: $Enums.OrigemMovimentacaoEstoque | EnumOrigemMovimentacaoEstoqueFieldRefInput<$PrismaModel>
    in?: $Enums.OrigemMovimentacaoEstoque[] | ListEnumOrigemMovimentacaoEstoqueFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrigemMovimentacaoEstoque[] | ListEnumOrigemMovimentacaoEstoqueFieldRefInput<$PrismaModel>
    not?: NestedEnumOrigemMovimentacaoEstoqueFilter<$PrismaModel> | $Enums.OrigemMovimentacaoEstoque
  }

  export type ConversaoEstoqueNullableScalarRelationFilter = {
    is?: ConversaoEstoqueWhereInput | null
    isNot?: ConversaoEstoqueWhereInput | null
  }

  export type MovimentacaoEstoqueCountOrderByAggregateInput = {
    id?: SortOrder
    materialID?: SortOrder
    tipo?: SortOrder
    quantidade?: SortOrder
    createdAt?: SortOrder
    origemID?: SortOrder
    origemTipo?: SortOrder
    conversaoEstoqueId?: SortOrder
  }

  export type MovimentacaoEstoqueAvgOrderByAggregateInput = {
    id?: SortOrder
    materialID?: SortOrder
    quantidade?: SortOrder
    origemID?: SortOrder
    conversaoEstoqueId?: SortOrder
  }

  export type MovimentacaoEstoqueMaxOrderByAggregateInput = {
    id?: SortOrder
    materialID?: SortOrder
    tipo?: SortOrder
    quantidade?: SortOrder
    createdAt?: SortOrder
    origemID?: SortOrder
    origemTipo?: SortOrder
    conversaoEstoqueId?: SortOrder
  }

  export type MovimentacaoEstoqueMinOrderByAggregateInput = {
    id?: SortOrder
    materialID?: SortOrder
    tipo?: SortOrder
    quantidade?: SortOrder
    createdAt?: SortOrder
    origemID?: SortOrder
    origemTipo?: SortOrder
    conversaoEstoqueId?: SortOrder
  }

  export type MovimentacaoEstoqueSumOrderByAggregateInput = {
    id?: SortOrder
    materialID?: SortOrder
    quantidade?: SortOrder
    origemID?: SortOrder
    conversaoEstoqueId?: SortOrder
  }

  export type EnumTipoMovimentacaoEstoqueWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoMovimentacaoEstoque | EnumTipoMovimentacaoEstoqueFieldRefInput<$PrismaModel>
    in?: $Enums.TipoMovimentacaoEstoque[] | ListEnumTipoMovimentacaoEstoqueFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoMovimentacaoEstoque[] | ListEnumTipoMovimentacaoEstoqueFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoMovimentacaoEstoqueWithAggregatesFilter<$PrismaModel> | $Enums.TipoMovimentacaoEstoque
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoMovimentacaoEstoqueFilter<$PrismaModel>
    _max?: NestedEnumTipoMovimentacaoEstoqueFilter<$PrismaModel>
  }

  export type EnumOrigemMovimentacaoEstoqueWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrigemMovimentacaoEstoque | EnumOrigemMovimentacaoEstoqueFieldRefInput<$PrismaModel>
    in?: $Enums.OrigemMovimentacaoEstoque[] | ListEnumOrigemMovimentacaoEstoqueFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrigemMovimentacaoEstoque[] | ListEnumOrigemMovimentacaoEstoqueFieldRefInput<$PrismaModel>
    not?: NestedEnumOrigemMovimentacaoEstoqueWithAggregatesFilter<$PrismaModel> | $Enums.OrigemMovimentacaoEstoque
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOrigemMovimentacaoEstoqueFilter<$PrismaModel>
    _max?: NestedEnumOrigemMovimentacaoEstoqueFilter<$PrismaModel>
  }

  export type ConversaoEstoqueCountOrderByAggregateInput = {
    id?: SortOrder
    mat_origemID?: SortOrder
    mat_destinoID?: SortOrder
    quantidade?: SortOrder
    descricao?: SortOrder
    createdAt?: SortOrder
  }

  export type ConversaoEstoqueAvgOrderByAggregateInput = {
    id?: SortOrder
    mat_origemID?: SortOrder
    mat_destinoID?: SortOrder
    quantidade?: SortOrder
  }

  export type ConversaoEstoqueMaxOrderByAggregateInput = {
    id?: SortOrder
    mat_origemID?: SortOrder
    mat_destinoID?: SortOrder
    quantidade?: SortOrder
    descricao?: SortOrder
    createdAt?: SortOrder
  }

  export type ConversaoEstoqueMinOrderByAggregateInput = {
    id?: SortOrder
    mat_origemID?: SortOrder
    mat_destinoID?: SortOrder
    quantidade?: SortOrder
    descricao?: SortOrder
    createdAt?: SortOrder
  }

  export type ConversaoEstoqueSumOrderByAggregateInput = {
    id?: SortOrder
    mat_origemID?: SortOrder
    mat_destinoID?: SortOrder
    quantidade?: SortOrder
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type EnumStatusCaixaFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusCaixa | EnumStatusCaixaFieldRefInput<$PrismaModel>
    in?: $Enums.StatusCaixa[] | ListEnumStatusCaixaFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusCaixa[] | ListEnumStatusCaixaFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusCaixaFilter<$PrismaModel> | $Enums.StatusCaixa
  }

  export type LivroCaixaCountOrderByAggregateInput = {
    id?: SortOrder
    dataAbertura?: SortOrder
    dataFechamento?: SortOrder
    saldoInicial?: SortOrder
    saldoFinal?: SortOrder
    status?: SortOrder
    usuarioID?: SortOrder
  }

  export type LivroCaixaAvgOrderByAggregateInput = {
    id?: SortOrder
    saldoInicial?: SortOrder
    saldoFinal?: SortOrder
    usuarioID?: SortOrder
  }

  export type LivroCaixaMaxOrderByAggregateInput = {
    id?: SortOrder
    dataAbertura?: SortOrder
    dataFechamento?: SortOrder
    saldoInicial?: SortOrder
    saldoFinal?: SortOrder
    status?: SortOrder
    usuarioID?: SortOrder
  }

  export type LivroCaixaMinOrderByAggregateInput = {
    id?: SortOrder
    dataAbertura?: SortOrder
    dataFechamento?: SortOrder
    saldoInicial?: SortOrder
    saldoFinal?: SortOrder
    status?: SortOrder
    usuarioID?: SortOrder
  }

  export type LivroCaixaSumOrderByAggregateInput = {
    id?: SortOrder
    saldoInicial?: SortOrder
    saldoFinal?: SortOrder
    usuarioID?: SortOrder
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type EnumStatusCaixaWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusCaixa | EnumStatusCaixaFieldRefInput<$PrismaModel>
    in?: $Enums.StatusCaixa[] | ListEnumStatusCaixaFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusCaixa[] | ListEnumStatusCaixaFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusCaixaWithAggregatesFilter<$PrismaModel> | $Enums.StatusCaixa
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStatusCaixaFilter<$PrismaModel>
    _max?: NestedEnumStatusCaixaFilter<$PrismaModel>
  }

  export type PedidoCreateNestedManyWithoutUserInput = {
    create?: XOR<PedidoCreateWithoutUserInput, PedidoUncheckedCreateWithoutUserInput> | PedidoCreateWithoutUserInput[] | PedidoUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PedidoCreateOrConnectWithoutUserInput | PedidoCreateOrConnectWithoutUserInput[]
    createMany?: PedidoCreateManyUserInputEnvelope
    connect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
  }

  export type CargoCreateNestedOneWithoutUsersInput = {
    create?: XOR<CargoCreateWithoutUsersInput, CargoUncheckedCreateWithoutUsersInput>
    connectOrCreate?: CargoCreateOrConnectWithoutUsersInput
    connect?: CargoWhereUniqueInput
  }

  export type PermissoesCreateNestedManyWithoutUsersInput = {
    create?: XOR<PermissoesCreateWithoutUsersInput, PermissoesUncheckedCreateWithoutUsersInput> | PermissoesCreateWithoutUsersInput[] | PermissoesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: PermissoesCreateOrConnectWithoutUsersInput | PermissoesCreateOrConnectWithoutUsersInput[]
    connect?: PermissoesWhereUniqueInput | PermissoesWhereUniqueInput[]
  }

  export type LivroCaixaCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<LivroCaixaCreateWithoutUsuarioInput, LivroCaixaUncheckedCreateWithoutUsuarioInput> | LivroCaixaCreateWithoutUsuarioInput[] | LivroCaixaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: LivroCaixaCreateOrConnectWithoutUsuarioInput | LivroCaixaCreateOrConnectWithoutUsuarioInput[]
    createMany?: LivroCaixaCreateManyUsuarioInputEnvelope
    connect?: LivroCaixaWhereUniqueInput | LivroCaixaWhereUniqueInput[]
  }

  export type PedidoUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<PedidoCreateWithoutUserInput, PedidoUncheckedCreateWithoutUserInput> | PedidoCreateWithoutUserInput[] | PedidoUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PedidoCreateOrConnectWithoutUserInput | PedidoCreateOrConnectWithoutUserInput[]
    createMany?: PedidoCreateManyUserInputEnvelope
    connect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
  }

  export type PermissoesUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<PermissoesCreateWithoutUsersInput, PermissoesUncheckedCreateWithoutUsersInput> | PermissoesCreateWithoutUsersInput[] | PermissoesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: PermissoesCreateOrConnectWithoutUsersInput | PermissoesCreateOrConnectWithoutUsersInput[]
    connect?: PermissoesWhereUniqueInput | PermissoesWhereUniqueInput[]
  }

  export type LivroCaixaUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<LivroCaixaCreateWithoutUsuarioInput, LivroCaixaUncheckedCreateWithoutUsuarioInput> | LivroCaixaCreateWithoutUsuarioInput[] | LivroCaixaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: LivroCaixaCreateOrConnectWithoutUsuarioInput | LivroCaixaCreateOrConnectWithoutUsuarioInput[]
    createMany?: LivroCaixaCreateManyUsuarioInputEnvelope
    connect?: LivroCaixaWhereUniqueInput | LivroCaixaWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type PedidoUpdateManyWithoutUserNestedInput = {
    create?: XOR<PedidoCreateWithoutUserInput, PedidoUncheckedCreateWithoutUserInput> | PedidoCreateWithoutUserInput[] | PedidoUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PedidoCreateOrConnectWithoutUserInput | PedidoCreateOrConnectWithoutUserInput[]
    upsert?: PedidoUpsertWithWhereUniqueWithoutUserInput | PedidoUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: PedidoCreateManyUserInputEnvelope
    set?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    disconnect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    delete?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    connect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    update?: PedidoUpdateWithWhereUniqueWithoutUserInput | PedidoUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: PedidoUpdateManyWithWhereWithoutUserInput | PedidoUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: PedidoScalarWhereInput | PedidoScalarWhereInput[]
  }

  export type CargoUpdateOneRequiredWithoutUsersNestedInput = {
    create?: XOR<CargoCreateWithoutUsersInput, CargoUncheckedCreateWithoutUsersInput>
    connectOrCreate?: CargoCreateOrConnectWithoutUsersInput
    upsert?: CargoUpsertWithoutUsersInput
    connect?: CargoWhereUniqueInput
    update?: XOR<XOR<CargoUpdateToOneWithWhereWithoutUsersInput, CargoUpdateWithoutUsersInput>, CargoUncheckedUpdateWithoutUsersInput>
  }

  export type PermissoesUpdateManyWithoutUsersNestedInput = {
    create?: XOR<PermissoesCreateWithoutUsersInput, PermissoesUncheckedCreateWithoutUsersInput> | PermissoesCreateWithoutUsersInput[] | PermissoesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: PermissoesCreateOrConnectWithoutUsersInput | PermissoesCreateOrConnectWithoutUsersInput[]
    upsert?: PermissoesUpsertWithWhereUniqueWithoutUsersInput | PermissoesUpsertWithWhereUniqueWithoutUsersInput[]
    set?: PermissoesWhereUniqueInput | PermissoesWhereUniqueInput[]
    disconnect?: PermissoesWhereUniqueInput | PermissoesWhereUniqueInput[]
    delete?: PermissoesWhereUniqueInput | PermissoesWhereUniqueInput[]
    connect?: PermissoesWhereUniqueInput | PermissoesWhereUniqueInput[]
    update?: PermissoesUpdateWithWhereUniqueWithoutUsersInput | PermissoesUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: PermissoesUpdateManyWithWhereWithoutUsersInput | PermissoesUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: PermissoesScalarWhereInput | PermissoesScalarWhereInput[]
  }

  export type LivroCaixaUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<LivroCaixaCreateWithoutUsuarioInput, LivroCaixaUncheckedCreateWithoutUsuarioInput> | LivroCaixaCreateWithoutUsuarioInput[] | LivroCaixaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: LivroCaixaCreateOrConnectWithoutUsuarioInput | LivroCaixaCreateOrConnectWithoutUsuarioInput[]
    upsert?: LivroCaixaUpsertWithWhereUniqueWithoutUsuarioInput | LivroCaixaUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: LivroCaixaCreateManyUsuarioInputEnvelope
    set?: LivroCaixaWhereUniqueInput | LivroCaixaWhereUniqueInput[]
    disconnect?: LivroCaixaWhereUniqueInput | LivroCaixaWhereUniqueInput[]
    delete?: LivroCaixaWhereUniqueInput | LivroCaixaWhereUniqueInput[]
    connect?: LivroCaixaWhereUniqueInput | LivroCaixaWhereUniqueInput[]
    update?: LivroCaixaUpdateWithWhereUniqueWithoutUsuarioInput | LivroCaixaUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: LivroCaixaUpdateManyWithWhereWithoutUsuarioInput | LivroCaixaUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: LivroCaixaScalarWhereInput | LivroCaixaScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type PedidoUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<PedidoCreateWithoutUserInput, PedidoUncheckedCreateWithoutUserInput> | PedidoCreateWithoutUserInput[] | PedidoUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PedidoCreateOrConnectWithoutUserInput | PedidoCreateOrConnectWithoutUserInput[]
    upsert?: PedidoUpsertWithWhereUniqueWithoutUserInput | PedidoUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: PedidoCreateManyUserInputEnvelope
    set?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    disconnect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    delete?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    connect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    update?: PedidoUpdateWithWhereUniqueWithoutUserInput | PedidoUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: PedidoUpdateManyWithWhereWithoutUserInput | PedidoUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: PedidoScalarWhereInput | PedidoScalarWhereInput[]
  }

  export type PermissoesUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<PermissoesCreateWithoutUsersInput, PermissoesUncheckedCreateWithoutUsersInput> | PermissoesCreateWithoutUsersInput[] | PermissoesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: PermissoesCreateOrConnectWithoutUsersInput | PermissoesCreateOrConnectWithoutUsersInput[]
    upsert?: PermissoesUpsertWithWhereUniqueWithoutUsersInput | PermissoesUpsertWithWhereUniqueWithoutUsersInput[]
    set?: PermissoesWhereUniqueInput | PermissoesWhereUniqueInput[]
    disconnect?: PermissoesWhereUniqueInput | PermissoesWhereUniqueInput[]
    delete?: PermissoesWhereUniqueInput | PermissoesWhereUniqueInput[]
    connect?: PermissoesWhereUniqueInput | PermissoesWhereUniqueInput[]
    update?: PermissoesUpdateWithWhereUniqueWithoutUsersInput | PermissoesUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: PermissoesUpdateManyWithWhereWithoutUsersInput | PermissoesUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: PermissoesScalarWhereInput | PermissoesScalarWhereInput[]
  }

  export type LivroCaixaUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<LivroCaixaCreateWithoutUsuarioInput, LivroCaixaUncheckedCreateWithoutUsuarioInput> | LivroCaixaCreateWithoutUsuarioInput[] | LivroCaixaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: LivroCaixaCreateOrConnectWithoutUsuarioInput | LivroCaixaCreateOrConnectWithoutUsuarioInput[]
    upsert?: LivroCaixaUpsertWithWhereUniqueWithoutUsuarioInput | LivroCaixaUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: LivroCaixaCreateManyUsuarioInputEnvelope
    set?: LivroCaixaWhereUniqueInput | LivroCaixaWhereUniqueInput[]
    disconnect?: LivroCaixaWhereUniqueInput | LivroCaixaWhereUniqueInput[]
    delete?: LivroCaixaWhereUniqueInput | LivroCaixaWhereUniqueInput[]
    connect?: LivroCaixaWhereUniqueInput | LivroCaixaWhereUniqueInput[]
    update?: LivroCaixaUpdateWithWhereUniqueWithoutUsuarioInput | LivroCaixaUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: LivroCaixaUpdateManyWithWhereWithoutUsuarioInput | LivroCaixaUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: LivroCaixaScalarWhereInput | LivroCaixaScalarWhereInput[]
  }

  export type UserCreateNestedManyWithoutPermissoesInput = {
    create?: XOR<UserCreateWithoutPermissoesInput, UserUncheckedCreateWithoutPermissoesInput> | UserCreateWithoutPermissoesInput[] | UserUncheckedCreateWithoutPermissoesInput[]
    connectOrCreate?: UserCreateOrConnectWithoutPermissoesInput | UserCreateOrConnectWithoutPermissoesInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutPermissoesInput = {
    create?: XOR<UserCreateWithoutPermissoesInput, UserUncheckedCreateWithoutPermissoesInput> | UserCreateWithoutPermissoesInput[] | UserUncheckedCreateWithoutPermissoesInput[]
    connectOrCreate?: UserCreateOrConnectWithoutPermissoesInput | UserCreateOrConnectWithoutPermissoesInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type UserUpdateManyWithoutPermissoesNestedInput = {
    create?: XOR<UserCreateWithoutPermissoesInput, UserUncheckedCreateWithoutPermissoesInput> | UserCreateWithoutPermissoesInput[] | UserUncheckedCreateWithoutPermissoesInput[]
    connectOrCreate?: UserCreateOrConnectWithoutPermissoesInput | UserCreateOrConnectWithoutPermissoesInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutPermissoesInput | UserUpsertWithWhereUniqueWithoutPermissoesInput[]
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutPermissoesInput | UserUpdateWithWhereUniqueWithoutPermissoesInput[]
    updateMany?: UserUpdateManyWithWhereWithoutPermissoesInput | UserUpdateManyWithWhereWithoutPermissoesInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutPermissoesNestedInput = {
    create?: XOR<UserCreateWithoutPermissoesInput, UserUncheckedCreateWithoutPermissoesInput> | UserCreateWithoutPermissoesInput[] | UserUncheckedCreateWithoutPermissoesInput[]
    connectOrCreate?: UserCreateOrConnectWithoutPermissoesInput | UserCreateOrConnectWithoutPermissoesInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutPermissoesInput | UserUpsertWithWhereUniqueWithoutPermissoesInput[]
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutPermissoesInput | UserUpdateWithWhereUniqueWithoutPermissoesInput[]
    updateMany?: UserUpdateManyWithWhereWithoutPermissoesInput | UserUpdateManyWithWhereWithoutPermissoesInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type UserCreateNestedManyWithoutCargoInput = {
    create?: XOR<UserCreateWithoutCargoInput, UserUncheckedCreateWithoutCargoInput> | UserCreateWithoutCargoInput[] | UserUncheckedCreateWithoutCargoInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCargoInput | UserCreateOrConnectWithoutCargoInput[]
    createMany?: UserCreateManyCargoInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutCargoInput = {
    create?: XOR<UserCreateWithoutCargoInput, UserUncheckedCreateWithoutCargoInput> | UserCreateWithoutCargoInput[] | UserUncheckedCreateWithoutCargoInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCargoInput | UserCreateOrConnectWithoutCargoInput[]
    createMany?: UserCreateManyCargoInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type UserUpdateManyWithoutCargoNestedInput = {
    create?: XOR<UserCreateWithoutCargoInput, UserUncheckedCreateWithoutCargoInput> | UserCreateWithoutCargoInput[] | UserUncheckedCreateWithoutCargoInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCargoInput | UserCreateOrConnectWithoutCargoInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutCargoInput | UserUpsertWithWhereUniqueWithoutCargoInput[]
    createMany?: UserCreateManyCargoInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutCargoInput | UserUpdateWithWhereUniqueWithoutCargoInput[]
    updateMany?: UserUpdateManyWithWhereWithoutCargoInput | UserUpdateManyWithWhereWithoutCargoInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutCargoNestedInput = {
    create?: XOR<UserCreateWithoutCargoInput, UserUncheckedCreateWithoutCargoInput> | UserCreateWithoutCargoInput[] | UserUncheckedCreateWithoutCargoInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCargoInput | UserCreateOrConnectWithoutCargoInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutCargoInput | UserUpsertWithWhereUniqueWithoutCargoInput[]
    createMany?: UserCreateManyCargoInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutCargoInput | UserUpdateWithWhereUniqueWithoutCargoInput[]
    updateMany?: UserUpdateManyWithWhereWithoutCargoInput | UserUpdateManyWithWhereWithoutCargoInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type DadosPagamentoCreateNestedOneWithoutRegistroInput = {
    create?: XOR<DadosPagamentoCreateWithoutRegistroInput, DadosPagamentoUncheckedCreateWithoutRegistroInput>
    connectOrCreate?: DadosPagamentoCreateOrConnectWithoutRegistroInput
    connect?: DadosPagamentoWhereUniqueInput
  }

  export type EnderecoCreateNestedOneWithoutRegistroInput = {
    create?: XOR<EnderecoCreateWithoutRegistroInput, EnderecoUncheckedCreateWithoutRegistroInput>
    connectOrCreate?: EnderecoCreateOrConnectWithoutRegistroInput
    connect?: EnderecoWhereUniqueInput
  }

  export type PedidoCreateNestedManyWithoutRegistroInput = {
    create?: XOR<PedidoCreateWithoutRegistroInput, PedidoUncheckedCreateWithoutRegistroInput> | PedidoCreateWithoutRegistroInput[] | PedidoUncheckedCreateWithoutRegistroInput[]
    connectOrCreate?: PedidoCreateOrConnectWithoutRegistroInput | PedidoCreateOrConnectWithoutRegistroInput[]
    createMany?: PedidoCreateManyRegistroInputEnvelope
    connect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
  }

  export type PessoaFisicaCreateNestedOneWithoutRegistroInput = {
    create?: XOR<PessoaFisicaCreateWithoutRegistroInput, PessoaFisicaUncheckedCreateWithoutRegistroInput>
    connectOrCreate?: PessoaFisicaCreateOrConnectWithoutRegistroInput
    connect?: PessoaFisicaWhereUniqueInput
  }

  export type PessoaJuridicaCreateNestedOneWithoutRegistroInput = {
    create?: XOR<PessoaJuridicaCreateWithoutRegistroInput, PessoaJuridicaUncheckedCreateWithoutRegistroInput>
    connectOrCreate?: PessoaJuridicaCreateOrConnectWithoutRegistroInput
    connect?: PessoaJuridicaWhereUniqueInput
  }

  export type TabelaCreateNestedOneWithoutRegistrosInput = {
    create?: XOR<TabelaCreateWithoutRegistrosInput, TabelaUncheckedCreateWithoutRegistrosInput>
    connectOrCreate?: TabelaCreateOrConnectWithoutRegistrosInput
    connect?: TabelaWhereUniqueInput
  }

  export type SaldoFinanceiroCreateNestedOneWithoutRegistroInput = {
    create?: XOR<SaldoFinanceiroCreateWithoutRegistroInput, SaldoFinanceiroUncheckedCreateWithoutRegistroInput>
    connectOrCreate?: SaldoFinanceiroCreateOrConnectWithoutRegistroInput
    connect?: SaldoFinanceiroWhereUniqueInput
  }

  export type DadosPagamentoUncheckedCreateNestedOneWithoutRegistroInput = {
    create?: XOR<DadosPagamentoCreateWithoutRegistroInput, DadosPagamentoUncheckedCreateWithoutRegistroInput>
    connectOrCreate?: DadosPagamentoCreateOrConnectWithoutRegistroInput
    connect?: DadosPagamentoWhereUniqueInput
  }

  export type EnderecoUncheckedCreateNestedOneWithoutRegistroInput = {
    create?: XOR<EnderecoCreateWithoutRegistroInput, EnderecoUncheckedCreateWithoutRegistroInput>
    connectOrCreate?: EnderecoCreateOrConnectWithoutRegistroInput
    connect?: EnderecoWhereUniqueInput
  }

  export type PedidoUncheckedCreateNestedManyWithoutRegistroInput = {
    create?: XOR<PedidoCreateWithoutRegistroInput, PedidoUncheckedCreateWithoutRegistroInput> | PedidoCreateWithoutRegistroInput[] | PedidoUncheckedCreateWithoutRegistroInput[]
    connectOrCreate?: PedidoCreateOrConnectWithoutRegistroInput | PedidoCreateOrConnectWithoutRegistroInput[]
    createMany?: PedidoCreateManyRegistroInputEnvelope
    connect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
  }

  export type PessoaFisicaUncheckedCreateNestedOneWithoutRegistroInput = {
    create?: XOR<PessoaFisicaCreateWithoutRegistroInput, PessoaFisicaUncheckedCreateWithoutRegistroInput>
    connectOrCreate?: PessoaFisicaCreateOrConnectWithoutRegistroInput
    connect?: PessoaFisicaWhereUniqueInput
  }

  export type PessoaJuridicaUncheckedCreateNestedOneWithoutRegistroInput = {
    create?: XOR<PessoaJuridicaCreateWithoutRegistroInput, PessoaJuridicaUncheckedCreateWithoutRegistroInput>
    connectOrCreate?: PessoaJuridicaCreateOrConnectWithoutRegistroInput
    connect?: PessoaJuridicaWhereUniqueInput
  }

  export type SaldoFinanceiroUncheckedCreateNestedOneWithoutRegistroInput = {
    create?: XOR<SaldoFinanceiroCreateWithoutRegistroInput, SaldoFinanceiroUncheckedCreateWithoutRegistroInput>
    connectOrCreate?: SaldoFinanceiroCreateOrConnectWithoutRegistroInput
    connect?: SaldoFinanceiroWhereUniqueInput
  }

  export type EnumTipoRegistroFieldUpdateOperationsInput = {
    set?: $Enums.TipoRegistro
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type DadosPagamentoUpdateOneWithoutRegistroNestedInput = {
    create?: XOR<DadosPagamentoCreateWithoutRegistroInput, DadosPagamentoUncheckedCreateWithoutRegistroInput>
    connectOrCreate?: DadosPagamentoCreateOrConnectWithoutRegistroInput
    upsert?: DadosPagamentoUpsertWithoutRegistroInput
    disconnect?: DadosPagamentoWhereInput | boolean
    delete?: DadosPagamentoWhereInput | boolean
    connect?: DadosPagamentoWhereUniqueInput
    update?: XOR<XOR<DadosPagamentoUpdateToOneWithWhereWithoutRegistroInput, DadosPagamentoUpdateWithoutRegistroInput>, DadosPagamentoUncheckedUpdateWithoutRegistroInput>
  }

  export type EnderecoUpdateOneWithoutRegistroNestedInput = {
    create?: XOR<EnderecoCreateWithoutRegistroInput, EnderecoUncheckedCreateWithoutRegistroInput>
    connectOrCreate?: EnderecoCreateOrConnectWithoutRegistroInput
    upsert?: EnderecoUpsertWithoutRegistroInput
    disconnect?: EnderecoWhereInput | boolean
    delete?: EnderecoWhereInput | boolean
    connect?: EnderecoWhereUniqueInput
    update?: XOR<XOR<EnderecoUpdateToOneWithWhereWithoutRegistroInput, EnderecoUpdateWithoutRegistroInput>, EnderecoUncheckedUpdateWithoutRegistroInput>
  }

  export type PedidoUpdateManyWithoutRegistroNestedInput = {
    create?: XOR<PedidoCreateWithoutRegistroInput, PedidoUncheckedCreateWithoutRegistroInput> | PedidoCreateWithoutRegistroInput[] | PedidoUncheckedCreateWithoutRegistroInput[]
    connectOrCreate?: PedidoCreateOrConnectWithoutRegistroInput | PedidoCreateOrConnectWithoutRegistroInput[]
    upsert?: PedidoUpsertWithWhereUniqueWithoutRegistroInput | PedidoUpsertWithWhereUniqueWithoutRegistroInput[]
    createMany?: PedidoCreateManyRegistroInputEnvelope
    set?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    disconnect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    delete?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    connect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    update?: PedidoUpdateWithWhereUniqueWithoutRegistroInput | PedidoUpdateWithWhereUniqueWithoutRegistroInput[]
    updateMany?: PedidoUpdateManyWithWhereWithoutRegistroInput | PedidoUpdateManyWithWhereWithoutRegistroInput[]
    deleteMany?: PedidoScalarWhereInput | PedidoScalarWhereInput[]
  }

  export type PessoaFisicaUpdateOneWithoutRegistroNestedInput = {
    create?: XOR<PessoaFisicaCreateWithoutRegistroInput, PessoaFisicaUncheckedCreateWithoutRegistroInput>
    connectOrCreate?: PessoaFisicaCreateOrConnectWithoutRegistroInput
    upsert?: PessoaFisicaUpsertWithoutRegistroInput
    disconnect?: PessoaFisicaWhereInput | boolean
    delete?: PessoaFisicaWhereInput | boolean
    connect?: PessoaFisicaWhereUniqueInput
    update?: XOR<XOR<PessoaFisicaUpdateToOneWithWhereWithoutRegistroInput, PessoaFisicaUpdateWithoutRegistroInput>, PessoaFisicaUncheckedUpdateWithoutRegistroInput>
  }

  export type PessoaJuridicaUpdateOneWithoutRegistroNestedInput = {
    create?: XOR<PessoaJuridicaCreateWithoutRegistroInput, PessoaJuridicaUncheckedCreateWithoutRegistroInput>
    connectOrCreate?: PessoaJuridicaCreateOrConnectWithoutRegistroInput
    upsert?: PessoaJuridicaUpsertWithoutRegistroInput
    disconnect?: PessoaJuridicaWhereInput | boolean
    delete?: PessoaJuridicaWhereInput | boolean
    connect?: PessoaJuridicaWhereUniqueInput
    update?: XOR<XOR<PessoaJuridicaUpdateToOneWithWhereWithoutRegistroInput, PessoaJuridicaUpdateWithoutRegistroInput>, PessoaJuridicaUncheckedUpdateWithoutRegistroInput>
  }

  export type TabelaUpdateOneRequiredWithoutRegistrosNestedInput = {
    create?: XOR<TabelaCreateWithoutRegistrosInput, TabelaUncheckedCreateWithoutRegistrosInput>
    connectOrCreate?: TabelaCreateOrConnectWithoutRegistrosInput
    upsert?: TabelaUpsertWithoutRegistrosInput
    connect?: TabelaWhereUniqueInput
    update?: XOR<XOR<TabelaUpdateToOneWithWhereWithoutRegistrosInput, TabelaUpdateWithoutRegistrosInput>, TabelaUncheckedUpdateWithoutRegistrosInput>
  }

  export type SaldoFinanceiroUpdateOneWithoutRegistroNestedInput = {
    create?: XOR<SaldoFinanceiroCreateWithoutRegistroInput, SaldoFinanceiroUncheckedCreateWithoutRegistroInput>
    connectOrCreate?: SaldoFinanceiroCreateOrConnectWithoutRegistroInput
    upsert?: SaldoFinanceiroUpsertWithoutRegistroInput
    disconnect?: SaldoFinanceiroWhereInput | boolean
    delete?: SaldoFinanceiroWhereInput | boolean
    connect?: SaldoFinanceiroWhereUniqueInput
    update?: XOR<XOR<SaldoFinanceiroUpdateToOneWithWhereWithoutRegistroInput, SaldoFinanceiroUpdateWithoutRegistroInput>, SaldoFinanceiroUncheckedUpdateWithoutRegistroInput>
  }

  export type DadosPagamentoUncheckedUpdateOneWithoutRegistroNestedInput = {
    create?: XOR<DadosPagamentoCreateWithoutRegistroInput, DadosPagamentoUncheckedCreateWithoutRegistroInput>
    connectOrCreate?: DadosPagamentoCreateOrConnectWithoutRegistroInput
    upsert?: DadosPagamentoUpsertWithoutRegistroInput
    disconnect?: DadosPagamentoWhereInput | boolean
    delete?: DadosPagamentoWhereInput | boolean
    connect?: DadosPagamentoWhereUniqueInput
    update?: XOR<XOR<DadosPagamentoUpdateToOneWithWhereWithoutRegistroInput, DadosPagamentoUpdateWithoutRegistroInput>, DadosPagamentoUncheckedUpdateWithoutRegistroInput>
  }

  export type EnderecoUncheckedUpdateOneWithoutRegistroNestedInput = {
    create?: XOR<EnderecoCreateWithoutRegistroInput, EnderecoUncheckedCreateWithoutRegistroInput>
    connectOrCreate?: EnderecoCreateOrConnectWithoutRegistroInput
    upsert?: EnderecoUpsertWithoutRegistroInput
    disconnect?: EnderecoWhereInput | boolean
    delete?: EnderecoWhereInput | boolean
    connect?: EnderecoWhereUniqueInput
    update?: XOR<XOR<EnderecoUpdateToOneWithWhereWithoutRegistroInput, EnderecoUpdateWithoutRegistroInput>, EnderecoUncheckedUpdateWithoutRegistroInput>
  }

  export type PedidoUncheckedUpdateManyWithoutRegistroNestedInput = {
    create?: XOR<PedidoCreateWithoutRegistroInput, PedidoUncheckedCreateWithoutRegistroInput> | PedidoCreateWithoutRegistroInput[] | PedidoUncheckedCreateWithoutRegistroInput[]
    connectOrCreate?: PedidoCreateOrConnectWithoutRegistroInput | PedidoCreateOrConnectWithoutRegistroInput[]
    upsert?: PedidoUpsertWithWhereUniqueWithoutRegistroInput | PedidoUpsertWithWhereUniqueWithoutRegistroInput[]
    createMany?: PedidoCreateManyRegistroInputEnvelope
    set?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    disconnect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    delete?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    connect?: PedidoWhereUniqueInput | PedidoWhereUniqueInput[]
    update?: PedidoUpdateWithWhereUniqueWithoutRegistroInput | PedidoUpdateWithWhereUniqueWithoutRegistroInput[]
    updateMany?: PedidoUpdateManyWithWhereWithoutRegistroInput | PedidoUpdateManyWithWhereWithoutRegistroInput[]
    deleteMany?: PedidoScalarWhereInput | PedidoScalarWhereInput[]
  }

  export type PessoaFisicaUncheckedUpdateOneWithoutRegistroNestedInput = {
    create?: XOR<PessoaFisicaCreateWithoutRegistroInput, PessoaFisicaUncheckedCreateWithoutRegistroInput>
    connectOrCreate?: PessoaFisicaCreateOrConnectWithoutRegistroInput
    upsert?: PessoaFisicaUpsertWithoutRegistroInput
    disconnect?: PessoaFisicaWhereInput | boolean
    delete?: PessoaFisicaWhereInput | boolean
    connect?: PessoaFisicaWhereUniqueInput
    update?: XOR<XOR<PessoaFisicaUpdateToOneWithWhereWithoutRegistroInput, PessoaFisicaUpdateWithoutRegistroInput>, PessoaFisicaUncheckedUpdateWithoutRegistroInput>
  }

  export type PessoaJuridicaUncheckedUpdateOneWithoutRegistroNestedInput = {
    create?: XOR<PessoaJuridicaCreateWithoutRegistroInput, PessoaJuridicaUncheckedCreateWithoutRegistroInput>
    connectOrCreate?: PessoaJuridicaCreateOrConnectWithoutRegistroInput
    upsert?: PessoaJuridicaUpsertWithoutRegistroInput
    disconnect?: PessoaJuridicaWhereInput | boolean
    delete?: PessoaJuridicaWhereInput | boolean
    connect?: PessoaJuridicaWhereUniqueInput
    update?: XOR<XOR<PessoaJuridicaUpdateToOneWithWhereWithoutRegistroInput, PessoaJuridicaUpdateWithoutRegistroInput>, PessoaJuridicaUncheckedUpdateWithoutRegistroInput>
  }

  export type SaldoFinanceiroUncheckedUpdateOneWithoutRegistroNestedInput = {
    create?: XOR<SaldoFinanceiroCreateWithoutRegistroInput, SaldoFinanceiroUncheckedCreateWithoutRegistroInput>
    connectOrCreate?: SaldoFinanceiroCreateOrConnectWithoutRegistroInput
    upsert?: SaldoFinanceiroUpsertWithoutRegistroInput
    disconnect?: SaldoFinanceiroWhereInput | boolean
    delete?: SaldoFinanceiroWhereInput | boolean
    connect?: SaldoFinanceiroWhereUniqueInput
    update?: XOR<XOR<SaldoFinanceiroUpdateToOneWithWhereWithoutRegistroInput, SaldoFinanceiroUpdateWithoutRegistroInput>, SaldoFinanceiroUncheckedUpdateWithoutRegistroInput>
  }

  export type RegistroCreateNestedOneWithoutFisicaInput = {
    create?: XOR<RegistroCreateWithoutFisicaInput, RegistroUncheckedCreateWithoutFisicaInput>
    connectOrCreate?: RegistroCreateOrConnectWithoutFisicaInput
    connect?: RegistroWhereUniqueInput
  }

  export type RegistroUpdateOneRequiredWithoutFisicaNestedInput = {
    create?: XOR<RegistroCreateWithoutFisicaInput, RegistroUncheckedCreateWithoutFisicaInput>
    connectOrCreate?: RegistroCreateOrConnectWithoutFisicaInput
    upsert?: RegistroUpsertWithoutFisicaInput
    connect?: RegistroWhereUniqueInput
    update?: XOR<XOR<RegistroUpdateToOneWithWhereWithoutFisicaInput, RegistroUpdateWithoutFisicaInput>, RegistroUncheckedUpdateWithoutFisicaInput>
  }

  export type RegistroCreateNestedOneWithoutJuridicaInput = {
    create?: XOR<RegistroCreateWithoutJuridicaInput, RegistroUncheckedCreateWithoutJuridicaInput>
    connectOrCreate?: RegistroCreateOrConnectWithoutJuridicaInput
    connect?: RegistroWhereUniqueInput
  }

  export type RegistroUpdateOneRequiredWithoutJuridicaNestedInput = {
    create?: XOR<RegistroCreateWithoutJuridicaInput, RegistroUncheckedCreateWithoutJuridicaInput>
    connectOrCreate?: RegistroCreateOrConnectWithoutJuridicaInput
    upsert?: RegistroUpsertWithoutJuridicaInput
    connect?: RegistroWhereUniqueInput
    update?: XOR<XOR<RegistroUpdateToOneWithWhereWithoutJuridicaInput, RegistroUpdateWithoutJuridicaInput>, RegistroUncheckedUpdateWithoutJuridicaInput>
  }

  export type RegistroCreateNestedOneWithoutSaldoInput = {
    create?: XOR<RegistroCreateWithoutSaldoInput, RegistroUncheckedCreateWithoutSaldoInput>
    connectOrCreate?: RegistroCreateOrConnectWithoutSaldoInput
    connect?: RegistroWhereUniqueInput
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type RegistroUpdateOneRequiredWithoutSaldoNestedInput = {
    create?: XOR<RegistroCreateWithoutSaldoInput, RegistroUncheckedCreateWithoutSaldoInput>
    connectOrCreate?: RegistroCreateOrConnectWithoutSaldoInput
    upsert?: RegistroUpsertWithoutSaldoInput
    connect?: RegistroWhereUniqueInput
    update?: XOR<XOR<RegistroUpdateToOneWithWhereWithoutSaldoInput, RegistroUpdateWithoutSaldoInput>, RegistroUncheckedUpdateWithoutSaldoInput>
  }

  export type RegistroCreateNestedOneWithoutEnderecoInput = {
    create?: XOR<RegistroCreateWithoutEnderecoInput, RegistroUncheckedCreateWithoutEnderecoInput>
    connectOrCreate?: RegistroCreateOrConnectWithoutEnderecoInput
    connect?: RegistroWhereUniqueInput
  }

  export type RegistroUpdateOneRequiredWithoutEnderecoNestedInput = {
    create?: XOR<RegistroCreateWithoutEnderecoInput, RegistroUncheckedCreateWithoutEnderecoInput>
    connectOrCreate?: RegistroCreateOrConnectWithoutEnderecoInput
    upsert?: RegistroUpsertWithoutEnderecoInput
    connect?: RegistroWhereUniqueInput
    update?: XOR<XOR<RegistroUpdateToOneWithWhereWithoutEnderecoInput, RegistroUpdateWithoutEnderecoInput>, RegistroUncheckedUpdateWithoutEnderecoInput>
  }

  export type RegistroCreateNestedOneWithoutDados_pagamentoInput = {
    create?: XOR<RegistroCreateWithoutDados_pagamentoInput, RegistroUncheckedCreateWithoutDados_pagamentoInput>
    connectOrCreate?: RegistroCreateOrConnectWithoutDados_pagamentoInput
    connect?: RegistroWhereUniqueInput
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type RegistroUpdateOneRequiredWithoutDados_pagamentoNestedInput = {
    create?: XOR<RegistroCreateWithoutDados_pagamentoInput, RegistroUncheckedCreateWithoutDados_pagamentoInput>
    connectOrCreate?: RegistroCreateOrConnectWithoutDados_pagamentoInput
    upsert?: RegistroUpsertWithoutDados_pagamentoInput
    connect?: RegistroWhereUniqueInput
    update?: XOR<XOR<RegistroUpdateToOneWithWhereWithoutDados_pagamentoInput, RegistroUpdateWithoutDados_pagamentoInput>, RegistroUncheckedUpdateWithoutDados_pagamentoInput>
  }

  export type PrecoPorTabelaCreateNestedManyWithoutTabelaInput = {
    create?: XOR<PrecoPorTabelaCreateWithoutTabelaInput, PrecoPorTabelaUncheckedCreateWithoutTabelaInput> | PrecoPorTabelaCreateWithoutTabelaInput[] | PrecoPorTabelaUncheckedCreateWithoutTabelaInput[]
    connectOrCreate?: PrecoPorTabelaCreateOrConnectWithoutTabelaInput | PrecoPorTabelaCreateOrConnectWithoutTabelaInput[]
    createMany?: PrecoPorTabelaCreateManyTabelaInputEnvelope
    connect?: PrecoPorTabelaWhereUniqueInput | PrecoPorTabelaWhereUniqueInput[]
  }

  export type RegistroCreateNestedManyWithoutTabelaInput = {
    create?: XOR<RegistroCreateWithoutTabelaInput, RegistroUncheckedCreateWithoutTabelaInput> | RegistroCreateWithoutTabelaInput[] | RegistroUncheckedCreateWithoutTabelaInput[]
    connectOrCreate?: RegistroCreateOrConnectWithoutTabelaInput | RegistroCreateOrConnectWithoutTabelaInput[]
    createMany?: RegistroCreateManyTabelaInputEnvelope
    connect?: RegistroWhereUniqueInput | RegistroWhereUniqueInput[]
  }

  export type PrecoPorTabelaUncheckedCreateNestedManyWithoutTabelaInput = {
    create?: XOR<PrecoPorTabelaCreateWithoutTabelaInput, PrecoPorTabelaUncheckedCreateWithoutTabelaInput> | PrecoPorTabelaCreateWithoutTabelaInput[] | PrecoPorTabelaUncheckedCreateWithoutTabelaInput[]
    connectOrCreate?: PrecoPorTabelaCreateOrConnectWithoutTabelaInput | PrecoPorTabelaCreateOrConnectWithoutTabelaInput[]
    createMany?: PrecoPorTabelaCreateManyTabelaInputEnvelope
    connect?: PrecoPorTabelaWhereUniqueInput | PrecoPorTabelaWhereUniqueInput[]
  }

  export type RegistroUncheckedCreateNestedManyWithoutTabelaInput = {
    create?: XOR<RegistroCreateWithoutTabelaInput, RegistroUncheckedCreateWithoutTabelaInput> | RegistroCreateWithoutTabelaInput[] | RegistroUncheckedCreateWithoutTabelaInput[]
    connectOrCreate?: RegistroCreateOrConnectWithoutTabelaInput | RegistroCreateOrConnectWithoutTabelaInput[]
    createMany?: RegistroCreateManyTabelaInputEnvelope
    connect?: RegistroWhereUniqueInput | RegistroWhereUniqueInput[]
  }

  export type PrecoPorTabelaUpdateManyWithoutTabelaNestedInput = {
    create?: XOR<PrecoPorTabelaCreateWithoutTabelaInput, PrecoPorTabelaUncheckedCreateWithoutTabelaInput> | PrecoPorTabelaCreateWithoutTabelaInput[] | PrecoPorTabelaUncheckedCreateWithoutTabelaInput[]
    connectOrCreate?: PrecoPorTabelaCreateOrConnectWithoutTabelaInput | PrecoPorTabelaCreateOrConnectWithoutTabelaInput[]
    upsert?: PrecoPorTabelaUpsertWithWhereUniqueWithoutTabelaInput | PrecoPorTabelaUpsertWithWhereUniqueWithoutTabelaInput[]
    createMany?: PrecoPorTabelaCreateManyTabelaInputEnvelope
    set?: PrecoPorTabelaWhereUniqueInput | PrecoPorTabelaWhereUniqueInput[]
    disconnect?: PrecoPorTabelaWhereUniqueInput | PrecoPorTabelaWhereUniqueInput[]
    delete?: PrecoPorTabelaWhereUniqueInput | PrecoPorTabelaWhereUniqueInput[]
    connect?: PrecoPorTabelaWhereUniqueInput | PrecoPorTabelaWhereUniqueInput[]
    update?: PrecoPorTabelaUpdateWithWhereUniqueWithoutTabelaInput | PrecoPorTabelaUpdateWithWhereUniqueWithoutTabelaInput[]
    updateMany?: PrecoPorTabelaUpdateManyWithWhereWithoutTabelaInput | PrecoPorTabelaUpdateManyWithWhereWithoutTabelaInput[]
    deleteMany?: PrecoPorTabelaScalarWhereInput | PrecoPorTabelaScalarWhereInput[]
  }

  export type RegistroUpdateManyWithoutTabelaNestedInput = {
    create?: XOR<RegistroCreateWithoutTabelaInput, RegistroUncheckedCreateWithoutTabelaInput> | RegistroCreateWithoutTabelaInput[] | RegistroUncheckedCreateWithoutTabelaInput[]
    connectOrCreate?: RegistroCreateOrConnectWithoutTabelaInput | RegistroCreateOrConnectWithoutTabelaInput[]
    upsert?: RegistroUpsertWithWhereUniqueWithoutTabelaInput | RegistroUpsertWithWhereUniqueWithoutTabelaInput[]
    createMany?: RegistroCreateManyTabelaInputEnvelope
    set?: RegistroWhereUniqueInput | RegistroWhereUniqueInput[]
    disconnect?: RegistroWhereUniqueInput | RegistroWhereUniqueInput[]
    delete?: RegistroWhereUniqueInput | RegistroWhereUniqueInput[]
    connect?: RegistroWhereUniqueInput | RegistroWhereUniqueInput[]
    update?: RegistroUpdateWithWhereUniqueWithoutTabelaInput | RegistroUpdateWithWhereUniqueWithoutTabelaInput[]
    updateMany?: RegistroUpdateManyWithWhereWithoutTabelaInput | RegistroUpdateManyWithWhereWithoutTabelaInput[]
    deleteMany?: RegistroScalarWhereInput | RegistroScalarWhereInput[]
  }

  export type PrecoPorTabelaUncheckedUpdateManyWithoutTabelaNestedInput = {
    create?: XOR<PrecoPorTabelaCreateWithoutTabelaInput, PrecoPorTabelaUncheckedCreateWithoutTabelaInput> | PrecoPorTabelaCreateWithoutTabelaInput[] | PrecoPorTabelaUncheckedCreateWithoutTabelaInput[]
    connectOrCreate?: PrecoPorTabelaCreateOrConnectWithoutTabelaInput | PrecoPorTabelaCreateOrConnectWithoutTabelaInput[]
    upsert?: PrecoPorTabelaUpsertWithWhereUniqueWithoutTabelaInput | PrecoPorTabelaUpsertWithWhereUniqueWithoutTabelaInput[]
    createMany?: PrecoPorTabelaCreateManyTabelaInputEnvelope
    set?: PrecoPorTabelaWhereUniqueInput | PrecoPorTabelaWhereUniqueInput[]
    disconnect?: PrecoPorTabelaWhereUniqueInput | PrecoPorTabelaWhereUniqueInput[]
    delete?: PrecoPorTabelaWhereUniqueInput | PrecoPorTabelaWhereUniqueInput[]
    connect?: PrecoPorTabelaWhereUniqueInput | PrecoPorTabelaWhereUniqueInput[]
    update?: PrecoPorTabelaUpdateWithWhereUniqueWithoutTabelaInput | PrecoPorTabelaUpdateWithWhereUniqueWithoutTabelaInput[]
    updateMany?: PrecoPorTabelaUpdateManyWithWhereWithoutTabelaInput | PrecoPorTabelaUpdateManyWithWhereWithoutTabelaInput[]
    deleteMany?: PrecoPorTabelaScalarWhereInput | PrecoPorTabelaScalarWhereInput[]
  }

  export type RegistroUncheckedUpdateManyWithoutTabelaNestedInput = {
    create?: XOR<RegistroCreateWithoutTabelaInput, RegistroUncheckedCreateWithoutTabelaInput> | RegistroCreateWithoutTabelaInput[] | RegistroUncheckedCreateWithoutTabelaInput[]
    connectOrCreate?: RegistroCreateOrConnectWithoutTabelaInput | RegistroCreateOrConnectWithoutTabelaInput[]
    upsert?: RegistroUpsertWithWhereUniqueWithoutTabelaInput | RegistroUpsertWithWhereUniqueWithoutTabelaInput[]
    createMany?: RegistroCreateManyTabelaInputEnvelope
    set?: RegistroWhereUniqueInput | RegistroWhereUniqueInput[]
    disconnect?: RegistroWhereUniqueInput | RegistroWhereUniqueInput[]
    delete?: RegistroWhereUniqueInput | RegistroWhereUniqueInput[]
    connect?: RegistroWhereUniqueInput | RegistroWhereUniqueInput[]
    update?: RegistroUpdateWithWhereUniqueWithoutTabelaInput | RegistroUpdateWithWhereUniqueWithoutTabelaInput[]
    updateMany?: RegistroUpdateManyWithWhereWithoutTabelaInput | RegistroUpdateManyWithWhereWithoutTabelaInput[]
    deleteMany?: RegistroScalarWhereInput | RegistroScalarWhereInput[]
  }

  export type MaterialCreateNestedOneWithoutPreco_tabelaInput = {
    create?: XOR<MaterialCreateWithoutPreco_tabelaInput, MaterialUncheckedCreateWithoutPreco_tabelaInput>
    connectOrCreate?: MaterialCreateOrConnectWithoutPreco_tabelaInput
    connect?: MaterialWhereUniqueInput
  }

  export type TabelaCreateNestedOneWithoutMateriaisInput = {
    create?: XOR<TabelaCreateWithoutMateriaisInput, TabelaUncheckedCreateWithoutMateriaisInput>
    connectOrCreate?: TabelaCreateOrConnectWithoutMateriaisInput
    connect?: TabelaWhereUniqueInput
  }

  export type MaterialUpdateOneRequiredWithoutPreco_tabelaNestedInput = {
    create?: XOR<MaterialCreateWithoutPreco_tabelaInput, MaterialUncheckedCreateWithoutPreco_tabelaInput>
    connectOrCreate?: MaterialCreateOrConnectWithoutPreco_tabelaInput
    upsert?: MaterialUpsertWithoutPreco_tabelaInput
    connect?: MaterialWhereUniqueInput
    update?: XOR<XOR<MaterialUpdateToOneWithWhereWithoutPreco_tabelaInput, MaterialUpdateWithoutPreco_tabelaInput>, MaterialUncheckedUpdateWithoutPreco_tabelaInput>
  }

  export type TabelaUpdateOneRequiredWithoutMateriaisNestedInput = {
    create?: XOR<TabelaCreateWithoutMateriaisInput, TabelaUncheckedCreateWithoutMateriaisInput>
    connectOrCreate?: TabelaCreateOrConnectWithoutMateriaisInput
    upsert?: TabelaUpsertWithoutMateriaisInput
    connect?: TabelaWhereUniqueInput
    update?: XOR<XOR<TabelaUpdateToOneWithWhereWithoutMateriaisInput, TabelaUpdateWithoutMateriaisInput>, TabelaUncheckedUpdateWithoutMateriaisInput>
  }

  export type ItemPedidoCreateNestedManyWithoutMaterialInput = {
    create?: XOR<ItemPedidoCreateWithoutMaterialInput, ItemPedidoUncheckedCreateWithoutMaterialInput> | ItemPedidoCreateWithoutMaterialInput[] | ItemPedidoUncheckedCreateWithoutMaterialInput[]
    connectOrCreate?: ItemPedidoCreateOrConnectWithoutMaterialInput | ItemPedidoCreateOrConnectWithoutMaterialInput[]
    createMany?: ItemPedidoCreateManyMaterialInputEnvelope
    connect?: ItemPedidoWhereUniqueInput | ItemPedidoWhereUniqueInput[]
  }

  export type CategoriaMaterialCreateNestedOneWithoutMateriaisInput = {
    create?: XOR<CategoriaMaterialCreateWithoutMateriaisInput, CategoriaMaterialUncheckedCreateWithoutMateriaisInput>
    connectOrCreate?: CategoriaMaterialCreateOrConnectWithoutMateriaisInput
    connect?: CategoriaMaterialWhereUniqueInput
  }

  export type MovimentacaoEstoqueCreateNestedManyWithoutMaterialInput = {
    create?: XOR<MovimentacaoEstoqueCreateWithoutMaterialInput, MovimentacaoEstoqueUncheckedCreateWithoutMaterialInput> | MovimentacaoEstoqueCreateWithoutMaterialInput[] | MovimentacaoEstoqueUncheckedCreateWithoutMaterialInput[]
    connectOrCreate?: MovimentacaoEstoqueCreateOrConnectWithoutMaterialInput | MovimentacaoEstoqueCreateOrConnectWithoutMaterialInput[]
    createMany?: MovimentacaoEstoqueCreateManyMaterialInputEnvelope
    connect?: MovimentacaoEstoqueWhereUniqueInput | MovimentacaoEstoqueWhereUniqueInput[]
  }

  export type PrecoPorTabelaCreateNestedManyWithoutMaterialInput = {
    create?: XOR<PrecoPorTabelaCreateWithoutMaterialInput, PrecoPorTabelaUncheckedCreateWithoutMaterialInput> | PrecoPorTabelaCreateWithoutMaterialInput[] | PrecoPorTabelaUncheckedCreateWithoutMaterialInput[]
    connectOrCreate?: PrecoPorTabelaCreateOrConnectWithoutMaterialInput | PrecoPorTabelaCreateOrConnectWithoutMaterialInput[]
    createMany?: PrecoPorTabelaCreateManyMaterialInputEnvelope
    connect?: PrecoPorTabelaWhereUniqueInput | PrecoPorTabelaWhereUniqueInput[]
  }

  export type ItemPedidoUncheckedCreateNestedManyWithoutMaterialInput = {
    create?: XOR<ItemPedidoCreateWithoutMaterialInput, ItemPedidoUncheckedCreateWithoutMaterialInput> | ItemPedidoCreateWithoutMaterialInput[] | ItemPedidoUncheckedCreateWithoutMaterialInput[]
    connectOrCreate?: ItemPedidoCreateOrConnectWithoutMaterialInput | ItemPedidoCreateOrConnectWithoutMaterialInput[]
    createMany?: ItemPedidoCreateManyMaterialInputEnvelope
    connect?: ItemPedidoWhereUniqueInput | ItemPedidoWhereUniqueInput[]
  }

  export type MovimentacaoEstoqueUncheckedCreateNestedManyWithoutMaterialInput = {
    create?: XOR<MovimentacaoEstoqueCreateWithoutMaterialInput, MovimentacaoEstoqueUncheckedCreateWithoutMaterialInput> | MovimentacaoEstoqueCreateWithoutMaterialInput[] | MovimentacaoEstoqueUncheckedCreateWithoutMaterialInput[]
    connectOrCreate?: MovimentacaoEstoqueCreateOrConnectWithoutMaterialInput | MovimentacaoEstoqueCreateOrConnectWithoutMaterialInput[]
    createMany?: MovimentacaoEstoqueCreateManyMaterialInputEnvelope
    connect?: MovimentacaoEstoqueWhereUniqueInput | MovimentacaoEstoqueWhereUniqueInput[]
  }

  export type PrecoPorTabelaUncheckedCreateNestedManyWithoutMaterialInput = {
    create?: XOR<PrecoPorTabelaCreateWithoutMaterialInput, PrecoPorTabelaUncheckedCreateWithoutMaterialInput> | PrecoPorTabelaCreateWithoutMaterialInput[] | PrecoPorTabelaUncheckedCreateWithoutMaterialInput[]
    connectOrCreate?: PrecoPorTabelaCreateOrConnectWithoutMaterialInput | PrecoPorTabelaCreateOrConnectWithoutMaterialInput[]
    createMany?: PrecoPorTabelaCreateManyMaterialInputEnvelope
    connect?: PrecoPorTabelaWhereUniqueInput | PrecoPorTabelaWhereUniqueInput[]
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type ItemPedidoUpdateManyWithoutMaterialNestedInput = {
    create?: XOR<ItemPedidoCreateWithoutMaterialInput, ItemPedidoUncheckedCreateWithoutMaterialInput> | ItemPedidoCreateWithoutMaterialInput[] | ItemPedidoUncheckedCreateWithoutMaterialInput[]
    connectOrCreate?: ItemPedidoCreateOrConnectWithoutMaterialInput | ItemPedidoCreateOrConnectWithoutMaterialInput[]
    upsert?: ItemPedidoUpsertWithWhereUniqueWithoutMaterialInput | ItemPedidoUpsertWithWhereUniqueWithoutMaterialInput[]
    createMany?: ItemPedidoCreateManyMaterialInputEnvelope
    set?: ItemPedidoWhereUniqueInput | ItemPedidoWhereUniqueInput[]
    disconnect?: ItemPedidoWhereUniqueInput | ItemPedidoWhereUniqueInput[]
    delete?: ItemPedidoWhereUniqueInput | ItemPedidoWhereUniqueInput[]
    connect?: ItemPedidoWhereUniqueInput | ItemPedidoWhereUniqueInput[]
    update?: ItemPedidoUpdateWithWhereUniqueWithoutMaterialInput | ItemPedidoUpdateWithWhereUniqueWithoutMaterialInput[]
    updateMany?: ItemPedidoUpdateManyWithWhereWithoutMaterialInput | ItemPedidoUpdateManyWithWhereWithoutMaterialInput[]
    deleteMany?: ItemPedidoScalarWhereInput | ItemPedidoScalarWhereInput[]
  }

  export type CategoriaMaterialUpdateOneRequiredWithoutMateriaisNestedInput = {
    create?: XOR<CategoriaMaterialCreateWithoutMateriaisInput, CategoriaMaterialUncheckedCreateWithoutMateriaisInput>
    connectOrCreate?: CategoriaMaterialCreateOrConnectWithoutMateriaisInput
    upsert?: CategoriaMaterialUpsertWithoutMateriaisInput
    connect?: CategoriaMaterialWhereUniqueInput
    update?: XOR<XOR<CategoriaMaterialUpdateToOneWithWhereWithoutMateriaisInput, CategoriaMaterialUpdateWithoutMateriaisInput>, CategoriaMaterialUncheckedUpdateWithoutMateriaisInput>
  }

  export type MovimentacaoEstoqueUpdateManyWithoutMaterialNestedInput = {
    create?: XOR<MovimentacaoEstoqueCreateWithoutMaterialInput, MovimentacaoEstoqueUncheckedCreateWithoutMaterialInput> | MovimentacaoEstoqueCreateWithoutMaterialInput[] | MovimentacaoEstoqueUncheckedCreateWithoutMaterialInput[]
    connectOrCreate?: MovimentacaoEstoqueCreateOrConnectWithoutMaterialInput | MovimentacaoEstoqueCreateOrConnectWithoutMaterialInput[]
    upsert?: MovimentacaoEstoqueUpsertWithWhereUniqueWithoutMaterialInput | MovimentacaoEstoqueUpsertWithWhereUniqueWithoutMaterialInput[]
    createMany?: MovimentacaoEstoqueCreateManyMaterialInputEnvelope
    set?: MovimentacaoEstoqueWhereUniqueInput | MovimentacaoEstoqueWhereUniqueInput[]
    disconnect?: MovimentacaoEstoqueWhereUniqueInput | MovimentacaoEstoqueWhereUniqueInput[]
    delete?: MovimentacaoEstoqueWhereUniqueInput | MovimentacaoEstoqueWhereUniqueInput[]
    connect?: MovimentacaoEstoqueWhereUniqueInput | MovimentacaoEstoqueWhereUniqueInput[]
    update?: MovimentacaoEstoqueUpdateWithWhereUniqueWithoutMaterialInput | MovimentacaoEstoqueUpdateWithWhereUniqueWithoutMaterialInput[]
    updateMany?: MovimentacaoEstoqueUpdateManyWithWhereWithoutMaterialInput | MovimentacaoEstoqueUpdateManyWithWhereWithoutMaterialInput[]
    deleteMany?: MovimentacaoEstoqueScalarWhereInput | MovimentacaoEstoqueScalarWhereInput[]
  }

  export type PrecoPorTabelaUpdateManyWithoutMaterialNestedInput = {
    create?: XOR<PrecoPorTabelaCreateWithoutMaterialInput, PrecoPorTabelaUncheckedCreateWithoutMaterialInput> | PrecoPorTabelaCreateWithoutMaterialInput[] | PrecoPorTabelaUncheckedCreateWithoutMaterialInput[]
    connectOrCreate?: PrecoPorTabelaCreateOrConnectWithoutMaterialInput | PrecoPorTabelaCreateOrConnectWithoutMaterialInput[]
    upsert?: PrecoPorTabelaUpsertWithWhereUniqueWithoutMaterialInput | PrecoPorTabelaUpsertWithWhereUniqueWithoutMaterialInput[]
    createMany?: PrecoPorTabelaCreateManyMaterialInputEnvelope
    set?: PrecoPorTabelaWhereUniqueInput | PrecoPorTabelaWhereUniqueInput[]
    disconnect?: PrecoPorTabelaWhereUniqueInput | PrecoPorTabelaWhereUniqueInput[]
    delete?: PrecoPorTabelaWhereUniqueInput | PrecoPorTabelaWhereUniqueInput[]
    connect?: PrecoPorTabelaWhereUniqueInput | PrecoPorTabelaWhereUniqueInput[]
    update?: PrecoPorTabelaUpdateWithWhereUniqueWithoutMaterialInput | PrecoPorTabelaUpdateWithWhereUniqueWithoutMaterialInput[]
    updateMany?: PrecoPorTabelaUpdateManyWithWhereWithoutMaterialInput | PrecoPorTabelaUpdateManyWithWhereWithoutMaterialInput[]
    deleteMany?: PrecoPorTabelaScalarWhereInput | PrecoPorTabelaScalarWhereInput[]
  }

  export type ItemPedidoUncheckedUpdateManyWithoutMaterialNestedInput = {
    create?: XOR<ItemPedidoCreateWithoutMaterialInput, ItemPedidoUncheckedCreateWithoutMaterialInput> | ItemPedidoCreateWithoutMaterialInput[] | ItemPedidoUncheckedCreateWithoutMaterialInput[]
    connectOrCreate?: ItemPedidoCreateOrConnectWithoutMaterialInput | ItemPedidoCreateOrConnectWithoutMaterialInput[]
    upsert?: ItemPedidoUpsertWithWhereUniqueWithoutMaterialInput | ItemPedidoUpsertWithWhereUniqueWithoutMaterialInput[]
    createMany?: ItemPedidoCreateManyMaterialInputEnvelope
    set?: ItemPedidoWhereUniqueInput | ItemPedidoWhereUniqueInput[]
    disconnect?: ItemPedidoWhereUniqueInput | ItemPedidoWhereUniqueInput[]
    delete?: ItemPedidoWhereUniqueInput | ItemPedidoWhereUniqueInput[]
    connect?: ItemPedidoWhereUniqueInput | ItemPedidoWhereUniqueInput[]
    update?: ItemPedidoUpdateWithWhereUniqueWithoutMaterialInput | ItemPedidoUpdateWithWhereUniqueWithoutMaterialInput[]
    updateMany?: ItemPedidoUpdateManyWithWhereWithoutMaterialInput | ItemPedidoUpdateManyWithWhereWithoutMaterialInput[]
    deleteMany?: ItemPedidoScalarWhereInput | ItemPedidoScalarWhereInput[]
  }

  export type MovimentacaoEstoqueUncheckedUpdateManyWithoutMaterialNestedInput = {
    create?: XOR<MovimentacaoEstoqueCreateWithoutMaterialInput, MovimentacaoEstoqueUncheckedCreateWithoutMaterialInput> | MovimentacaoEstoqueCreateWithoutMaterialInput[] | MovimentacaoEstoqueUncheckedCreateWithoutMaterialInput[]
    connectOrCreate?: MovimentacaoEstoqueCreateOrConnectWithoutMaterialInput | MovimentacaoEstoqueCreateOrConnectWithoutMaterialInput[]
    upsert?: MovimentacaoEstoqueUpsertWithWhereUniqueWithoutMaterialInput | MovimentacaoEstoqueUpsertWithWhereUniqueWithoutMaterialInput[]
    createMany?: MovimentacaoEstoqueCreateManyMaterialInputEnvelope
    set?: MovimentacaoEstoqueWhereUniqueInput | MovimentacaoEstoqueWhereUniqueInput[]
    disconnect?: MovimentacaoEstoqueWhereUniqueInput | MovimentacaoEstoqueWhereUniqueInput[]
    delete?: MovimentacaoEstoqueWhereUniqueInput | MovimentacaoEstoqueWhereUniqueInput[]
    connect?: MovimentacaoEstoqueWhereUniqueInput | MovimentacaoEstoqueWhereUniqueInput[]
    update?: MovimentacaoEstoqueUpdateWithWhereUniqueWithoutMaterialInput | MovimentacaoEstoqueUpdateWithWhereUniqueWithoutMaterialInput[]
    updateMany?: MovimentacaoEstoqueUpdateManyWithWhereWithoutMaterialInput | MovimentacaoEstoqueUpdateManyWithWhereWithoutMaterialInput[]
    deleteMany?: MovimentacaoEstoqueScalarWhereInput | MovimentacaoEstoqueScalarWhereInput[]
  }

  export type PrecoPorTabelaUncheckedUpdateManyWithoutMaterialNestedInput = {
    create?: XOR<PrecoPorTabelaCreateWithoutMaterialInput, PrecoPorTabelaUncheckedCreateWithoutMaterialInput> | PrecoPorTabelaCreateWithoutMaterialInput[] | PrecoPorTabelaUncheckedCreateWithoutMaterialInput[]
    connectOrCreate?: PrecoPorTabelaCreateOrConnectWithoutMaterialInput | PrecoPorTabelaCreateOrConnectWithoutMaterialInput[]
    upsert?: PrecoPorTabelaUpsertWithWhereUniqueWithoutMaterialInput | PrecoPorTabelaUpsertWithWhereUniqueWithoutMaterialInput[]
    createMany?: PrecoPorTabelaCreateManyMaterialInputEnvelope
    set?: PrecoPorTabelaWhereUniqueInput | PrecoPorTabelaWhereUniqueInput[]
    disconnect?: PrecoPorTabelaWhereUniqueInput | PrecoPorTabelaWhereUniqueInput[]
    delete?: PrecoPorTabelaWhereUniqueInput | PrecoPorTabelaWhereUniqueInput[]
    connect?: PrecoPorTabelaWhereUniqueInput | PrecoPorTabelaWhereUniqueInput[]
    update?: PrecoPorTabelaUpdateWithWhereUniqueWithoutMaterialInput | PrecoPorTabelaUpdateWithWhereUniqueWithoutMaterialInput[]
    updateMany?: PrecoPorTabelaUpdateManyWithWhereWithoutMaterialInput | PrecoPorTabelaUpdateManyWithWhereWithoutMaterialInput[]
    deleteMany?: PrecoPorTabelaScalarWhereInput | PrecoPorTabelaScalarWhereInput[]
  }

  export type MaterialCreateNestedManyWithoutCategoriaInput = {
    create?: XOR<MaterialCreateWithoutCategoriaInput, MaterialUncheckedCreateWithoutCategoriaInput> | MaterialCreateWithoutCategoriaInput[] | MaterialUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: MaterialCreateOrConnectWithoutCategoriaInput | MaterialCreateOrConnectWithoutCategoriaInput[]
    createMany?: MaterialCreateManyCategoriaInputEnvelope
    connect?: MaterialWhereUniqueInput | MaterialWhereUniqueInput[]
  }

  export type MaterialUncheckedCreateNestedManyWithoutCategoriaInput = {
    create?: XOR<MaterialCreateWithoutCategoriaInput, MaterialUncheckedCreateWithoutCategoriaInput> | MaterialCreateWithoutCategoriaInput[] | MaterialUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: MaterialCreateOrConnectWithoutCategoriaInput | MaterialCreateOrConnectWithoutCategoriaInput[]
    createMany?: MaterialCreateManyCategoriaInputEnvelope
    connect?: MaterialWhereUniqueInput | MaterialWhereUniqueInput[]
  }

  export type MaterialUpdateManyWithoutCategoriaNestedInput = {
    create?: XOR<MaterialCreateWithoutCategoriaInput, MaterialUncheckedCreateWithoutCategoriaInput> | MaterialCreateWithoutCategoriaInput[] | MaterialUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: MaterialCreateOrConnectWithoutCategoriaInput | MaterialCreateOrConnectWithoutCategoriaInput[]
    upsert?: MaterialUpsertWithWhereUniqueWithoutCategoriaInput | MaterialUpsertWithWhereUniqueWithoutCategoriaInput[]
    createMany?: MaterialCreateManyCategoriaInputEnvelope
    set?: MaterialWhereUniqueInput | MaterialWhereUniqueInput[]
    disconnect?: MaterialWhereUniqueInput | MaterialWhereUniqueInput[]
    delete?: MaterialWhereUniqueInput | MaterialWhereUniqueInput[]
    connect?: MaterialWhereUniqueInput | MaterialWhereUniqueInput[]
    update?: MaterialUpdateWithWhereUniqueWithoutCategoriaInput | MaterialUpdateWithWhereUniqueWithoutCategoriaInput[]
    updateMany?: MaterialUpdateManyWithWhereWithoutCategoriaInput | MaterialUpdateManyWithWhereWithoutCategoriaInput[]
    deleteMany?: MaterialScalarWhereInput | MaterialScalarWhereInput[]
  }

  export type MaterialUncheckedUpdateManyWithoutCategoriaNestedInput = {
    create?: XOR<MaterialCreateWithoutCategoriaInput, MaterialUncheckedCreateWithoutCategoriaInput> | MaterialCreateWithoutCategoriaInput[] | MaterialUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: MaterialCreateOrConnectWithoutCategoriaInput | MaterialCreateOrConnectWithoutCategoriaInput[]
    upsert?: MaterialUpsertWithWhereUniqueWithoutCategoriaInput | MaterialUpsertWithWhereUniqueWithoutCategoriaInput[]
    createMany?: MaterialCreateManyCategoriaInputEnvelope
    set?: MaterialWhereUniqueInput | MaterialWhereUniqueInput[]
    disconnect?: MaterialWhereUniqueInput | MaterialWhereUniqueInput[]
    delete?: MaterialWhereUniqueInput | MaterialWhereUniqueInput[]
    connect?: MaterialWhereUniqueInput | MaterialWhereUniqueInput[]
    update?: MaterialUpdateWithWhereUniqueWithoutCategoriaInput | MaterialUpdateWithWhereUniqueWithoutCategoriaInput[]
    updateMany?: MaterialUpdateManyWithWhereWithoutCategoriaInput | MaterialUpdateManyWithWhereWithoutCategoriaInput[]
    deleteMany?: MaterialScalarWhereInput | MaterialScalarWhereInput[]
  }

  export type MaterialCreateNestedOneWithoutItemsInput = {
    create?: XOR<MaterialCreateWithoutItemsInput, MaterialUncheckedCreateWithoutItemsInput>
    connectOrCreate?: MaterialCreateOrConnectWithoutItemsInput
    connect?: MaterialWhereUniqueInput
  }

  export type PedidoCreateNestedOneWithoutItemsInput = {
    create?: XOR<PedidoCreateWithoutItemsInput, PedidoUncheckedCreateWithoutItemsInput>
    connectOrCreate?: PedidoCreateOrConnectWithoutItemsInput
    connect?: PedidoWhereUniqueInput
  }

  export type MaterialUpdateOneRequiredWithoutItemsNestedInput = {
    create?: XOR<MaterialCreateWithoutItemsInput, MaterialUncheckedCreateWithoutItemsInput>
    connectOrCreate?: MaterialCreateOrConnectWithoutItemsInput
    upsert?: MaterialUpsertWithoutItemsInput
    connect?: MaterialWhereUniqueInput
    update?: XOR<XOR<MaterialUpdateToOneWithWhereWithoutItemsInput, MaterialUpdateWithoutItemsInput>, MaterialUncheckedUpdateWithoutItemsInput>
  }

  export type PedidoUpdateOneRequiredWithoutItemsNestedInput = {
    create?: XOR<PedidoCreateWithoutItemsInput, PedidoUncheckedCreateWithoutItemsInput>
    connectOrCreate?: PedidoCreateOrConnectWithoutItemsInput
    upsert?: PedidoUpsertWithoutItemsInput
    connect?: PedidoWhereUniqueInput
    update?: XOR<XOR<PedidoUpdateToOneWithWhereWithoutItemsInput, PedidoUpdateWithoutItemsInput>, PedidoUncheckedUpdateWithoutItemsInput>
  }

  export type ItemPedidoCreateNestedManyWithoutPedidoInput = {
    create?: XOR<ItemPedidoCreateWithoutPedidoInput, ItemPedidoUncheckedCreateWithoutPedidoInput> | ItemPedidoCreateWithoutPedidoInput[] | ItemPedidoUncheckedCreateWithoutPedidoInput[]
    connectOrCreate?: ItemPedidoCreateOrConnectWithoutPedidoInput | ItemPedidoCreateOrConnectWithoutPedidoInput[]
    createMany?: ItemPedidoCreateManyPedidoInputEnvelope
    connect?: ItemPedidoWhereUniqueInput | ItemPedidoWhereUniqueInput[]
  }

  export type PagamentoCreateNestedManyWithoutPedidoInput = {
    create?: XOR<PagamentoCreateWithoutPedidoInput, PagamentoUncheckedCreateWithoutPedidoInput> | PagamentoCreateWithoutPedidoInput[] | PagamentoUncheckedCreateWithoutPedidoInput[]
    connectOrCreate?: PagamentoCreateOrConnectWithoutPedidoInput | PagamentoCreateOrConnectWithoutPedidoInput[]
    createMany?: PagamentoCreateManyPedidoInputEnvelope
    connect?: PagamentoWhereUniqueInput | PagamentoWhereUniqueInput[]
  }

  export type RegistroCreateNestedOneWithoutPedidosInput = {
    create?: XOR<RegistroCreateWithoutPedidosInput, RegistroUncheckedCreateWithoutPedidosInput>
    connectOrCreate?: RegistroCreateOrConnectWithoutPedidosInput
    connect?: RegistroWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutPedidosInput = {
    create?: XOR<UserCreateWithoutPedidosInput, UserUncheckedCreateWithoutPedidosInput>
    connectOrCreate?: UserCreateOrConnectWithoutPedidosInput
    connect?: UserWhereUniqueInput
  }

  export type ItemPedidoUncheckedCreateNestedManyWithoutPedidoInput = {
    create?: XOR<ItemPedidoCreateWithoutPedidoInput, ItemPedidoUncheckedCreateWithoutPedidoInput> | ItemPedidoCreateWithoutPedidoInput[] | ItemPedidoUncheckedCreateWithoutPedidoInput[]
    connectOrCreate?: ItemPedidoCreateOrConnectWithoutPedidoInput | ItemPedidoCreateOrConnectWithoutPedidoInput[]
    createMany?: ItemPedidoCreateManyPedidoInputEnvelope
    connect?: ItemPedidoWhereUniqueInput | ItemPedidoWhereUniqueInput[]
  }

  export type PagamentoUncheckedCreateNestedManyWithoutPedidoInput = {
    create?: XOR<PagamentoCreateWithoutPedidoInput, PagamentoUncheckedCreateWithoutPedidoInput> | PagamentoCreateWithoutPedidoInput[] | PagamentoUncheckedCreateWithoutPedidoInput[]
    connectOrCreate?: PagamentoCreateOrConnectWithoutPedidoInput | PagamentoCreateOrConnectWithoutPedidoInput[]
    createMany?: PagamentoCreateManyPedidoInputEnvelope
    connect?: PagamentoWhereUniqueInput | PagamentoWhereUniqueInput[]
  }

  export type EnumTipoPedidoFieldUpdateOperationsInput = {
    set?: $Enums.TipoPedido
  }

  export type EnumTipoStatusPedidoFieldUpdateOperationsInput = {
    set?: $Enums.TipoStatusPedido
  }

  export type ItemPedidoUpdateManyWithoutPedidoNestedInput = {
    create?: XOR<ItemPedidoCreateWithoutPedidoInput, ItemPedidoUncheckedCreateWithoutPedidoInput> | ItemPedidoCreateWithoutPedidoInput[] | ItemPedidoUncheckedCreateWithoutPedidoInput[]
    connectOrCreate?: ItemPedidoCreateOrConnectWithoutPedidoInput | ItemPedidoCreateOrConnectWithoutPedidoInput[]
    upsert?: ItemPedidoUpsertWithWhereUniqueWithoutPedidoInput | ItemPedidoUpsertWithWhereUniqueWithoutPedidoInput[]
    createMany?: ItemPedidoCreateManyPedidoInputEnvelope
    set?: ItemPedidoWhereUniqueInput | ItemPedidoWhereUniqueInput[]
    disconnect?: ItemPedidoWhereUniqueInput | ItemPedidoWhereUniqueInput[]
    delete?: ItemPedidoWhereUniqueInput | ItemPedidoWhereUniqueInput[]
    connect?: ItemPedidoWhereUniqueInput | ItemPedidoWhereUniqueInput[]
    update?: ItemPedidoUpdateWithWhereUniqueWithoutPedidoInput | ItemPedidoUpdateWithWhereUniqueWithoutPedidoInput[]
    updateMany?: ItemPedidoUpdateManyWithWhereWithoutPedidoInput | ItemPedidoUpdateManyWithWhereWithoutPedidoInput[]
    deleteMany?: ItemPedidoScalarWhereInput | ItemPedidoScalarWhereInput[]
  }

  export type PagamentoUpdateManyWithoutPedidoNestedInput = {
    create?: XOR<PagamentoCreateWithoutPedidoInput, PagamentoUncheckedCreateWithoutPedidoInput> | PagamentoCreateWithoutPedidoInput[] | PagamentoUncheckedCreateWithoutPedidoInput[]
    connectOrCreate?: PagamentoCreateOrConnectWithoutPedidoInput | PagamentoCreateOrConnectWithoutPedidoInput[]
    upsert?: PagamentoUpsertWithWhereUniqueWithoutPedidoInput | PagamentoUpsertWithWhereUniqueWithoutPedidoInput[]
    createMany?: PagamentoCreateManyPedidoInputEnvelope
    set?: PagamentoWhereUniqueInput | PagamentoWhereUniqueInput[]
    disconnect?: PagamentoWhereUniqueInput | PagamentoWhereUniqueInput[]
    delete?: PagamentoWhereUniqueInput | PagamentoWhereUniqueInput[]
    connect?: PagamentoWhereUniqueInput | PagamentoWhereUniqueInput[]
    update?: PagamentoUpdateWithWhereUniqueWithoutPedidoInput | PagamentoUpdateWithWhereUniqueWithoutPedidoInput[]
    updateMany?: PagamentoUpdateManyWithWhereWithoutPedidoInput | PagamentoUpdateManyWithWhereWithoutPedidoInput[]
    deleteMany?: PagamentoScalarWhereInput | PagamentoScalarWhereInput[]
  }

  export type RegistroUpdateOneWithoutPedidosNestedInput = {
    create?: XOR<RegistroCreateWithoutPedidosInput, RegistroUncheckedCreateWithoutPedidosInput>
    connectOrCreate?: RegistroCreateOrConnectWithoutPedidosInput
    upsert?: RegistroUpsertWithoutPedidosInput
    disconnect?: RegistroWhereInput | boolean
    delete?: RegistroWhereInput | boolean
    connect?: RegistroWhereUniqueInput
    update?: XOR<XOR<RegistroUpdateToOneWithWhereWithoutPedidosInput, RegistroUpdateWithoutPedidosInput>, RegistroUncheckedUpdateWithoutPedidosInput>
  }

  export type UserUpdateOneRequiredWithoutPedidosNestedInput = {
    create?: XOR<UserCreateWithoutPedidosInput, UserUncheckedCreateWithoutPedidosInput>
    connectOrCreate?: UserCreateOrConnectWithoutPedidosInput
    upsert?: UserUpsertWithoutPedidosInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutPedidosInput, UserUpdateWithoutPedidosInput>, UserUncheckedUpdateWithoutPedidosInput>
  }

  export type ItemPedidoUncheckedUpdateManyWithoutPedidoNestedInput = {
    create?: XOR<ItemPedidoCreateWithoutPedidoInput, ItemPedidoUncheckedCreateWithoutPedidoInput> | ItemPedidoCreateWithoutPedidoInput[] | ItemPedidoUncheckedCreateWithoutPedidoInput[]
    connectOrCreate?: ItemPedidoCreateOrConnectWithoutPedidoInput | ItemPedidoCreateOrConnectWithoutPedidoInput[]
    upsert?: ItemPedidoUpsertWithWhereUniqueWithoutPedidoInput | ItemPedidoUpsertWithWhereUniqueWithoutPedidoInput[]
    createMany?: ItemPedidoCreateManyPedidoInputEnvelope
    set?: ItemPedidoWhereUniqueInput | ItemPedidoWhereUniqueInput[]
    disconnect?: ItemPedidoWhereUniqueInput | ItemPedidoWhereUniqueInput[]
    delete?: ItemPedidoWhereUniqueInput | ItemPedidoWhereUniqueInput[]
    connect?: ItemPedidoWhereUniqueInput | ItemPedidoWhereUniqueInput[]
    update?: ItemPedidoUpdateWithWhereUniqueWithoutPedidoInput | ItemPedidoUpdateWithWhereUniqueWithoutPedidoInput[]
    updateMany?: ItemPedidoUpdateManyWithWhereWithoutPedidoInput | ItemPedidoUpdateManyWithWhereWithoutPedidoInput[]
    deleteMany?: ItemPedidoScalarWhereInput | ItemPedidoScalarWhereInput[]
  }

  export type PagamentoUncheckedUpdateManyWithoutPedidoNestedInput = {
    create?: XOR<PagamentoCreateWithoutPedidoInput, PagamentoUncheckedCreateWithoutPedidoInput> | PagamentoCreateWithoutPedidoInput[] | PagamentoUncheckedCreateWithoutPedidoInput[]
    connectOrCreate?: PagamentoCreateOrConnectWithoutPedidoInput | PagamentoCreateOrConnectWithoutPedidoInput[]
    upsert?: PagamentoUpsertWithWhereUniqueWithoutPedidoInput | PagamentoUpsertWithWhereUniqueWithoutPedidoInput[]
    createMany?: PagamentoCreateManyPedidoInputEnvelope
    set?: PagamentoWhereUniqueInput | PagamentoWhereUniqueInput[]
    disconnect?: PagamentoWhereUniqueInput | PagamentoWhereUniqueInput[]
    delete?: PagamentoWhereUniqueInput | PagamentoWhereUniqueInput[]
    connect?: PagamentoWhereUniqueInput | PagamentoWhereUniqueInput[]
    update?: PagamentoUpdateWithWhereUniqueWithoutPedidoInput | PagamentoUpdateWithWhereUniqueWithoutPedidoInput[]
    updateMany?: PagamentoUpdateManyWithWhereWithoutPedidoInput | PagamentoUpdateManyWithWhereWithoutPedidoInput[]
    deleteMany?: PagamentoScalarWhereInput | PagamentoScalarWhereInput[]
  }

  export type PedidoCreateNestedOneWithoutPagamentosInput = {
    create?: XOR<PedidoCreateWithoutPagamentosInput, PedidoUncheckedCreateWithoutPagamentosInput>
    connectOrCreate?: PedidoCreateOrConnectWithoutPagamentosInput
    connect?: PedidoWhereUniqueInput
  }

  export type EnumFormaPagamentoFieldUpdateOperationsInput = {
    set?: $Enums.FormaPagamento
  }

  export type PedidoUpdateOneRequiredWithoutPagamentosNestedInput = {
    create?: XOR<PedidoCreateWithoutPagamentosInput, PedidoUncheckedCreateWithoutPagamentosInput>
    connectOrCreate?: PedidoCreateOrConnectWithoutPagamentosInput
    upsert?: PedidoUpsertWithoutPagamentosInput
    connect?: PedidoWhereUniqueInput
    update?: XOR<XOR<PedidoUpdateToOneWithWhereWithoutPagamentosInput, PedidoUpdateWithoutPagamentosInput>, PedidoUncheckedUpdateWithoutPagamentosInput>
  }

  export type MovimentacaoFinanceiraCreateNestedManyWithoutContaInput = {
    create?: XOR<MovimentacaoFinanceiraCreateWithoutContaInput, MovimentacaoFinanceiraUncheckedCreateWithoutContaInput> | MovimentacaoFinanceiraCreateWithoutContaInput[] | MovimentacaoFinanceiraUncheckedCreateWithoutContaInput[]
    connectOrCreate?: MovimentacaoFinanceiraCreateOrConnectWithoutContaInput | MovimentacaoFinanceiraCreateOrConnectWithoutContaInput[]
    createMany?: MovimentacaoFinanceiraCreateManyContaInputEnvelope
    connect?: MovimentacaoFinanceiraWhereUniqueInput | MovimentacaoFinanceiraWhereUniqueInput[]
  }

  export type MovimentacaoFinanceiraUncheckedCreateNestedManyWithoutContaInput = {
    create?: XOR<MovimentacaoFinanceiraCreateWithoutContaInput, MovimentacaoFinanceiraUncheckedCreateWithoutContaInput> | MovimentacaoFinanceiraCreateWithoutContaInput[] | MovimentacaoFinanceiraUncheckedCreateWithoutContaInput[]
    connectOrCreate?: MovimentacaoFinanceiraCreateOrConnectWithoutContaInput | MovimentacaoFinanceiraCreateOrConnectWithoutContaInput[]
    createMany?: MovimentacaoFinanceiraCreateManyContaInputEnvelope
    connect?: MovimentacaoFinanceiraWhereUniqueInput | MovimentacaoFinanceiraWhereUniqueInput[]
  }

  export type MovimentacaoFinanceiraUpdateManyWithoutContaNestedInput = {
    create?: XOR<MovimentacaoFinanceiraCreateWithoutContaInput, MovimentacaoFinanceiraUncheckedCreateWithoutContaInput> | MovimentacaoFinanceiraCreateWithoutContaInput[] | MovimentacaoFinanceiraUncheckedCreateWithoutContaInput[]
    connectOrCreate?: MovimentacaoFinanceiraCreateOrConnectWithoutContaInput | MovimentacaoFinanceiraCreateOrConnectWithoutContaInput[]
    upsert?: MovimentacaoFinanceiraUpsertWithWhereUniqueWithoutContaInput | MovimentacaoFinanceiraUpsertWithWhereUniqueWithoutContaInput[]
    createMany?: MovimentacaoFinanceiraCreateManyContaInputEnvelope
    set?: MovimentacaoFinanceiraWhereUniqueInput | MovimentacaoFinanceiraWhereUniqueInput[]
    disconnect?: MovimentacaoFinanceiraWhereUniqueInput | MovimentacaoFinanceiraWhereUniqueInput[]
    delete?: MovimentacaoFinanceiraWhereUniqueInput | MovimentacaoFinanceiraWhereUniqueInput[]
    connect?: MovimentacaoFinanceiraWhereUniqueInput | MovimentacaoFinanceiraWhereUniqueInput[]
    update?: MovimentacaoFinanceiraUpdateWithWhereUniqueWithoutContaInput | MovimentacaoFinanceiraUpdateWithWhereUniqueWithoutContaInput[]
    updateMany?: MovimentacaoFinanceiraUpdateManyWithWhereWithoutContaInput | MovimentacaoFinanceiraUpdateManyWithWhereWithoutContaInput[]
    deleteMany?: MovimentacaoFinanceiraScalarWhereInput | MovimentacaoFinanceiraScalarWhereInput[]
  }

  export type MovimentacaoFinanceiraUncheckedUpdateManyWithoutContaNestedInput = {
    create?: XOR<MovimentacaoFinanceiraCreateWithoutContaInput, MovimentacaoFinanceiraUncheckedCreateWithoutContaInput> | MovimentacaoFinanceiraCreateWithoutContaInput[] | MovimentacaoFinanceiraUncheckedCreateWithoutContaInput[]
    connectOrCreate?: MovimentacaoFinanceiraCreateOrConnectWithoutContaInput | MovimentacaoFinanceiraCreateOrConnectWithoutContaInput[]
    upsert?: MovimentacaoFinanceiraUpsertWithWhereUniqueWithoutContaInput | MovimentacaoFinanceiraUpsertWithWhereUniqueWithoutContaInput[]
    createMany?: MovimentacaoFinanceiraCreateManyContaInputEnvelope
    set?: MovimentacaoFinanceiraWhereUniqueInput | MovimentacaoFinanceiraWhereUniqueInput[]
    disconnect?: MovimentacaoFinanceiraWhereUniqueInput | MovimentacaoFinanceiraWhereUniqueInput[]
    delete?: MovimentacaoFinanceiraWhereUniqueInput | MovimentacaoFinanceiraWhereUniqueInput[]
    connect?: MovimentacaoFinanceiraWhereUniqueInput | MovimentacaoFinanceiraWhereUniqueInput[]
    update?: MovimentacaoFinanceiraUpdateWithWhereUniqueWithoutContaInput | MovimentacaoFinanceiraUpdateWithWhereUniqueWithoutContaInput[]
    updateMany?: MovimentacaoFinanceiraUpdateManyWithWhereWithoutContaInput | MovimentacaoFinanceiraUpdateManyWithWhereWithoutContaInput[]
    deleteMany?: MovimentacaoFinanceiraScalarWhereInput | MovimentacaoFinanceiraScalarWhereInput[]
  }

  export type ContaCreateNestedOneWithoutMovimentacoesInput = {
    create?: XOR<ContaCreateWithoutMovimentacoesInput, ContaUncheckedCreateWithoutMovimentacoesInput>
    connectOrCreate?: ContaCreateOrConnectWithoutMovimentacoesInput
    connect?: ContaWhereUniqueInput
  }

  export type LivroCaixaCreateNestedOneWithoutMovimentacoesInput = {
    create?: XOR<LivroCaixaCreateWithoutMovimentacoesInput, LivroCaixaUncheckedCreateWithoutMovimentacoesInput>
    connectOrCreate?: LivroCaixaCreateOrConnectWithoutMovimentacoesInput
    connect?: LivroCaixaWhereUniqueInput
  }

  export type EnumTipoMovimentacaoFieldUpdateOperationsInput = {
    set?: $Enums.TipoMovimentacao
  }

  export type EnumTipoOrigemFieldUpdateOperationsInput = {
    set?: $Enums.TipoOrigem
  }

  export type ContaUpdateOneRequiredWithoutMovimentacoesNestedInput = {
    create?: XOR<ContaCreateWithoutMovimentacoesInput, ContaUncheckedCreateWithoutMovimentacoesInput>
    connectOrCreate?: ContaCreateOrConnectWithoutMovimentacoesInput
    upsert?: ContaUpsertWithoutMovimentacoesInput
    connect?: ContaWhereUniqueInput
    update?: XOR<XOR<ContaUpdateToOneWithWhereWithoutMovimentacoesInput, ContaUpdateWithoutMovimentacoesInput>, ContaUncheckedUpdateWithoutMovimentacoesInput>
  }

  export type LivroCaixaUpdateOneRequiredWithoutMovimentacoesNestedInput = {
    create?: XOR<LivroCaixaCreateWithoutMovimentacoesInput, LivroCaixaUncheckedCreateWithoutMovimentacoesInput>
    connectOrCreate?: LivroCaixaCreateOrConnectWithoutMovimentacoesInput
    upsert?: LivroCaixaUpsertWithoutMovimentacoesInput
    connect?: LivroCaixaWhereUniqueInput
    update?: XOR<XOR<LivroCaixaUpdateToOneWithWhereWithoutMovimentacoesInput, LivroCaixaUpdateWithoutMovimentacoesInput>, LivroCaixaUncheckedUpdateWithoutMovimentacoesInput>
  }

  export type ConversaoEstoqueCreateNestedOneWithoutMovimentacoesInput = {
    create?: XOR<ConversaoEstoqueCreateWithoutMovimentacoesInput, ConversaoEstoqueUncheckedCreateWithoutMovimentacoesInput>
    connectOrCreate?: ConversaoEstoqueCreateOrConnectWithoutMovimentacoesInput
    connect?: ConversaoEstoqueWhereUniqueInput
  }

  export type MaterialCreateNestedOneWithoutMovimentacoesInput = {
    create?: XOR<MaterialCreateWithoutMovimentacoesInput, MaterialUncheckedCreateWithoutMovimentacoesInput>
    connectOrCreate?: MaterialCreateOrConnectWithoutMovimentacoesInput
    connect?: MaterialWhereUniqueInput
  }

  export type EnumTipoMovimentacaoEstoqueFieldUpdateOperationsInput = {
    set?: $Enums.TipoMovimentacaoEstoque
  }

  export type EnumOrigemMovimentacaoEstoqueFieldUpdateOperationsInput = {
    set?: $Enums.OrigemMovimentacaoEstoque
  }

  export type ConversaoEstoqueUpdateOneWithoutMovimentacoesNestedInput = {
    create?: XOR<ConversaoEstoqueCreateWithoutMovimentacoesInput, ConversaoEstoqueUncheckedCreateWithoutMovimentacoesInput>
    connectOrCreate?: ConversaoEstoqueCreateOrConnectWithoutMovimentacoesInput
    upsert?: ConversaoEstoqueUpsertWithoutMovimentacoesInput
    disconnect?: ConversaoEstoqueWhereInput | boolean
    delete?: ConversaoEstoqueWhereInput | boolean
    connect?: ConversaoEstoqueWhereUniqueInput
    update?: XOR<XOR<ConversaoEstoqueUpdateToOneWithWhereWithoutMovimentacoesInput, ConversaoEstoqueUpdateWithoutMovimentacoesInput>, ConversaoEstoqueUncheckedUpdateWithoutMovimentacoesInput>
  }

  export type MaterialUpdateOneRequiredWithoutMovimentacoesNestedInput = {
    create?: XOR<MaterialCreateWithoutMovimentacoesInput, MaterialUncheckedCreateWithoutMovimentacoesInput>
    connectOrCreate?: MaterialCreateOrConnectWithoutMovimentacoesInput
    upsert?: MaterialUpsertWithoutMovimentacoesInput
    connect?: MaterialWhereUniqueInput
    update?: XOR<XOR<MaterialUpdateToOneWithWhereWithoutMovimentacoesInput, MaterialUpdateWithoutMovimentacoesInput>, MaterialUncheckedUpdateWithoutMovimentacoesInput>
  }

  export type MovimentacaoEstoqueCreateNestedManyWithoutConversaoEstoqueInput = {
    create?: XOR<MovimentacaoEstoqueCreateWithoutConversaoEstoqueInput, MovimentacaoEstoqueUncheckedCreateWithoutConversaoEstoqueInput> | MovimentacaoEstoqueCreateWithoutConversaoEstoqueInput[] | MovimentacaoEstoqueUncheckedCreateWithoutConversaoEstoqueInput[]
    connectOrCreate?: MovimentacaoEstoqueCreateOrConnectWithoutConversaoEstoqueInput | MovimentacaoEstoqueCreateOrConnectWithoutConversaoEstoqueInput[]
    createMany?: MovimentacaoEstoqueCreateManyConversaoEstoqueInputEnvelope
    connect?: MovimentacaoEstoqueWhereUniqueInput | MovimentacaoEstoqueWhereUniqueInput[]
  }

  export type MovimentacaoEstoqueUncheckedCreateNestedManyWithoutConversaoEstoqueInput = {
    create?: XOR<MovimentacaoEstoqueCreateWithoutConversaoEstoqueInput, MovimentacaoEstoqueUncheckedCreateWithoutConversaoEstoqueInput> | MovimentacaoEstoqueCreateWithoutConversaoEstoqueInput[] | MovimentacaoEstoqueUncheckedCreateWithoutConversaoEstoqueInput[]
    connectOrCreate?: MovimentacaoEstoqueCreateOrConnectWithoutConversaoEstoqueInput | MovimentacaoEstoqueCreateOrConnectWithoutConversaoEstoqueInput[]
    createMany?: MovimentacaoEstoqueCreateManyConversaoEstoqueInputEnvelope
    connect?: MovimentacaoEstoqueWhereUniqueInput | MovimentacaoEstoqueWhereUniqueInput[]
  }

  export type MovimentacaoEstoqueUpdateManyWithoutConversaoEstoqueNestedInput = {
    create?: XOR<MovimentacaoEstoqueCreateWithoutConversaoEstoqueInput, MovimentacaoEstoqueUncheckedCreateWithoutConversaoEstoqueInput> | MovimentacaoEstoqueCreateWithoutConversaoEstoqueInput[] | MovimentacaoEstoqueUncheckedCreateWithoutConversaoEstoqueInput[]
    connectOrCreate?: MovimentacaoEstoqueCreateOrConnectWithoutConversaoEstoqueInput | MovimentacaoEstoqueCreateOrConnectWithoutConversaoEstoqueInput[]
    upsert?: MovimentacaoEstoqueUpsertWithWhereUniqueWithoutConversaoEstoqueInput | MovimentacaoEstoqueUpsertWithWhereUniqueWithoutConversaoEstoqueInput[]
    createMany?: MovimentacaoEstoqueCreateManyConversaoEstoqueInputEnvelope
    set?: MovimentacaoEstoqueWhereUniqueInput | MovimentacaoEstoqueWhereUniqueInput[]
    disconnect?: MovimentacaoEstoqueWhereUniqueInput | MovimentacaoEstoqueWhereUniqueInput[]
    delete?: MovimentacaoEstoqueWhereUniqueInput | MovimentacaoEstoqueWhereUniqueInput[]
    connect?: MovimentacaoEstoqueWhereUniqueInput | MovimentacaoEstoqueWhereUniqueInput[]
    update?: MovimentacaoEstoqueUpdateWithWhereUniqueWithoutConversaoEstoqueInput | MovimentacaoEstoqueUpdateWithWhereUniqueWithoutConversaoEstoqueInput[]
    updateMany?: MovimentacaoEstoqueUpdateManyWithWhereWithoutConversaoEstoqueInput | MovimentacaoEstoqueUpdateManyWithWhereWithoutConversaoEstoqueInput[]
    deleteMany?: MovimentacaoEstoqueScalarWhereInput | MovimentacaoEstoqueScalarWhereInput[]
  }

  export type MovimentacaoEstoqueUncheckedUpdateManyWithoutConversaoEstoqueNestedInput = {
    create?: XOR<MovimentacaoEstoqueCreateWithoutConversaoEstoqueInput, MovimentacaoEstoqueUncheckedCreateWithoutConversaoEstoqueInput> | MovimentacaoEstoqueCreateWithoutConversaoEstoqueInput[] | MovimentacaoEstoqueUncheckedCreateWithoutConversaoEstoqueInput[]
    connectOrCreate?: MovimentacaoEstoqueCreateOrConnectWithoutConversaoEstoqueInput | MovimentacaoEstoqueCreateOrConnectWithoutConversaoEstoqueInput[]
    upsert?: MovimentacaoEstoqueUpsertWithWhereUniqueWithoutConversaoEstoqueInput | MovimentacaoEstoqueUpsertWithWhereUniqueWithoutConversaoEstoqueInput[]
    createMany?: MovimentacaoEstoqueCreateManyConversaoEstoqueInputEnvelope
    set?: MovimentacaoEstoqueWhereUniqueInput | MovimentacaoEstoqueWhereUniqueInput[]
    disconnect?: MovimentacaoEstoqueWhereUniqueInput | MovimentacaoEstoqueWhereUniqueInput[]
    delete?: MovimentacaoEstoqueWhereUniqueInput | MovimentacaoEstoqueWhereUniqueInput[]
    connect?: MovimentacaoEstoqueWhereUniqueInput | MovimentacaoEstoqueWhereUniqueInput[]
    update?: MovimentacaoEstoqueUpdateWithWhereUniqueWithoutConversaoEstoqueInput | MovimentacaoEstoqueUpdateWithWhereUniqueWithoutConversaoEstoqueInput[]
    updateMany?: MovimentacaoEstoqueUpdateManyWithWhereWithoutConversaoEstoqueInput | MovimentacaoEstoqueUpdateManyWithWhereWithoutConversaoEstoqueInput[]
    deleteMany?: MovimentacaoEstoqueScalarWhereInput | MovimentacaoEstoqueScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutCaixasInput = {
    create?: XOR<UserCreateWithoutCaixasInput, UserUncheckedCreateWithoutCaixasInput>
    connectOrCreate?: UserCreateOrConnectWithoutCaixasInput
    connect?: UserWhereUniqueInput
  }

  export type MovimentacaoFinanceiraCreateNestedManyWithoutCaixaInput = {
    create?: XOR<MovimentacaoFinanceiraCreateWithoutCaixaInput, MovimentacaoFinanceiraUncheckedCreateWithoutCaixaInput> | MovimentacaoFinanceiraCreateWithoutCaixaInput[] | MovimentacaoFinanceiraUncheckedCreateWithoutCaixaInput[]
    connectOrCreate?: MovimentacaoFinanceiraCreateOrConnectWithoutCaixaInput | MovimentacaoFinanceiraCreateOrConnectWithoutCaixaInput[]
    createMany?: MovimentacaoFinanceiraCreateManyCaixaInputEnvelope
    connect?: MovimentacaoFinanceiraWhereUniqueInput | MovimentacaoFinanceiraWhereUniqueInput[]
  }

  export type MovimentacaoFinanceiraUncheckedCreateNestedManyWithoutCaixaInput = {
    create?: XOR<MovimentacaoFinanceiraCreateWithoutCaixaInput, MovimentacaoFinanceiraUncheckedCreateWithoutCaixaInput> | MovimentacaoFinanceiraCreateWithoutCaixaInput[] | MovimentacaoFinanceiraUncheckedCreateWithoutCaixaInput[]
    connectOrCreate?: MovimentacaoFinanceiraCreateOrConnectWithoutCaixaInput | MovimentacaoFinanceiraCreateOrConnectWithoutCaixaInput[]
    createMany?: MovimentacaoFinanceiraCreateManyCaixaInputEnvelope
    connect?: MovimentacaoFinanceiraWhereUniqueInput | MovimentacaoFinanceiraWhereUniqueInput[]
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type EnumStatusCaixaFieldUpdateOperationsInput = {
    set?: $Enums.StatusCaixa
  }

  export type UserUpdateOneRequiredWithoutCaixasNestedInput = {
    create?: XOR<UserCreateWithoutCaixasInput, UserUncheckedCreateWithoutCaixasInput>
    connectOrCreate?: UserCreateOrConnectWithoutCaixasInput
    upsert?: UserUpsertWithoutCaixasInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCaixasInput, UserUpdateWithoutCaixasInput>, UserUncheckedUpdateWithoutCaixasInput>
  }

  export type MovimentacaoFinanceiraUpdateManyWithoutCaixaNestedInput = {
    create?: XOR<MovimentacaoFinanceiraCreateWithoutCaixaInput, MovimentacaoFinanceiraUncheckedCreateWithoutCaixaInput> | MovimentacaoFinanceiraCreateWithoutCaixaInput[] | MovimentacaoFinanceiraUncheckedCreateWithoutCaixaInput[]
    connectOrCreate?: MovimentacaoFinanceiraCreateOrConnectWithoutCaixaInput | MovimentacaoFinanceiraCreateOrConnectWithoutCaixaInput[]
    upsert?: MovimentacaoFinanceiraUpsertWithWhereUniqueWithoutCaixaInput | MovimentacaoFinanceiraUpsertWithWhereUniqueWithoutCaixaInput[]
    createMany?: MovimentacaoFinanceiraCreateManyCaixaInputEnvelope
    set?: MovimentacaoFinanceiraWhereUniqueInput | MovimentacaoFinanceiraWhereUniqueInput[]
    disconnect?: MovimentacaoFinanceiraWhereUniqueInput | MovimentacaoFinanceiraWhereUniqueInput[]
    delete?: MovimentacaoFinanceiraWhereUniqueInput | MovimentacaoFinanceiraWhereUniqueInput[]
    connect?: MovimentacaoFinanceiraWhereUniqueInput | MovimentacaoFinanceiraWhereUniqueInput[]
    update?: MovimentacaoFinanceiraUpdateWithWhereUniqueWithoutCaixaInput | MovimentacaoFinanceiraUpdateWithWhereUniqueWithoutCaixaInput[]
    updateMany?: MovimentacaoFinanceiraUpdateManyWithWhereWithoutCaixaInput | MovimentacaoFinanceiraUpdateManyWithWhereWithoutCaixaInput[]
    deleteMany?: MovimentacaoFinanceiraScalarWhereInput | MovimentacaoFinanceiraScalarWhereInput[]
  }

  export type MovimentacaoFinanceiraUncheckedUpdateManyWithoutCaixaNestedInput = {
    create?: XOR<MovimentacaoFinanceiraCreateWithoutCaixaInput, MovimentacaoFinanceiraUncheckedCreateWithoutCaixaInput> | MovimentacaoFinanceiraCreateWithoutCaixaInput[] | MovimentacaoFinanceiraUncheckedCreateWithoutCaixaInput[]
    connectOrCreate?: MovimentacaoFinanceiraCreateOrConnectWithoutCaixaInput | MovimentacaoFinanceiraCreateOrConnectWithoutCaixaInput[]
    upsert?: MovimentacaoFinanceiraUpsertWithWhereUniqueWithoutCaixaInput | MovimentacaoFinanceiraUpsertWithWhereUniqueWithoutCaixaInput[]
    createMany?: MovimentacaoFinanceiraCreateManyCaixaInputEnvelope
    set?: MovimentacaoFinanceiraWhereUniqueInput | MovimentacaoFinanceiraWhereUniqueInput[]
    disconnect?: MovimentacaoFinanceiraWhereUniqueInput | MovimentacaoFinanceiraWhereUniqueInput[]
    delete?: MovimentacaoFinanceiraWhereUniqueInput | MovimentacaoFinanceiraWhereUniqueInput[]
    connect?: MovimentacaoFinanceiraWhereUniqueInput | MovimentacaoFinanceiraWhereUniqueInput[]
    update?: MovimentacaoFinanceiraUpdateWithWhereUniqueWithoutCaixaInput | MovimentacaoFinanceiraUpdateWithWhereUniqueWithoutCaixaInput[]
    updateMany?: MovimentacaoFinanceiraUpdateManyWithWhereWithoutCaixaInput | MovimentacaoFinanceiraUpdateManyWithWhereWithoutCaixaInput[]
    deleteMany?: MovimentacaoFinanceiraScalarWhereInput | MovimentacaoFinanceiraScalarWhereInput[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedEnumTipoRegistroFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoRegistro | EnumTipoRegistroFieldRefInput<$PrismaModel>
    in?: $Enums.TipoRegistro[] | ListEnumTipoRegistroFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoRegistro[] | ListEnumTipoRegistroFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoRegistroFilter<$PrismaModel> | $Enums.TipoRegistro
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedEnumTipoRegistroWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoRegistro | EnumTipoRegistroFieldRefInput<$PrismaModel>
    in?: $Enums.TipoRegistro[] | ListEnumTipoRegistroFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoRegistro[] | ListEnumTipoRegistroFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoRegistroWithAggregatesFilter<$PrismaModel> | $Enums.TipoRegistro
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoRegistroFilter<$PrismaModel>
    _max?: NestedEnumTipoRegistroFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedEnumTipoPedidoFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoPedido | EnumTipoPedidoFieldRefInput<$PrismaModel>
    in?: $Enums.TipoPedido[] | ListEnumTipoPedidoFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoPedido[] | ListEnumTipoPedidoFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoPedidoFilter<$PrismaModel> | $Enums.TipoPedido
  }

  export type NestedEnumTipoStatusPedidoFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoStatusPedido | EnumTipoStatusPedidoFieldRefInput<$PrismaModel>
    in?: $Enums.TipoStatusPedido[] | ListEnumTipoStatusPedidoFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoStatusPedido[] | ListEnumTipoStatusPedidoFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoStatusPedidoFilter<$PrismaModel> | $Enums.TipoStatusPedido
  }

  export type NestedEnumTipoPedidoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoPedido | EnumTipoPedidoFieldRefInput<$PrismaModel>
    in?: $Enums.TipoPedido[] | ListEnumTipoPedidoFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoPedido[] | ListEnumTipoPedidoFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoPedidoWithAggregatesFilter<$PrismaModel> | $Enums.TipoPedido
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoPedidoFilter<$PrismaModel>
    _max?: NestedEnumTipoPedidoFilter<$PrismaModel>
  }

  export type NestedEnumTipoStatusPedidoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoStatusPedido | EnumTipoStatusPedidoFieldRefInput<$PrismaModel>
    in?: $Enums.TipoStatusPedido[] | ListEnumTipoStatusPedidoFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoStatusPedido[] | ListEnumTipoStatusPedidoFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoStatusPedidoWithAggregatesFilter<$PrismaModel> | $Enums.TipoStatusPedido
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoStatusPedidoFilter<$PrismaModel>
    _max?: NestedEnumTipoStatusPedidoFilter<$PrismaModel>
  }

  export type NestedEnumFormaPagamentoFilter<$PrismaModel = never> = {
    equals?: $Enums.FormaPagamento | EnumFormaPagamentoFieldRefInput<$PrismaModel>
    in?: $Enums.FormaPagamento[] | ListEnumFormaPagamentoFieldRefInput<$PrismaModel>
    notIn?: $Enums.FormaPagamento[] | ListEnumFormaPagamentoFieldRefInput<$PrismaModel>
    not?: NestedEnumFormaPagamentoFilter<$PrismaModel> | $Enums.FormaPagamento
  }

  export type NestedEnumFormaPagamentoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.FormaPagamento | EnumFormaPagamentoFieldRefInput<$PrismaModel>
    in?: $Enums.FormaPagamento[] | ListEnumFormaPagamentoFieldRefInput<$PrismaModel>
    notIn?: $Enums.FormaPagamento[] | ListEnumFormaPagamentoFieldRefInput<$PrismaModel>
    not?: NestedEnumFormaPagamentoWithAggregatesFilter<$PrismaModel> | $Enums.FormaPagamento
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumFormaPagamentoFilter<$PrismaModel>
    _max?: NestedEnumFormaPagamentoFilter<$PrismaModel>
  }

  export type NestedEnumTipoMovimentacaoFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoMovimentacao | EnumTipoMovimentacaoFieldRefInput<$PrismaModel>
    in?: $Enums.TipoMovimentacao[] | ListEnumTipoMovimentacaoFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoMovimentacao[] | ListEnumTipoMovimentacaoFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoMovimentacaoFilter<$PrismaModel> | $Enums.TipoMovimentacao
  }

  export type NestedEnumTipoOrigemFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoOrigem | EnumTipoOrigemFieldRefInput<$PrismaModel>
    in?: $Enums.TipoOrigem[] | ListEnumTipoOrigemFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoOrigem[] | ListEnumTipoOrigemFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoOrigemFilter<$PrismaModel> | $Enums.TipoOrigem
  }

  export type NestedEnumTipoMovimentacaoWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoMovimentacao | EnumTipoMovimentacaoFieldRefInput<$PrismaModel>
    in?: $Enums.TipoMovimentacao[] | ListEnumTipoMovimentacaoFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoMovimentacao[] | ListEnumTipoMovimentacaoFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoMovimentacaoWithAggregatesFilter<$PrismaModel> | $Enums.TipoMovimentacao
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoMovimentacaoFilter<$PrismaModel>
    _max?: NestedEnumTipoMovimentacaoFilter<$PrismaModel>
  }

  export type NestedEnumTipoOrigemWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoOrigem | EnumTipoOrigemFieldRefInput<$PrismaModel>
    in?: $Enums.TipoOrigem[] | ListEnumTipoOrigemFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoOrigem[] | ListEnumTipoOrigemFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoOrigemWithAggregatesFilter<$PrismaModel> | $Enums.TipoOrigem
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoOrigemFilter<$PrismaModel>
    _max?: NestedEnumTipoOrigemFilter<$PrismaModel>
  }

  export type NestedEnumTipoMovimentacaoEstoqueFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoMovimentacaoEstoque | EnumTipoMovimentacaoEstoqueFieldRefInput<$PrismaModel>
    in?: $Enums.TipoMovimentacaoEstoque[] | ListEnumTipoMovimentacaoEstoqueFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoMovimentacaoEstoque[] | ListEnumTipoMovimentacaoEstoqueFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoMovimentacaoEstoqueFilter<$PrismaModel> | $Enums.TipoMovimentacaoEstoque
  }

  export type NestedEnumOrigemMovimentacaoEstoqueFilter<$PrismaModel = never> = {
    equals?: $Enums.OrigemMovimentacaoEstoque | EnumOrigemMovimentacaoEstoqueFieldRefInput<$PrismaModel>
    in?: $Enums.OrigemMovimentacaoEstoque[] | ListEnumOrigemMovimentacaoEstoqueFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrigemMovimentacaoEstoque[] | ListEnumOrigemMovimentacaoEstoqueFieldRefInput<$PrismaModel>
    not?: NestedEnumOrigemMovimentacaoEstoqueFilter<$PrismaModel> | $Enums.OrigemMovimentacaoEstoque
  }

  export type NestedEnumTipoMovimentacaoEstoqueWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TipoMovimentacaoEstoque | EnumTipoMovimentacaoEstoqueFieldRefInput<$PrismaModel>
    in?: $Enums.TipoMovimentacaoEstoque[] | ListEnumTipoMovimentacaoEstoqueFieldRefInput<$PrismaModel>
    notIn?: $Enums.TipoMovimentacaoEstoque[] | ListEnumTipoMovimentacaoEstoqueFieldRefInput<$PrismaModel>
    not?: NestedEnumTipoMovimentacaoEstoqueWithAggregatesFilter<$PrismaModel> | $Enums.TipoMovimentacaoEstoque
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTipoMovimentacaoEstoqueFilter<$PrismaModel>
    _max?: NestedEnumTipoMovimentacaoEstoqueFilter<$PrismaModel>
  }

  export type NestedEnumOrigemMovimentacaoEstoqueWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrigemMovimentacaoEstoque | EnumOrigemMovimentacaoEstoqueFieldRefInput<$PrismaModel>
    in?: $Enums.OrigemMovimentacaoEstoque[] | ListEnumOrigemMovimentacaoEstoqueFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrigemMovimentacaoEstoque[] | ListEnumOrigemMovimentacaoEstoqueFieldRefInput<$PrismaModel>
    not?: NestedEnumOrigemMovimentacaoEstoqueWithAggregatesFilter<$PrismaModel> | $Enums.OrigemMovimentacaoEstoque
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOrigemMovimentacaoEstoqueFilter<$PrismaModel>
    _max?: NestedEnumOrigemMovimentacaoEstoqueFilter<$PrismaModel>
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedEnumStatusCaixaFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusCaixa | EnumStatusCaixaFieldRefInput<$PrismaModel>
    in?: $Enums.StatusCaixa[] | ListEnumStatusCaixaFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusCaixa[] | ListEnumStatusCaixaFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusCaixaFilter<$PrismaModel> | $Enums.StatusCaixa
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedEnumStatusCaixaWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusCaixa | EnumStatusCaixaFieldRefInput<$PrismaModel>
    in?: $Enums.StatusCaixa[] | ListEnumStatusCaixaFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusCaixa[] | ListEnumStatusCaixaFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusCaixaWithAggregatesFilter<$PrismaModel> | $Enums.StatusCaixa
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStatusCaixaFilter<$PrismaModel>
    _max?: NestedEnumStatusCaixaFilter<$PrismaModel>
  }

  export type PedidoCreateWithoutUserInput = {
    tipo: $Enums.TipoPedido
    valor_total?: Decimal | DecimalJsLike | number | string
    status: $Enums.TipoStatusPedido
    criado_em?: Date | string
    atualizado?: Date | string
    items?: ItemPedidoCreateNestedManyWithoutPedidoInput
    pagamentos?: PagamentoCreateNestedManyWithoutPedidoInput
    registro?: RegistroCreateNestedOneWithoutPedidosInput
  }

  export type PedidoUncheckedCreateWithoutUserInput = {
    id?: number
    regID?: number | null
    tipo: $Enums.TipoPedido
    valor_total?: Decimal | DecimalJsLike | number | string
    status: $Enums.TipoStatusPedido
    criado_em?: Date | string
    atualizado?: Date | string
    items?: ItemPedidoUncheckedCreateNestedManyWithoutPedidoInput
    pagamentos?: PagamentoUncheckedCreateNestedManyWithoutPedidoInput
  }

  export type PedidoCreateOrConnectWithoutUserInput = {
    where: PedidoWhereUniqueInput
    create: XOR<PedidoCreateWithoutUserInput, PedidoUncheckedCreateWithoutUserInput>
  }

  export type PedidoCreateManyUserInputEnvelope = {
    data: PedidoCreateManyUserInput | PedidoCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type CargoCreateWithoutUsersInput = {
    nome: string
  }

  export type CargoUncheckedCreateWithoutUsersInput = {
    id?: number
    nome: string
  }

  export type CargoCreateOrConnectWithoutUsersInput = {
    where: CargoWhereUniqueInput
    create: XOR<CargoCreateWithoutUsersInput, CargoUncheckedCreateWithoutUsersInput>
  }

  export type PermissoesCreateWithoutUsersInput = {
    nome: string
    descricao?: string | null
  }

  export type PermissoesUncheckedCreateWithoutUsersInput = {
    id?: number
    nome: string
    descricao?: string | null
  }

  export type PermissoesCreateOrConnectWithoutUsersInput = {
    where: PermissoesWhereUniqueInput
    create: XOR<PermissoesCreateWithoutUsersInput, PermissoesUncheckedCreateWithoutUsersInput>
  }

  export type LivroCaixaCreateWithoutUsuarioInput = {
    dataAbertura?: Date | string
    dataFechamento?: Date | string | null
    saldoInicial: Decimal | DecimalJsLike | number | string
    saldoFinal?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.StatusCaixa
    movimentacoes?: MovimentacaoFinanceiraCreateNestedManyWithoutCaixaInput
  }

  export type LivroCaixaUncheckedCreateWithoutUsuarioInput = {
    id?: number
    dataAbertura?: Date | string
    dataFechamento?: Date | string | null
    saldoInicial: Decimal | DecimalJsLike | number | string
    saldoFinal?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.StatusCaixa
    movimentacoes?: MovimentacaoFinanceiraUncheckedCreateNestedManyWithoutCaixaInput
  }

  export type LivroCaixaCreateOrConnectWithoutUsuarioInput = {
    where: LivroCaixaWhereUniqueInput
    create: XOR<LivroCaixaCreateWithoutUsuarioInput, LivroCaixaUncheckedCreateWithoutUsuarioInput>
  }

  export type LivroCaixaCreateManyUsuarioInputEnvelope = {
    data: LivroCaixaCreateManyUsuarioInput | LivroCaixaCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type PedidoUpsertWithWhereUniqueWithoutUserInput = {
    where: PedidoWhereUniqueInput
    update: XOR<PedidoUpdateWithoutUserInput, PedidoUncheckedUpdateWithoutUserInput>
    create: XOR<PedidoCreateWithoutUserInput, PedidoUncheckedCreateWithoutUserInput>
  }

  export type PedidoUpdateWithWhereUniqueWithoutUserInput = {
    where: PedidoWhereUniqueInput
    data: XOR<PedidoUpdateWithoutUserInput, PedidoUncheckedUpdateWithoutUserInput>
  }

  export type PedidoUpdateManyWithWhereWithoutUserInput = {
    where: PedidoScalarWhereInput
    data: XOR<PedidoUpdateManyMutationInput, PedidoUncheckedUpdateManyWithoutUserInput>
  }

  export type PedidoScalarWhereInput = {
    AND?: PedidoScalarWhereInput | PedidoScalarWhereInput[]
    OR?: PedidoScalarWhereInput[]
    NOT?: PedidoScalarWhereInput | PedidoScalarWhereInput[]
    id?: IntFilter<"Pedido"> | number
    regID?: IntNullableFilter<"Pedido"> | number | null
    tipo?: EnumTipoPedidoFilter<"Pedido"> | $Enums.TipoPedido
    valor_total?: DecimalFilter<"Pedido"> | Decimal | DecimalJsLike | number | string
    status?: EnumTipoStatusPedidoFilter<"Pedido"> | $Enums.TipoStatusPedido
    userID?: IntFilter<"Pedido"> | number
    criado_em?: DateTimeFilter<"Pedido"> | Date | string
    atualizado?: DateTimeFilter<"Pedido"> | Date | string
  }

  export type CargoUpsertWithoutUsersInput = {
    update: XOR<CargoUpdateWithoutUsersInput, CargoUncheckedUpdateWithoutUsersInput>
    create: XOR<CargoCreateWithoutUsersInput, CargoUncheckedCreateWithoutUsersInput>
    where?: CargoWhereInput
  }

  export type CargoUpdateToOneWithWhereWithoutUsersInput = {
    where?: CargoWhereInput
    data: XOR<CargoUpdateWithoutUsersInput, CargoUncheckedUpdateWithoutUsersInput>
  }

  export type CargoUpdateWithoutUsersInput = {
    nome?: StringFieldUpdateOperationsInput | string
  }

  export type CargoUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
  }

  export type PermissoesUpsertWithWhereUniqueWithoutUsersInput = {
    where: PermissoesWhereUniqueInput
    update: XOR<PermissoesUpdateWithoutUsersInput, PermissoesUncheckedUpdateWithoutUsersInput>
    create: XOR<PermissoesCreateWithoutUsersInput, PermissoesUncheckedCreateWithoutUsersInput>
  }

  export type PermissoesUpdateWithWhereUniqueWithoutUsersInput = {
    where: PermissoesWhereUniqueInput
    data: XOR<PermissoesUpdateWithoutUsersInput, PermissoesUncheckedUpdateWithoutUsersInput>
  }

  export type PermissoesUpdateManyWithWhereWithoutUsersInput = {
    where: PermissoesScalarWhereInput
    data: XOR<PermissoesUpdateManyMutationInput, PermissoesUncheckedUpdateManyWithoutUsersInput>
  }

  export type PermissoesScalarWhereInput = {
    AND?: PermissoesScalarWhereInput | PermissoesScalarWhereInput[]
    OR?: PermissoesScalarWhereInput[]
    NOT?: PermissoesScalarWhereInput | PermissoesScalarWhereInput[]
    id?: IntFilter<"Permissoes"> | number
    nome?: StringFilter<"Permissoes"> | string
    descricao?: StringNullableFilter<"Permissoes"> | string | null
  }

  export type LivroCaixaUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: LivroCaixaWhereUniqueInput
    update: XOR<LivroCaixaUpdateWithoutUsuarioInput, LivroCaixaUncheckedUpdateWithoutUsuarioInput>
    create: XOR<LivroCaixaCreateWithoutUsuarioInput, LivroCaixaUncheckedCreateWithoutUsuarioInput>
  }

  export type LivroCaixaUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: LivroCaixaWhereUniqueInput
    data: XOR<LivroCaixaUpdateWithoutUsuarioInput, LivroCaixaUncheckedUpdateWithoutUsuarioInput>
  }

  export type LivroCaixaUpdateManyWithWhereWithoutUsuarioInput = {
    where: LivroCaixaScalarWhereInput
    data: XOR<LivroCaixaUpdateManyMutationInput, LivroCaixaUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type LivroCaixaScalarWhereInput = {
    AND?: LivroCaixaScalarWhereInput | LivroCaixaScalarWhereInput[]
    OR?: LivroCaixaScalarWhereInput[]
    NOT?: LivroCaixaScalarWhereInput | LivroCaixaScalarWhereInput[]
    id?: IntFilter<"LivroCaixa"> | number
    dataAbertura?: DateTimeFilter<"LivroCaixa"> | Date | string
    dataFechamento?: DateTimeNullableFilter<"LivroCaixa"> | Date | string | null
    saldoInicial?: DecimalFilter<"LivroCaixa"> | Decimal | DecimalJsLike | number | string
    saldoFinal?: DecimalNullableFilter<"LivroCaixa"> | Decimal | DecimalJsLike | number | string | null
    status?: EnumStatusCaixaFilter<"LivroCaixa"> | $Enums.StatusCaixa
    usuarioID?: IntFilter<"LivroCaixa"> | number
  }

  export type UserCreateWithoutPermissoesInput = {
    nome: string
    email: string
    senha: string
    telefone: string
    deletedAt?: Date | string | null
    pedidos?: PedidoCreateNestedManyWithoutUserInput
    cargo: CargoCreateNestedOneWithoutUsersInput
    caixas?: LivroCaixaCreateNestedManyWithoutUsuarioInput
  }

  export type UserUncheckedCreateWithoutPermissoesInput = {
    id?: number
    nome: string
    email: string
    senha: string
    telefone: string
    cargoID: number
    deletedAt?: Date | string | null
    pedidos?: PedidoUncheckedCreateNestedManyWithoutUserInput
    caixas?: LivroCaixaUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UserCreateOrConnectWithoutPermissoesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutPermissoesInput, UserUncheckedCreateWithoutPermissoesInput>
  }

  export type UserUpsertWithWhereUniqueWithoutPermissoesInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutPermissoesInput, UserUncheckedUpdateWithoutPermissoesInput>
    create: XOR<UserCreateWithoutPermissoesInput, UserUncheckedCreateWithoutPermissoesInput>
  }

  export type UserUpdateWithWhereUniqueWithoutPermissoesInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutPermissoesInput, UserUncheckedUpdateWithoutPermissoesInput>
  }

  export type UserUpdateManyWithWhereWithoutPermissoesInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutPermissoesInput>
  }

  export type UserScalarWhereInput = {
    AND?: UserScalarWhereInput | UserScalarWhereInput[]
    OR?: UserScalarWhereInput[]
    NOT?: UserScalarWhereInput | UserScalarWhereInput[]
    id?: IntFilter<"User"> | number
    nome?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    senha?: StringFilter<"User"> | string
    telefone?: StringFilter<"User"> | string
    cargoID?: IntFilter<"User"> | number
    deletedAt?: DateTimeNullableFilter<"User"> | Date | string | null
  }

  export type UserCreateWithoutCargoInput = {
    nome: string
    email: string
    senha: string
    telefone: string
    deletedAt?: Date | string | null
    pedidos?: PedidoCreateNestedManyWithoutUserInput
    permissoes?: PermissoesCreateNestedManyWithoutUsersInput
    caixas?: LivroCaixaCreateNestedManyWithoutUsuarioInput
  }

  export type UserUncheckedCreateWithoutCargoInput = {
    id?: number
    nome: string
    email: string
    senha: string
    telefone: string
    deletedAt?: Date | string | null
    pedidos?: PedidoUncheckedCreateNestedManyWithoutUserInput
    permissoes?: PermissoesUncheckedCreateNestedManyWithoutUsersInput
    caixas?: LivroCaixaUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UserCreateOrConnectWithoutCargoInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCargoInput, UserUncheckedCreateWithoutCargoInput>
  }

  export type UserCreateManyCargoInputEnvelope = {
    data: UserCreateManyCargoInput | UserCreateManyCargoInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithWhereUniqueWithoutCargoInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutCargoInput, UserUncheckedUpdateWithoutCargoInput>
    create: XOR<UserCreateWithoutCargoInput, UserUncheckedCreateWithoutCargoInput>
  }

  export type UserUpdateWithWhereUniqueWithoutCargoInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutCargoInput, UserUncheckedUpdateWithoutCargoInput>
  }

  export type UserUpdateManyWithWhereWithoutCargoInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutCargoInput>
  }

  export type DadosPagamentoCreateWithoutRegistroInput = {
    banco?: string | null
    agencia?: number | null
    conta?: number | null
    chave?: string | null
    cpf?: string | null
  }

  export type DadosPagamentoUncheckedCreateWithoutRegistroInput = {
    id?: number
    banco?: string | null
    agencia?: number | null
    conta?: number | null
    chave?: string | null
    cpf?: string | null
  }

  export type DadosPagamentoCreateOrConnectWithoutRegistroInput = {
    where: DadosPagamentoWhereUniqueInput
    create: XOR<DadosPagamentoCreateWithoutRegistroInput, DadosPagamentoUncheckedCreateWithoutRegistroInput>
  }

  export type EnderecoCreateWithoutRegistroInput = {
    estado?: string | null
    cidade?: string | null
    bairro?: string | null
    logradouro?: string | null
    numero?: string | null
    complemento?: string | null
  }

  export type EnderecoUncheckedCreateWithoutRegistroInput = {
    id?: number
    estado?: string | null
    cidade?: string | null
    bairro?: string | null
    logradouro?: string | null
    numero?: string | null
    complemento?: string | null
  }

  export type EnderecoCreateOrConnectWithoutRegistroInput = {
    where: EnderecoWhereUniqueInput
    create: XOR<EnderecoCreateWithoutRegistroInput, EnderecoUncheckedCreateWithoutRegistroInput>
  }

  export type PedidoCreateWithoutRegistroInput = {
    tipo: $Enums.TipoPedido
    valor_total?: Decimal | DecimalJsLike | number | string
    status: $Enums.TipoStatusPedido
    criado_em?: Date | string
    atualizado?: Date | string
    items?: ItemPedidoCreateNestedManyWithoutPedidoInput
    pagamentos?: PagamentoCreateNestedManyWithoutPedidoInput
    user: UserCreateNestedOneWithoutPedidosInput
  }

  export type PedidoUncheckedCreateWithoutRegistroInput = {
    id?: number
    tipo: $Enums.TipoPedido
    valor_total?: Decimal | DecimalJsLike | number | string
    status: $Enums.TipoStatusPedido
    userID: number
    criado_em?: Date | string
    atualizado?: Date | string
    items?: ItemPedidoUncheckedCreateNestedManyWithoutPedidoInput
    pagamentos?: PagamentoUncheckedCreateNestedManyWithoutPedidoInput
  }

  export type PedidoCreateOrConnectWithoutRegistroInput = {
    where: PedidoWhereUniqueInput
    create: XOR<PedidoCreateWithoutRegistroInput, PedidoUncheckedCreateWithoutRegistroInput>
  }

  export type PedidoCreateManyRegistroInputEnvelope = {
    data: PedidoCreateManyRegistroInput | PedidoCreateManyRegistroInput[]
    skipDuplicates?: boolean
  }

  export type PessoaFisicaCreateWithoutRegistroInput = {
    cpf: string
    nascimento?: Date | string | null
  }

  export type PessoaFisicaUncheckedCreateWithoutRegistroInput = {
    cpf: string
    nascimento?: Date | string | null
  }

  export type PessoaFisicaCreateOrConnectWithoutRegistroInput = {
    where: PessoaFisicaWhereUniqueInput
    create: XOR<PessoaFisicaCreateWithoutRegistroInput, PessoaFisicaUncheckedCreateWithoutRegistroInput>
  }

  export type PessoaJuridicaCreateWithoutRegistroInput = {
    cnpj: string
    ie?: string | null
    fantasia?: string | null
  }

  export type PessoaJuridicaUncheckedCreateWithoutRegistroInput = {
    cnpj: string
    ie?: string | null
    fantasia?: string | null
  }

  export type PessoaJuridicaCreateOrConnectWithoutRegistroInput = {
    where: PessoaJuridicaWhereUniqueInput
    create: XOR<PessoaJuridicaCreateWithoutRegistroInput, PessoaJuridicaUncheckedCreateWithoutRegistroInput>
  }

  export type TabelaCreateWithoutRegistrosInput = {
    nome: string
    updatedAt?: Date | string
    materiais?: PrecoPorTabelaCreateNestedManyWithoutTabelaInput
  }

  export type TabelaUncheckedCreateWithoutRegistrosInput = {
    id?: number
    nome: string
    updatedAt?: Date | string
    materiais?: PrecoPorTabelaUncheckedCreateNestedManyWithoutTabelaInput
  }

  export type TabelaCreateOrConnectWithoutRegistrosInput = {
    where: TabelaWhereUniqueInput
    create: XOR<TabelaCreateWithoutRegistrosInput, TabelaUncheckedCreateWithoutRegistrosInput>
  }

  export type SaldoFinanceiroCreateWithoutRegistroInput = {
    saldo: Decimal | DecimalJsLike | number | string
  }

  export type SaldoFinanceiroUncheckedCreateWithoutRegistroInput = {
    id?: number
    saldo: Decimal | DecimalJsLike | number | string
  }

  export type SaldoFinanceiroCreateOrConnectWithoutRegistroInput = {
    where: SaldoFinanceiroWhereUniqueInput
    create: XOR<SaldoFinanceiroCreateWithoutRegistroInput, SaldoFinanceiroUncheckedCreateWithoutRegistroInput>
  }

  export type DadosPagamentoUpsertWithoutRegistroInput = {
    update: XOR<DadosPagamentoUpdateWithoutRegistroInput, DadosPagamentoUncheckedUpdateWithoutRegistroInput>
    create: XOR<DadosPagamentoCreateWithoutRegistroInput, DadosPagamentoUncheckedCreateWithoutRegistroInput>
    where?: DadosPagamentoWhereInput
  }

  export type DadosPagamentoUpdateToOneWithWhereWithoutRegistroInput = {
    where?: DadosPagamentoWhereInput
    data: XOR<DadosPagamentoUpdateWithoutRegistroInput, DadosPagamentoUncheckedUpdateWithoutRegistroInput>
  }

  export type DadosPagamentoUpdateWithoutRegistroInput = {
    banco?: NullableStringFieldUpdateOperationsInput | string | null
    agencia?: NullableIntFieldUpdateOperationsInput | number | null
    conta?: NullableIntFieldUpdateOperationsInput | number | null
    chave?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DadosPagamentoUncheckedUpdateWithoutRegistroInput = {
    id?: IntFieldUpdateOperationsInput | number
    banco?: NullableStringFieldUpdateOperationsInput | string | null
    agencia?: NullableIntFieldUpdateOperationsInput | number | null
    conta?: NullableIntFieldUpdateOperationsInput | number | null
    chave?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EnderecoUpsertWithoutRegistroInput = {
    update: XOR<EnderecoUpdateWithoutRegistroInput, EnderecoUncheckedUpdateWithoutRegistroInput>
    create: XOR<EnderecoCreateWithoutRegistroInput, EnderecoUncheckedCreateWithoutRegistroInput>
    where?: EnderecoWhereInput
  }

  export type EnderecoUpdateToOneWithWhereWithoutRegistroInput = {
    where?: EnderecoWhereInput
    data: XOR<EnderecoUpdateWithoutRegistroInput, EnderecoUncheckedUpdateWithoutRegistroInput>
  }

  export type EnderecoUpdateWithoutRegistroInput = {
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EnderecoUncheckedUpdateWithoutRegistroInput = {
    id?: IntFieldUpdateOperationsInput | number
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    logradouro?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PedidoUpsertWithWhereUniqueWithoutRegistroInput = {
    where: PedidoWhereUniqueInput
    update: XOR<PedidoUpdateWithoutRegistroInput, PedidoUncheckedUpdateWithoutRegistroInput>
    create: XOR<PedidoCreateWithoutRegistroInput, PedidoUncheckedCreateWithoutRegistroInput>
  }

  export type PedidoUpdateWithWhereUniqueWithoutRegistroInput = {
    where: PedidoWhereUniqueInput
    data: XOR<PedidoUpdateWithoutRegistroInput, PedidoUncheckedUpdateWithoutRegistroInput>
  }

  export type PedidoUpdateManyWithWhereWithoutRegistroInput = {
    where: PedidoScalarWhereInput
    data: XOR<PedidoUpdateManyMutationInput, PedidoUncheckedUpdateManyWithoutRegistroInput>
  }

  export type PessoaFisicaUpsertWithoutRegistroInput = {
    update: XOR<PessoaFisicaUpdateWithoutRegistroInput, PessoaFisicaUncheckedUpdateWithoutRegistroInput>
    create: XOR<PessoaFisicaCreateWithoutRegistroInput, PessoaFisicaUncheckedCreateWithoutRegistroInput>
    where?: PessoaFisicaWhereInput
  }

  export type PessoaFisicaUpdateToOneWithWhereWithoutRegistroInput = {
    where?: PessoaFisicaWhereInput
    data: XOR<PessoaFisicaUpdateWithoutRegistroInput, PessoaFisicaUncheckedUpdateWithoutRegistroInput>
  }

  export type PessoaFisicaUpdateWithoutRegistroInput = {
    cpf?: StringFieldUpdateOperationsInput | string
    nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PessoaFisicaUncheckedUpdateWithoutRegistroInput = {
    cpf?: StringFieldUpdateOperationsInput | string
    nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PessoaJuridicaUpsertWithoutRegistroInput = {
    update: XOR<PessoaJuridicaUpdateWithoutRegistroInput, PessoaJuridicaUncheckedUpdateWithoutRegistroInput>
    create: XOR<PessoaJuridicaCreateWithoutRegistroInput, PessoaJuridicaUncheckedCreateWithoutRegistroInput>
    where?: PessoaJuridicaWhereInput
  }

  export type PessoaJuridicaUpdateToOneWithWhereWithoutRegistroInput = {
    where?: PessoaJuridicaWhereInput
    data: XOR<PessoaJuridicaUpdateWithoutRegistroInput, PessoaJuridicaUncheckedUpdateWithoutRegistroInput>
  }

  export type PessoaJuridicaUpdateWithoutRegistroInput = {
    cnpj?: StringFieldUpdateOperationsInput | string
    ie?: NullableStringFieldUpdateOperationsInput | string | null
    fantasia?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PessoaJuridicaUncheckedUpdateWithoutRegistroInput = {
    cnpj?: StringFieldUpdateOperationsInput | string
    ie?: NullableStringFieldUpdateOperationsInput | string | null
    fantasia?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TabelaUpsertWithoutRegistrosInput = {
    update: XOR<TabelaUpdateWithoutRegistrosInput, TabelaUncheckedUpdateWithoutRegistrosInput>
    create: XOR<TabelaCreateWithoutRegistrosInput, TabelaUncheckedCreateWithoutRegistrosInput>
    where?: TabelaWhereInput
  }

  export type TabelaUpdateToOneWithWhereWithoutRegistrosInput = {
    where?: TabelaWhereInput
    data: XOR<TabelaUpdateWithoutRegistrosInput, TabelaUncheckedUpdateWithoutRegistrosInput>
  }

  export type TabelaUpdateWithoutRegistrosInput = {
    nome?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    materiais?: PrecoPorTabelaUpdateManyWithoutTabelaNestedInput
  }

  export type TabelaUncheckedUpdateWithoutRegistrosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    materiais?: PrecoPorTabelaUncheckedUpdateManyWithoutTabelaNestedInput
  }

  export type SaldoFinanceiroUpsertWithoutRegistroInput = {
    update: XOR<SaldoFinanceiroUpdateWithoutRegistroInput, SaldoFinanceiroUncheckedUpdateWithoutRegistroInput>
    create: XOR<SaldoFinanceiroCreateWithoutRegistroInput, SaldoFinanceiroUncheckedCreateWithoutRegistroInput>
    where?: SaldoFinanceiroWhereInput
  }

  export type SaldoFinanceiroUpdateToOneWithWhereWithoutRegistroInput = {
    where?: SaldoFinanceiroWhereInput
    data: XOR<SaldoFinanceiroUpdateWithoutRegistroInput, SaldoFinanceiroUncheckedUpdateWithoutRegistroInput>
  }

  export type SaldoFinanceiroUpdateWithoutRegistroInput = {
    saldo?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type SaldoFinanceiroUncheckedUpdateWithoutRegistroInput = {
    id?: IntFieldUpdateOperationsInput | number
    saldo?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type RegistroCreateWithoutFisicaInput = {
    nome_razao: string
    apelido?: string | null
    tipo: $Enums.TipoRegistro
    email?: string | null
    telefone?: string | null
    criadoEm?: Date | string
    dados_pagamento?: DadosPagamentoCreateNestedOneWithoutRegistroInput
    endereco?: EnderecoCreateNestedOneWithoutRegistroInput
    pedidos?: PedidoCreateNestedManyWithoutRegistroInput
    juridica?: PessoaJuridicaCreateNestedOneWithoutRegistroInput
    tabela: TabelaCreateNestedOneWithoutRegistrosInput
    saldo?: SaldoFinanceiroCreateNestedOneWithoutRegistroInput
  }

  export type RegistroUncheckedCreateWithoutFisicaInput = {
    id?: number
    nome_razao: string
    apelido?: string | null
    tipo: $Enums.TipoRegistro
    tabelaID: number
    email?: string | null
    telefone?: string | null
    criadoEm?: Date | string
    dados_pagamento?: DadosPagamentoUncheckedCreateNestedOneWithoutRegistroInput
    endereco?: EnderecoUncheckedCreateNestedOneWithoutRegistroInput
    pedidos?: PedidoUncheckedCreateNestedManyWithoutRegistroInput
    juridica?: PessoaJuridicaUncheckedCreateNestedOneWithoutRegistroInput
    saldo?: SaldoFinanceiroUncheckedCreateNestedOneWithoutRegistroInput
  }

  export type RegistroCreateOrConnectWithoutFisicaInput = {
    where: RegistroWhereUniqueInput
    create: XOR<RegistroCreateWithoutFisicaInput, RegistroUncheckedCreateWithoutFisicaInput>
  }

  export type RegistroUpsertWithoutFisicaInput = {
    update: XOR<RegistroUpdateWithoutFisicaInput, RegistroUncheckedUpdateWithoutFisicaInput>
    create: XOR<RegistroCreateWithoutFisicaInput, RegistroUncheckedCreateWithoutFisicaInput>
    where?: RegistroWhereInput
  }

  export type RegistroUpdateToOneWithWhereWithoutFisicaInput = {
    where?: RegistroWhereInput
    data: XOR<RegistroUpdateWithoutFisicaInput, RegistroUncheckedUpdateWithoutFisicaInput>
  }

  export type RegistroUpdateWithoutFisicaInput = {
    nome_razao?: StringFieldUpdateOperationsInput | string
    apelido?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumTipoRegistroFieldUpdateOperationsInput | $Enums.TipoRegistro
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    dados_pagamento?: DadosPagamentoUpdateOneWithoutRegistroNestedInput
    endereco?: EnderecoUpdateOneWithoutRegistroNestedInput
    pedidos?: PedidoUpdateManyWithoutRegistroNestedInput
    juridica?: PessoaJuridicaUpdateOneWithoutRegistroNestedInput
    tabela?: TabelaUpdateOneRequiredWithoutRegistrosNestedInput
    saldo?: SaldoFinanceiroUpdateOneWithoutRegistroNestedInput
  }

  export type RegistroUncheckedUpdateWithoutFisicaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_razao?: StringFieldUpdateOperationsInput | string
    apelido?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumTipoRegistroFieldUpdateOperationsInput | $Enums.TipoRegistro
    tabelaID?: IntFieldUpdateOperationsInput | number
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    dados_pagamento?: DadosPagamentoUncheckedUpdateOneWithoutRegistroNestedInput
    endereco?: EnderecoUncheckedUpdateOneWithoutRegistroNestedInput
    pedidos?: PedidoUncheckedUpdateManyWithoutRegistroNestedInput
    juridica?: PessoaJuridicaUncheckedUpdateOneWithoutRegistroNestedInput
    saldo?: SaldoFinanceiroUncheckedUpdateOneWithoutRegistroNestedInput
  }

  export type RegistroCreateWithoutJuridicaInput = {
    nome_razao: string
    apelido?: string | null
    tipo: $Enums.TipoRegistro
    email?: string | null
    telefone?: string | null
    criadoEm?: Date | string
    dados_pagamento?: DadosPagamentoCreateNestedOneWithoutRegistroInput
    endereco?: EnderecoCreateNestedOneWithoutRegistroInput
    pedidos?: PedidoCreateNestedManyWithoutRegistroInput
    fisica?: PessoaFisicaCreateNestedOneWithoutRegistroInput
    tabela: TabelaCreateNestedOneWithoutRegistrosInput
    saldo?: SaldoFinanceiroCreateNestedOneWithoutRegistroInput
  }

  export type RegistroUncheckedCreateWithoutJuridicaInput = {
    id?: number
    nome_razao: string
    apelido?: string | null
    tipo: $Enums.TipoRegistro
    tabelaID: number
    email?: string | null
    telefone?: string | null
    criadoEm?: Date | string
    dados_pagamento?: DadosPagamentoUncheckedCreateNestedOneWithoutRegistroInput
    endereco?: EnderecoUncheckedCreateNestedOneWithoutRegistroInput
    pedidos?: PedidoUncheckedCreateNestedManyWithoutRegistroInput
    fisica?: PessoaFisicaUncheckedCreateNestedOneWithoutRegistroInput
    saldo?: SaldoFinanceiroUncheckedCreateNestedOneWithoutRegistroInput
  }

  export type RegistroCreateOrConnectWithoutJuridicaInput = {
    where: RegistroWhereUniqueInput
    create: XOR<RegistroCreateWithoutJuridicaInput, RegistroUncheckedCreateWithoutJuridicaInput>
  }

  export type RegistroUpsertWithoutJuridicaInput = {
    update: XOR<RegistroUpdateWithoutJuridicaInput, RegistroUncheckedUpdateWithoutJuridicaInput>
    create: XOR<RegistroCreateWithoutJuridicaInput, RegistroUncheckedCreateWithoutJuridicaInput>
    where?: RegistroWhereInput
  }

  export type RegistroUpdateToOneWithWhereWithoutJuridicaInput = {
    where?: RegistroWhereInput
    data: XOR<RegistroUpdateWithoutJuridicaInput, RegistroUncheckedUpdateWithoutJuridicaInput>
  }

  export type RegistroUpdateWithoutJuridicaInput = {
    nome_razao?: StringFieldUpdateOperationsInput | string
    apelido?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumTipoRegistroFieldUpdateOperationsInput | $Enums.TipoRegistro
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    dados_pagamento?: DadosPagamentoUpdateOneWithoutRegistroNestedInput
    endereco?: EnderecoUpdateOneWithoutRegistroNestedInput
    pedidos?: PedidoUpdateManyWithoutRegistroNestedInput
    fisica?: PessoaFisicaUpdateOneWithoutRegistroNestedInput
    tabela?: TabelaUpdateOneRequiredWithoutRegistrosNestedInput
    saldo?: SaldoFinanceiroUpdateOneWithoutRegistroNestedInput
  }

  export type RegistroUncheckedUpdateWithoutJuridicaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_razao?: StringFieldUpdateOperationsInput | string
    apelido?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumTipoRegistroFieldUpdateOperationsInput | $Enums.TipoRegistro
    tabelaID?: IntFieldUpdateOperationsInput | number
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    dados_pagamento?: DadosPagamentoUncheckedUpdateOneWithoutRegistroNestedInput
    endereco?: EnderecoUncheckedUpdateOneWithoutRegistroNestedInput
    pedidos?: PedidoUncheckedUpdateManyWithoutRegistroNestedInput
    fisica?: PessoaFisicaUncheckedUpdateOneWithoutRegistroNestedInput
    saldo?: SaldoFinanceiroUncheckedUpdateOneWithoutRegistroNestedInput
  }

  export type RegistroCreateWithoutSaldoInput = {
    nome_razao: string
    apelido?: string | null
    tipo: $Enums.TipoRegistro
    email?: string | null
    telefone?: string | null
    criadoEm?: Date | string
    dados_pagamento?: DadosPagamentoCreateNestedOneWithoutRegistroInput
    endereco?: EnderecoCreateNestedOneWithoutRegistroInput
    pedidos?: PedidoCreateNestedManyWithoutRegistroInput
    fisica?: PessoaFisicaCreateNestedOneWithoutRegistroInput
    juridica?: PessoaJuridicaCreateNestedOneWithoutRegistroInput
    tabela: TabelaCreateNestedOneWithoutRegistrosInput
  }

  export type RegistroUncheckedCreateWithoutSaldoInput = {
    id?: number
    nome_razao: string
    apelido?: string | null
    tipo: $Enums.TipoRegistro
    tabelaID: number
    email?: string | null
    telefone?: string | null
    criadoEm?: Date | string
    dados_pagamento?: DadosPagamentoUncheckedCreateNestedOneWithoutRegistroInput
    endereco?: EnderecoUncheckedCreateNestedOneWithoutRegistroInput
    pedidos?: PedidoUncheckedCreateNestedManyWithoutRegistroInput
    fisica?: PessoaFisicaUncheckedCreateNestedOneWithoutRegistroInput
    juridica?: PessoaJuridicaUncheckedCreateNestedOneWithoutRegistroInput
  }

  export type RegistroCreateOrConnectWithoutSaldoInput = {
    where: RegistroWhereUniqueInput
    create: XOR<RegistroCreateWithoutSaldoInput, RegistroUncheckedCreateWithoutSaldoInput>
  }

  export type RegistroUpsertWithoutSaldoInput = {
    update: XOR<RegistroUpdateWithoutSaldoInput, RegistroUncheckedUpdateWithoutSaldoInput>
    create: XOR<RegistroCreateWithoutSaldoInput, RegistroUncheckedCreateWithoutSaldoInput>
    where?: RegistroWhereInput
  }

  export type RegistroUpdateToOneWithWhereWithoutSaldoInput = {
    where?: RegistroWhereInput
    data: XOR<RegistroUpdateWithoutSaldoInput, RegistroUncheckedUpdateWithoutSaldoInput>
  }

  export type RegistroUpdateWithoutSaldoInput = {
    nome_razao?: StringFieldUpdateOperationsInput | string
    apelido?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumTipoRegistroFieldUpdateOperationsInput | $Enums.TipoRegistro
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    dados_pagamento?: DadosPagamentoUpdateOneWithoutRegistroNestedInput
    endereco?: EnderecoUpdateOneWithoutRegistroNestedInput
    pedidos?: PedidoUpdateManyWithoutRegistroNestedInput
    fisica?: PessoaFisicaUpdateOneWithoutRegistroNestedInput
    juridica?: PessoaJuridicaUpdateOneWithoutRegistroNestedInput
    tabela?: TabelaUpdateOneRequiredWithoutRegistrosNestedInput
  }

  export type RegistroUncheckedUpdateWithoutSaldoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_razao?: StringFieldUpdateOperationsInput | string
    apelido?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumTipoRegistroFieldUpdateOperationsInput | $Enums.TipoRegistro
    tabelaID?: IntFieldUpdateOperationsInput | number
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    dados_pagamento?: DadosPagamentoUncheckedUpdateOneWithoutRegistroNestedInput
    endereco?: EnderecoUncheckedUpdateOneWithoutRegistroNestedInput
    pedidos?: PedidoUncheckedUpdateManyWithoutRegistroNestedInput
    fisica?: PessoaFisicaUncheckedUpdateOneWithoutRegistroNestedInput
    juridica?: PessoaJuridicaUncheckedUpdateOneWithoutRegistroNestedInput
  }

  export type RegistroCreateWithoutEnderecoInput = {
    nome_razao: string
    apelido?: string | null
    tipo: $Enums.TipoRegistro
    email?: string | null
    telefone?: string | null
    criadoEm?: Date | string
    dados_pagamento?: DadosPagamentoCreateNestedOneWithoutRegistroInput
    pedidos?: PedidoCreateNestedManyWithoutRegistroInput
    fisica?: PessoaFisicaCreateNestedOneWithoutRegistroInput
    juridica?: PessoaJuridicaCreateNestedOneWithoutRegistroInput
    tabela: TabelaCreateNestedOneWithoutRegistrosInput
    saldo?: SaldoFinanceiroCreateNestedOneWithoutRegistroInput
  }

  export type RegistroUncheckedCreateWithoutEnderecoInput = {
    id?: number
    nome_razao: string
    apelido?: string | null
    tipo: $Enums.TipoRegistro
    tabelaID: number
    email?: string | null
    telefone?: string | null
    criadoEm?: Date | string
    dados_pagamento?: DadosPagamentoUncheckedCreateNestedOneWithoutRegistroInput
    pedidos?: PedidoUncheckedCreateNestedManyWithoutRegistroInput
    fisica?: PessoaFisicaUncheckedCreateNestedOneWithoutRegistroInput
    juridica?: PessoaJuridicaUncheckedCreateNestedOneWithoutRegistroInput
    saldo?: SaldoFinanceiroUncheckedCreateNestedOneWithoutRegistroInput
  }

  export type RegistroCreateOrConnectWithoutEnderecoInput = {
    where: RegistroWhereUniqueInput
    create: XOR<RegistroCreateWithoutEnderecoInput, RegistroUncheckedCreateWithoutEnderecoInput>
  }

  export type RegistroUpsertWithoutEnderecoInput = {
    update: XOR<RegistroUpdateWithoutEnderecoInput, RegistroUncheckedUpdateWithoutEnderecoInput>
    create: XOR<RegistroCreateWithoutEnderecoInput, RegistroUncheckedCreateWithoutEnderecoInput>
    where?: RegistroWhereInput
  }

  export type RegistroUpdateToOneWithWhereWithoutEnderecoInput = {
    where?: RegistroWhereInput
    data: XOR<RegistroUpdateWithoutEnderecoInput, RegistroUncheckedUpdateWithoutEnderecoInput>
  }

  export type RegistroUpdateWithoutEnderecoInput = {
    nome_razao?: StringFieldUpdateOperationsInput | string
    apelido?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumTipoRegistroFieldUpdateOperationsInput | $Enums.TipoRegistro
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    dados_pagamento?: DadosPagamentoUpdateOneWithoutRegistroNestedInput
    pedidos?: PedidoUpdateManyWithoutRegistroNestedInput
    fisica?: PessoaFisicaUpdateOneWithoutRegistroNestedInput
    juridica?: PessoaJuridicaUpdateOneWithoutRegistroNestedInput
    tabela?: TabelaUpdateOneRequiredWithoutRegistrosNestedInput
    saldo?: SaldoFinanceiroUpdateOneWithoutRegistroNestedInput
  }

  export type RegistroUncheckedUpdateWithoutEnderecoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_razao?: StringFieldUpdateOperationsInput | string
    apelido?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumTipoRegistroFieldUpdateOperationsInput | $Enums.TipoRegistro
    tabelaID?: IntFieldUpdateOperationsInput | number
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    dados_pagamento?: DadosPagamentoUncheckedUpdateOneWithoutRegistroNestedInput
    pedidos?: PedidoUncheckedUpdateManyWithoutRegistroNestedInput
    fisica?: PessoaFisicaUncheckedUpdateOneWithoutRegistroNestedInput
    juridica?: PessoaJuridicaUncheckedUpdateOneWithoutRegistroNestedInput
    saldo?: SaldoFinanceiroUncheckedUpdateOneWithoutRegistroNestedInput
  }

  export type RegistroCreateWithoutDados_pagamentoInput = {
    nome_razao: string
    apelido?: string | null
    tipo: $Enums.TipoRegistro
    email?: string | null
    telefone?: string | null
    criadoEm?: Date | string
    endereco?: EnderecoCreateNestedOneWithoutRegistroInput
    pedidos?: PedidoCreateNestedManyWithoutRegistroInput
    fisica?: PessoaFisicaCreateNestedOneWithoutRegistroInput
    juridica?: PessoaJuridicaCreateNestedOneWithoutRegistroInput
    tabela: TabelaCreateNestedOneWithoutRegistrosInput
    saldo?: SaldoFinanceiroCreateNestedOneWithoutRegistroInput
  }

  export type RegistroUncheckedCreateWithoutDados_pagamentoInput = {
    id?: number
    nome_razao: string
    apelido?: string | null
    tipo: $Enums.TipoRegistro
    tabelaID: number
    email?: string | null
    telefone?: string | null
    criadoEm?: Date | string
    endereco?: EnderecoUncheckedCreateNestedOneWithoutRegistroInput
    pedidos?: PedidoUncheckedCreateNestedManyWithoutRegistroInput
    fisica?: PessoaFisicaUncheckedCreateNestedOneWithoutRegistroInput
    juridica?: PessoaJuridicaUncheckedCreateNestedOneWithoutRegistroInput
    saldo?: SaldoFinanceiroUncheckedCreateNestedOneWithoutRegistroInput
  }

  export type RegistroCreateOrConnectWithoutDados_pagamentoInput = {
    where: RegistroWhereUniqueInput
    create: XOR<RegistroCreateWithoutDados_pagamentoInput, RegistroUncheckedCreateWithoutDados_pagamentoInput>
  }

  export type RegistroUpsertWithoutDados_pagamentoInput = {
    update: XOR<RegistroUpdateWithoutDados_pagamentoInput, RegistroUncheckedUpdateWithoutDados_pagamentoInput>
    create: XOR<RegistroCreateWithoutDados_pagamentoInput, RegistroUncheckedCreateWithoutDados_pagamentoInput>
    where?: RegistroWhereInput
  }

  export type RegistroUpdateToOneWithWhereWithoutDados_pagamentoInput = {
    where?: RegistroWhereInput
    data: XOR<RegistroUpdateWithoutDados_pagamentoInput, RegistroUncheckedUpdateWithoutDados_pagamentoInput>
  }

  export type RegistroUpdateWithoutDados_pagamentoInput = {
    nome_razao?: StringFieldUpdateOperationsInput | string
    apelido?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumTipoRegistroFieldUpdateOperationsInput | $Enums.TipoRegistro
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    endereco?: EnderecoUpdateOneWithoutRegistroNestedInput
    pedidos?: PedidoUpdateManyWithoutRegistroNestedInput
    fisica?: PessoaFisicaUpdateOneWithoutRegistroNestedInput
    juridica?: PessoaJuridicaUpdateOneWithoutRegistroNestedInput
    tabela?: TabelaUpdateOneRequiredWithoutRegistrosNestedInput
    saldo?: SaldoFinanceiroUpdateOneWithoutRegistroNestedInput
  }

  export type RegistroUncheckedUpdateWithoutDados_pagamentoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_razao?: StringFieldUpdateOperationsInput | string
    apelido?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumTipoRegistroFieldUpdateOperationsInput | $Enums.TipoRegistro
    tabelaID?: IntFieldUpdateOperationsInput | number
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    endereco?: EnderecoUncheckedUpdateOneWithoutRegistroNestedInput
    pedidos?: PedidoUncheckedUpdateManyWithoutRegistroNestedInput
    fisica?: PessoaFisicaUncheckedUpdateOneWithoutRegistroNestedInput
    juridica?: PessoaJuridicaUncheckedUpdateOneWithoutRegistroNestedInput
    saldo?: SaldoFinanceiroUncheckedUpdateOneWithoutRegistroNestedInput
  }

  export type PrecoPorTabelaCreateWithoutTabelaInput = {
    v_compra: Decimal | DecimalJsLike | number | string
    editadoEm?: Date | string
    material: MaterialCreateNestedOneWithoutPreco_tabelaInput
  }

  export type PrecoPorTabelaUncheckedCreateWithoutTabelaInput = {
    id?: number
    v_compra: Decimal | DecimalJsLike | number | string
    materialID: number
    editadoEm?: Date | string
  }

  export type PrecoPorTabelaCreateOrConnectWithoutTabelaInput = {
    where: PrecoPorTabelaWhereUniqueInput
    create: XOR<PrecoPorTabelaCreateWithoutTabelaInput, PrecoPorTabelaUncheckedCreateWithoutTabelaInput>
  }

  export type PrecoPorTabelaCreateManyTabelaInputEnvelope = {
    data: PrecoPorTabelaCreateManyTabelaInput | PrecoPorTabelaCreateManyTabelaInput[]
    skipDuplicates?: boolean
  }

  export type RegistroCreateWithoutTabelaInput = {
    nome_razao: string
    apelido?: string | null
    tipo: $Enums.TipoRegistro
    email?: string | null
    telefone?: string | null
    criadoEm?: Date | string
    dados_pagamento?: DadosPagamentoCreateNestedOneWithoutRegistroInput
    endereco?: EnderecoCreateNestedOneWithoutRegistroInput
    pedidos?: PedidoCreateNestedManyWithoutRegistroInput
    fisica?: PessoaFisicaCreateNestedOneWithoutRegistroInput
    juridica?: PessoaJuridicaCreateNestedOneWithoutRegistroInput
    saldo?: SaldoFinanceiroCreateNestedOneWithoutRegistroInput
  }

  export type RegistroUncheckedCreateWithoutTabelaInput = {
    id?: number
    nome_razao: string
    apelido?: string | null
    tipo: $Enums.TipoRegistro
    email?: string | null
    telefone?: string | null
    criadoEm?: Date | string
    dados_pagamento?: DadosPagamentoUncheckedCreateNestedOneWithoutRegistroInput
    endereco?: EnderecoUncheckedCreateNestedOneWithoutRegistroInput
    pedidos?: PedidoUncheckedCreateNestedManyWithoutRegistroInput
    fisica?: PessoaFisicaUncheckedCreateNestedOneWithoutRegistroInput
    juridica?: PessoaJuridicaUncheckedCreateNestedOneWithoutRegistroInput
    saldo?: SaldoFinanceiroUncheckedCreateNestedOneWithoutRegistroInput
  }

  export type RegistroCreateOrConnectWithoutTabelaInput = {
    where: RegistroWhereUniqueInput
    create: XOR<RegistroCreateWithoutTabelaInput, RegistroUncheckedCreateWithoutTabelaInput>
  }

  export type RegistroCreateManyTabelaInputEnvelope = {
    data: RegistroCreateManyTabelaInput | RegistroCreateManyTabelaInput[]
    skipDuplicates?: boolean
  }

  export type PrecoPorTabelaUpsertWithWhereUniqueWithoutTabelaInput = {
    where: PrecoPorTabelaWhereUniqueInput
    update: XOR<PrecoPorTabelaUpdateWithoutTabelaInput, PrecoPorTabelaUncheckedUpdateWithoutTabelaInput>
    create: XOR<PrecoPorTabelaCreateWithoutTabelaInput, PrecoPorTabelaUncheckedCreateWithoutTabelaInput>
  }

  export type PrecoPorTabelaUpdateWithWhereUniqueWithoutTabelaInput = {
    where: PrecoPorTabelaWhereUniqueInput
    data: XOR<PrecoPorTabelaUpdateWithoutTabelaInput, PrecoPorTabelaUncheckedUpdateWithoutTabelaInput>
  }

  export type PrecoPorTabelaUpdateManyWithWhereWithoutTabelaInput = {
    where: PrecoPorTabelaScalarWhereInput
    data: XOR<PrecoPorTabelaUpdateManyMutationInput, PrecoPorTabelaUncheckedUpdateManyWithoutTabelaInput>
  }

  export type PrecoPorTabelaScalarWhereInput = {
    AND?: PrecoPorTabelaScalarWhereInput | PrecoPorTabelaScalarWhereInput[]
    OR?: PrecoPorTabelaScalarWhereInput[]
    NOT?: PrecoPorTabelaScalarWhereInput | PrecoPorTabelaScalarWhereInput[]
    id?: IntFilter<"PrecoPorTabela"> | number
    v_compra?: DecimalFilter<"PrecoPorTabela"> | Decimal | DecimalJsLike | number | string
    materialID?: IntFilter<"PrecoPorTabela"> | number
    tabelaID?: IntFilter<"PrecoPorTabela"> | number
    editadoEm?: DateTimeFilter<"PrecoPorTabela"> | Date | string
  }

  export type RegistroUpsertWithWhereUniqueWithoutTabelaInput = {
    where: RegistroWhereUniqueInput
    update: XOR<RegistroUpdateWithoutTabelaInput, RegistroUncheckedUpdateWithoutTabelaInput>
    create: XOR<RegistroCreateWithoutTabelaInput, RegistroUncheckedCreateWithoutTabelaInput>
  }

  export type RegistroUpdateWithWhereUniqueWithoutTabelaInput = {
    where: RegistroWhereUniqueInput
    data: XOR<RegistroUpdateWithoutTabelaInput, RegistroUncheckedUpdateWithoutTabelaInput>
  }

  export type RegistroUpdateManyWithWhereWithoutTabelaInput = {
    where: RegistroScalarWhereInput
    data: XOR<RegistroUpdateManyMutationInput, RegistroUncheckedUpdateManyWithoutTabelaInput>
  }

  export type RegistroScalarWhereInput = {
    AND?: RegistroScalarWhereInput | RegistroScalarWhereInput[]
    OR?: RegistroScalarWhereInput[]
    NOT?: RegistroScalarWhereInput | RegistroScalarWhereInput[]
    id?: IntFilter<"Registro"> | number
    nome_razao?: StringFilter<"Registro"> | string
    apelido?: StringNullableFilter<"Registro"> | string | null
    tipo?: EnumTipoRegistroFilter<"Registro"> | $Enums.TipoRegistro
    tabelaID?: IntFilter<"Registro"> | number
    email?: StringNullableFilter<"Registro"> | string | null
    telefone?: StringNullableFilter<"Registro"> | string | null
    criadoEm?: DateTimeFilter<"Registro"> | Date | string
  }

  export type MaterialCreateWithoutPreco_tabelaInput = {
    nome: string
    v_venda: Decimal | DecimalJsLike | number | string
    estoque: Decimal | DecimalJsLike | number | string
    criado_em?: Date | string
    editado_em?: Date | string
    status?: boolean
    items?: ItemPedidoCreateNestedManyWithoutMaterialInput
    categoria: CategoriaMaterialCreateNestedOneWithoutMateriaisInput
    movimentacoes?: MovimentacaoEstoqueCreateNestedManyWithoutMaterialInput
  }

  export type MaterialUncheckedCreateWithoutPreco_tabelaInput = {
    id?: number
    nome: string
    catID: number
    v_venda: Decimal | DecimalJsLike | number | string
    estoque: Decimal | DecimalJsLike | number | string
    criado_em?: Date | string
    editado_em?: Date | string
    status?: boolean
    items?: ItemPedidoUncheckedCreateNestedManyWithoutMaterialInput
    movimentacoes?: MovimentacaoEstoqueUncheckedCreateNestedManyWithoutMaterialInput
  }

  export type MaterialCreateOrConnectWithoutPreco_tabelaInput = {
    where: MaterialWhereUniqueInput
    create: XOR<MaterialCreateWithoutPreco_tabelaInput, MaterialUncheckedCreateWithoutPreco_tabelaInput>
  }

  export type TabelaCreateWithoutMateriaisInput = {
    nome: string
    updatedAt?: Date | string
    registros?: RegistroCreateNestedManyWithoutTabelaInput
  }

  export type TabelaUncheckedCreateWithoutMateriaisInput = {
    id?: number
    nome: string
    updatedAt?: Date | string
    registros?: RegistroUncheckedCreateNestedManyWithoutTabelaInput
  }

  export type TabelaCreateOrConnectWithoutMateriaisInput = {
    where: TabelaWhereUniqueInput
    create: XOR<TabelaCreateWithoutMateriaisInput, TabelaUncheckedCreateWithoutMateriaisInput>
  }

  export type MaterialUpsertWithoutPreco_tabelaInput = {
    update: XOR<MaterialUpdateWithoutPreco_tabelaInput, MaterialUncheckedUpdateWithoutPreco_tabelaInput>
    create: XOR<MaterialCreateWithoutPreco_tabelaInput, MaterialUncheckedCreateWithoutPreco_tabelaInput>
    where?: MaterialWhereInput
  }

  export type MaterialUpdateToOneWithWhereWithoutPreco_tabelaInput = {
    where?: MaterialWhereInput
    data: XOR<MaterialUpdateWithoutPreco_tabelaInput, MaterialUncheckedUpdateWithoutPreco_tabelaInput>
  }

  export type MaterialUpdateWithoutPreco_tabelaInput = {
    nome?: StringFieldUpdateOperationsInput | string
    v_venda?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estoque?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    editado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: BoolFieldUpdateOperationsInput | boolean
    items?: ItemPedidoUpdateManyWithoutMaterialNestedInput
    categoria?: CategoriaMaterialUpdateOneRequiredWithoutMateriaisNestedInput
    movimentacoes?: MovimentacaoEstoqueUpdateManyWithoutMaterialNestedInput
  }

  export type MaterialUncheckedUpdateWithoutPreco_tabelaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    catID?: IntFieldUpdateOperationsInput | number
    v_venda?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estoque?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    editado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: BoolFieldUpdateOperationsInput | boolean
    items?: ItemPedidoUncheckedUpdateManyWithoutMaterialNestedInput
    movimentacoes?: MovimentacaoEstoqueUncheckedUpdateManyWithoutMaterialNestedInput
  }

  export type TabelaUpsertWithoutMateriaisInput = {
    update: XOR<TabelaUpdateWithoutMateriaisInput, TabelaUncheckedUpdateWithoutMateriaisInput>
    create: XOR<TabelaCreateWithoutMateriaisInput, TabelaUncheckedCreateWithoutMateriaisInput>
    where?: TabelaWhereInput
  }

  export type TabelaUpdateToOneWithWhereWithoutMateriaisInput = {
    where?: TabelaWhereInput
    data: XOR<TabelaUpdateWithoutMateriaisInput, TabelaUncheckedUpdateWithoutMateriaisInput>
  }

  export type TabelaUpdateWithoutMateriaisInput = {
    nome?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    registros?: RegistroUpdateManyWithoutTabelaNestedInput
  }

  export type TabelaUncheckedUpdateWithoutMateriaisInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    registros?: RegistroUncheckedUpdateManyWithoutTabelaNestedInput
  }

  export type ItemPedidoCreateWithoutMaterialInput = {
    preco: Decimal | DecimalJsLike | number | string
    quantidade: Decimal | DecimalJsLike | number | string
    tara: Decimal | DecimalJsLike | number | string
    impureza: Decimal | DecimalJsLike | number | string
    pedido: PedidoCreateNestedOneWithoutItemsInput
  }

  export type ItemPedidoUncheckedCreateWithoutMaterialInput = {
    id?: number
    pedidoID: number
    preco: Decimal | DecimalJsLike | number | string
    quantidade: Decimal | DecimalJsLike | number | string
    tara: Decimal | DecimalJsLike | number | string
    impureza: Decimal | DecimalJsLike | number | string
  }

  export type ItemPedidoCreateOrConnectWithoutMaterialInput = {
    where: ItemPedidoWhereUniqueInput
    create: XOR<ItemPedidoCreateWithoutMaterialInput, ItemPedidoUncheckedCreateWithoutMaterialInput>
  }

  export type ItemPedidoCreateManyMaterialInputEnvelope = {
    data: ItemPedidoCreateManyMaterialInput | ItemPedidoCreateManyMaterialInput[]
    skipDuplicates?: boolean
  }

  export type CategoriaMaterialCreateWithoutMateriaisInput = {
    name: string
  }

  export type CategoriaMaterialUncheckedCreateWithoutMateriaisInput = {
    id?: number
    name: string
  }

  export type CategoriaMaterialCreateOrConnectWithoutMateriaisInput = {
    where: CategoriaMaterialWhereUniqueInput
    create: XOR<CategoriaMaterialCreateWithoutMateriaisInput, CategoriaMaterialUncheckedCreateWithoutMateriaisInput>
  }

  export type MovimentacaoEstoqueCreateWithoutMaterialInput = {
    tipo: $Enums.TipoMovimentacaoEstoque
    quantidade: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    origemID?: number | null
    origemTipo: $Enums.OrigemMovimentacaoEstoque
    conversaoEstoque?: ConversaoEstoqueCreateNestedOneWithoutMovimentacoesInput
  }

  export type MovimentacaoEstoqueUncheckedCreateWithoutMaterialInput = {
    id?: number
    tipo: $Enums.TipoMovimentacaoEstoque
    quantidade: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    origemID?: number | null
    origemTipo: $Enums.OrigemMovimentacaoEstoque
    conversaoEstoqueId?: number | null
  }

  export type MovimentacaoEstoqueCreateOrConnectWithoutMaterialInput = {
    where: MovimentacaoEstoqueWhereUniqueInput
    create: XOR<MovimentacaoEstoqueCreateWithoutMaterialInput, MovimentacaoEstoqueUncheckedCreateWithoutMaterialInput>
  }

  export type MovimentacaoEstoqueCreateManyMaterialInputEnvelope = {
    data: MovimentacaoEstoqueCreateManyMaterialInput | MovimentacaoEstoqueCreateManyMaterialInput[]
    skipDuplicates?: boolean
  }

  export type PrecoPorTabelaCreateWithoutMaterialInput = {
    v_compra: Decimal | DecimalJsLike | number | string
    editadoEm?: Date | string
    tabela: TabelaCreateNestedOneWithoutMateriaisInput
  }

  export type PrecoPorTabelaUncheckedCreateWithoutMaterialInput = {
    id?: number
    v_compra: Decimal | DecimalJsLike | number | string
    tabelaID: number
    editadoEm?: Date | string
  }

  export type PrecoPorTabelaCreateOrConnectWithoutMaterialInput = {
    where: PrecoPorTabelaWhereUniqueInput
    create: XOR<PrecoPorTabelaCreateWithoutMaterialInput, PrecoPorTabelaUncheckedCreateWithoutMaterialInput>
  }

  export type PrecoPorTabelaCreateManyMaterialInputEnvelope = {
    data: PrecoPorTabelaCreateManyMaterialInput | PrecoPorTabelaCreateManyMaterialInput[]
    skipDuplicates?: boolean
  }

  export type ItemPedidoUpsertWithWhereUniqueWithoutMaterialInput = {
    where: ItemPedidoWhereUniqueInput
    update: XOR<ItemPedidoUpdateWithoutMaterialInput, ItemPedidoUncheckedUpdateWithoutMaterialInput>
    create: XOR<ItemPedidoCreateWithoutMaterialInput, ItemPedidoUncheckedCreateWithoutMaterialInput>
  }

  export type ItemPedidoUpdateWithWhereUniqueWithoutMaterialInput = {
    where: ItemPedidoWhereUniqueInput
    data: XOR<ItemPedidoUpdateWithoutMaterialInput, ItemPedidoUncheckedUpdateWithoutMaterialInput>
  }

  export type ItemPedidoUpdateManyWithWhereWithoutMaterialInput = {
    where: ItemPedidoScalarWhereInput
    data: XOR<ItemPedidoUpdateManyMutationInput, ItemPedidoUncheckedUpdateManyWithoutMaterialInput>
  }

  export type ItemPedidoScalarWhereInput = {
    AND?: ItemPedidoScalarWhereInput | ItemPedidoScalarWhereInput[]
    OR?: ItemPedidoScalarWhereInput[]
    NOT?: ItemPedidoScalarWhereInput | ItemPedidoScalarWhereInput[]
    id?: IntFilter<"ItemPedido"> | number
    pedidoID?: IntFilter<"ItemPedido"> | number
    materialID?: IntFilter<"ItemPedido"> | number
    preco?: DecimalFilter<"ItemPedido"> | Decimal | DecimalJsLike | number | string
    quantidade?: DecimalFilter<"ItemPedido"> | Decimal | DecimalJsLike | number | string
    tara?: DecimalFilter<"ItemPedido"> | Decimal | DecimalJsLike | number | string
    impureza?: DecimalFilter<"ItemPedido"> | Decimal | DecimalJsLike | number | string
  }

  export type CategoriaMaterialUpsertWithoutMateriaisInput = {
    update: XOR<CategoriaMaterialUpdateWithoutMateriaisInput, CategoriaMaterialUncheckedUpdateWithoutMateriaisInput>
    create: XOR<CategoriaMaterialCreateWithoutMateriaisInput, CategoriaMaterialUncheckedCreateWithoutMateriaisInput>
    where?: CategoriaMaterialWhereInput
  }

  export type CategoriaMaterialUpdateToOneWithWhereWithoutMateriaisInput = {
    where?: CategoriaMaterialWhereInput
    data: XOR<CategoriaMaterialUpdateWithoutMateriaisInput, CategoriaMaterialUncheckedUpdateWithoutMateriaisInput>
  }

  export type CategoriaMaterialUpdateWithoutMateriaisInput = {
    name?: StringFieldUpdateOperationsInput | string
  }

  export type CategoriaMaterialUncheckedUpdateWithoutMateriaisInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
  }

  export type MovimentacaoEstoqueUpsertWithWhereUniqueWithoutMaterialInput = {
    where: MovimentacaoEstoqueWhereUniqueInput
    update: XOR<MovimentacaoEstoqueUpdateWithoutMaterialInput, MovimentacaoEstoqueUncheckedUpdateWithoutMaterialInput>
    create: XOR<MovimentacaoEstoqueCreateWithoutMaterialInput, MovimentacaoEstoqueUncheckedCreateWithoutMaterialInput>
  }

  export type MovimentacaoEstoqueUpdateWithWhereUniqueWithoutMaterialInput = {
    where: MovimentacaoEstoqueWhereUniqueInput
    data: XOR<MovimentacaoEstoqueUpdateWithoutMaterialInput, MovimentacaoEstoqueUncheckedUpdateWithoutMaterialInput>
  }

  export type MovimentacaoEstoqueUpdateManyWithWhereWithoutMaterialInput = {
    where: MovimentacaoEstoqueScalarWhereInput
    data: XOR<MovimentacaoEstoqueUpdateManyMutationInput, MovimentacaoEstoqueUncheckedUpdateManyWithoutMaterialInput>
  }

  export type MovimentacaoEstoqueScalarWhereInput = {
    AND?: MovimentacaoEstoqueScalarWhereInput | MovimentacaoEstoqueScalarWhereInput[]
    OR?: MovimentacaoEstoqueScalarWhereInput[]
    NOT?: MovimentacaoEstoqueScalarWhereInput | MovimentacaoEstoqueScalarWhereInput[]
    id?: IntFilter<"MovimentacaoEstoque"> | number
    materialID?: IntFilter<"MovimentacaoEstoque"> | number
    tipo?: EnumTipoMovimentacaoEstoqueFilter<"MovimentacaoEstoque"> | $Enums.TipoMovimentacaoEstoque
    quantidade?: DecimalFilter<"MovimentacaoEstoque"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"MovimentacaoEstoque"> | Date | string
    origemID?: IntNullableFilter<"MovimentacaoEstoque"> | number | null
    origemTipo?: EnumOrigemMovimentacaoEstoqueFilter<"MovimentacaoEstoque"> | $Enums.OrigemMovimentacaoEstoque
    conversaoEstoqueId?: IntNullableFilter<"MovimentacaoEstoque"> | number | null
  }

  export type PrecoPorTabelaUpsertWithWhereUniqueWithoutMaterialInput = {
    where: PrecoPorTabelaWhereUniqueInput
    update: XOR<PrecoPorTabelaUpdateWithoutMaterialInput, PrecoPorTabelaUncheckedUpdateWithoutMaterialInput>
    create: XOR<PrecoPorTabelaCreateWithoutMaterialInput, PrecoPorTabelaUncheckedCreateWithoutMaterialInput>
  }

  export type PrecoPorTabelaUpdateWithWhereUniqueWithoutMaterialInput = {
    where: PrecoPorTabelaWhereUniqueInput
    data: XOR<PrecoPorTabelaUpdateWithoutMaterialInput, PrecoPorTabelaUncheckedUpdateWithoutMaterialInput>
  }

  export type PrecoPorTabelaUpdateManyWithWhereWithoutMaterialInput = {
    where: PrecoPorTabelaScalarWhereInput
    data: XOR<PrecoPorTabelaUpdateManyMutationInput, PrecoPorTabelaUncheckedUpdateManyWithoutMaterialInput>
  }

  export type MaterialCreateWithoutCategoriaInput = {
    nome: string
    v_venda: Decimal | DecimalJsLike | number | string
    estoque: Decimal | DecimalJsLike | number | string
    criado_em?: Date | string
    editado_em?: Date | string
    status?: boolean
    items?: ItemPedidoCreateNestedManyWithoutMaterialInput
    movimentacoes?: MovimentacaoEstoqueCreateNestedManyWithoutMaterialInput
    preco_tabela?: PrecoPorTabelaCreateNestedManyWithoutMaterialInput
  }

  export type MaterialUncheckedCreateWithoutCategoriaInput = {
    id?: number
    nome: string
    v_venda: Decimal | DecimalJsLike | number | string
    estoque: Decimal | DecimalJsLike | number | string
    criado_em?: Date | string
    editado_em?: Date | string
    status?: boolean
    items?: ItemPedidoUncheckedCreateNestedManyWithoutMaterialInput
    movimentacoes?: MovimentacaoEstoqueUncheckedCreateNestedManyWithoutMaterialInput
    preco_tabela?: PrecoPorTabelaUncheckedCreateNestedManyWithoutMaterialInput
  }

  export type MaterialCreateOrConnectWithoutCategoriaInput = {
    where: MaterialWhereUniqueInput
    create: XOR<MaterialCreateWithoutCategoriaInput, MaterialUncheckedCreateWithoutCategoriaInput>
  }

  export type MaterialCreateManyCategoriaInputEnvelope = {
    data: MaterialCreateManyCategoriaInput | MaterialCreateManyCategoriaInput[]
    skipDuplicates?: boolean
  }

  export type MaterialUpsertWithWhereUniqueWithoutCategoriaInput = {
    where: MaterialWhereUniqueInput
    update: XOR<MaterialUpdateWithoutCategoriaInput, MaterialUncheckedUpdateWithoutCategoriaInput>
    create: XOR<MaterialCreateWithoutCategoriaInput, MaterialUncheckedCreateWithoutCategoriaInput>
  }

  export type MaterialUpdateWithWhereUniqueWithoutCategoriaInput = {
    where: MaterialWhereUniqueInput
    data: XOR<MaterialUpdateWithoutCategoriaInput, MaterialUncheckedUpdateWithoutCategoriaInput>
  }

  export type MaterialUpdateManyWithWhereWithoutCategoriaInput = {
    where: MaterialScalarWhereInput
    data: XOR<MaterialUpdateManyMutationInput, MaterialUncheckedUpdateManyWithoutCategoriaInput>
  }

  export type MaterialScalarWhereInput = {
    AND?: MaterialScalarWhereInput | MaterialScalarWhereInput[]
    OR?: MaterialScalarWhereInput[]
    NOT?: MaterialScalarWhereInput | MaterialScalarWhereInput[]
    id?: IntFilter<"Material"> | number
    nome?: StringFilter<"Material"> | string
    catID?: IntFilter<"Material"> | number
    v_venda?: DecimalFilter<"Material"> | Decimal | DecimalJsLike | number | string
    estoque?: DecimalFilter<"Material"> | Decimal | DecimalJsLike | number | string
    criado_em?: DateTimeFilter<"Material"> | Date | string
    editado_em?: DateTimeFilter<"Material"> | Date | string
    status?: BoolFilter<"Material"> | boolean
  }

  export type MaterialCreateWithoutItemsInput = {
    nome: string
    v_venda: Decimal | DecimalJsLike | number | string
    estoque: Decimal | DecimalJsLike | number | string
    criado_em?: Date | string
    editado_em?: Date | string
    status?: boolean
    categoria: CategoriaMaterialCreateNestedOneWithoutMateriaisInput
    movimentacoes?: MovimentacaoEstoqueCreateNestedManyWithoutMaterialInput
    preco_tabela?: PrecoPorTabelaCreateNestedManyWithoutMaterialInput
  }

  export type MaterialUncheckedCreateWithoutItemsInput = {
    id?: number
    nome: string
    catID: number
    v_venda: Decimal | DecimalJsLike | number | string
    estoque: Decimal | DecimalJsLike | number | string
    criado_em?: Date | string
    editado_em?: Date | string
    status?: boolean
    movimentacoes?: MovimentacaoEstoqueUncheckedCreateNestedManyWithoutMaterialInput
    preco_tabela?: PrecoPorTabelaUncheckedCreateNestedManyWithoutMaterialInput
  }

  export type MaterialCreateOrConnectWithoutItemsInput = {
    where: MaterialWhereUniqueInput
    create: XOR<MaterialCreateWithoutItemsInput, MaterialUncheckedCreateWithoutItemsInput>
  }

  export type PedidoCreateWithoutItemsInput = {
    tipo: $Enums.TipoPedido
    valor_total?: Decimal | DecimalJsLike | number | string
    status: $Enums.TipoStatusPedido
    criado_em?: Date | string
    atualizado?: Date | string
    pagamentos?: PagamentoCreateNestedManyWithoutPedidoInput
    registro?: RegistroCreateNestedOneWithoutPedidosInput
    user: UserCreateNestedOneWithoutPedidosInput
  }

  export type PedidoUncheckedCreateWithoutItemsInput = {
    id?: number
    regID?: number | null
    tipo: $Enums.TipoPedido
    valor_total?: Decimal | DecimalJsLike | number | string
    status: $Enums.TipoStatusPedido
    userID: number
    criado_em?: Date | string
    atualizado?: Date | string
    pagamentos?: PagamentoUncheckedCreateNestedManyWithoutPedidoInput
  }

  export type PedidoCreateOrConnectWithoutItemsInput = {
    where: PedidoWhereUniqueInput
    create: XOR<PedidoCreateWithoutItemsInput, PedidoUncheckedCreateWithoutItemsInput>
  }

  export type MaterialUpsertWithoutItemsInput = {
    update: XOR<MaterialUpdateWithoutItemsInput, MaterialUncheckedUpdateWithoutItemsInput>
    create: XOR<MaterialCreateWithoutItemsInput, MaterialUncheckedCreateWithoutItemsInput>
    where?: MaterialWhereInput
  }

  export type MaterialUpdateToOneWithWhereWithoutItemsInput = {
    where?: MaterialWhereInput
    data: XOR<MaterialUpdateWithoutItemsInput, MaterialUncheckedUpdateWithoutItemsInput>
  }

  export type MaterialUpdateWithoutItemsInput = {
    nome?: StringFieldUpdateOperationsInput | string
    v_venda?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estoque?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    editado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: BoolFieldUpdateOperationsInput | boolean
    categoria?: CategoriaMaterialUpdateOneRequiredWithoutMateriaisNestedInput
    movimentacoes?: MovimentacaoEstoqueUpdateManyWithoutMaterialNestedInput
    preco_tabela?: PrecoPorTabelaUpdateManyWithoutMaterialNestedInput
  }

  export type MaterialUncheckedUpdateWithoutItemsInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    catID?: IntFieldUpdateOperationsInput | number
    v_venda?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estoque?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    editado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: BoolFieldUpdateOperationsInput | boolean
    movimentacoes?: MovimentacaoEstoqueUncheckedUpdateManyWithoutMaterialNestedInput
    preco_tabela?: PrecoPorTabelaUncheckedUpdateManyWithoutMaterialNestedInput
  }

  export type PedidoUpsertWithoutItemsInput = {
    update: XOR<PedidoUpdateWithoutItemsInput, PedidoUncheckedUpdateWithoutItemsInput>
    create: XOR<PedidoCreateWithoutItemsInput, PedidoUncheckedCreateWithoutItemsInput>
    where?: PedidoWhereInput
  }

  export type PedidoUpdateToOneWithWhereWithoutItemsInput = {
    where?: PedidoWhereInput
    data: XOR<PedidoUpdateWithoutItemsInput, PedidoUncheckedUpdateWithoutItemsInput>
  }

  export type PedidoUpdateWithoutItemsInput = {
    tipo?: EnumTipoPedidoFieldUpdateOperationsInput | $Enums.TipoPedido
    valor_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumTipoStatusPedidoFieldUpdateOperationsInput | $Enums.TipoStatusPedido
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado?: DateTimeFieldUpdateOperationsInput | Date | string
    pagamentos?: PagamentoUpdateManyWithoutPedidoNestedInput
    registro?: RegistroUpdateOneWithoutPedidosNestedInput
    user?: UserUpdateOneRequiredWithoutPedidosNestedInput
  }

  export type PedidoUncheckedUpdateWithoutItemsInput = {
    id?: IntFieldUpdateOperationsInput | number
    regID?: NullableIntFieldUpdateOperationsInput | number | null
    tipo?: EnumTipoPedidoFieldUpdateOperationsInput | $Enums.TipoPedido
    valor_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumTipoStatusPedidoFieldUpdateOperationsInput | $Enums.TipoStatusPedido
    userID?: IntFieldUpdateOperationsInput | number
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado?: DateTimeFieldUpdateOperationsInput | Date | string
    pagamentos?: PagamentoUncheckedUpdateManyWithoutPedidoNestedInput
  }

  export type ItemPedidoCreateWithoutPedidoInput = {
    preco: Decimal | DecimalJsLike | number | string
    quantidade: Decimal | DecimalJsLike | number | string
    tara: Decimal | DecimalJsLike | number | string
    impureza: Decimal | DecimalJsLike | number | string
    material: MaterialCreateNestedOneWithoutItemsInput
  }

  export type ItemPedidoUncheckedCreateWithoutPedidoInput = {
    id?: number
    materialID: number
    preco: Decimal | DecimalJsLike | number | string
    quantidade: Decimal | DecimalJsLike | number | string
    tara: Decimal | DecimalJsLike | number | string
    impureza: Decimal | DecimalJsLike | number | string
  }

  export type ItemPedidoCreateOrConnectWithoutPedidoInput = {
    where: ItemPedidoWhereUniqueInput
    create: XOR<ItemPedidoCreateWithoutPedidoInput, ItemPedidoUncheckedCreateWithoutPedidoInput>
  }

  export type ItemPedidoCreateManyPedidoInputEnvelope = {
    data: ItemPedidoCreateManyPedidoInput | ItemPedidoCreateManyPedidoInput[]
    skipDuplicates?: boolean
  }

  export type PagamentoCreateWithoutPedidoInput = {
    valor: Decimal | DecimalJsLike | number | string
    forma: $Enums.FormaPagamento
    data?: Date | string
  }

  export type PagamentoUncheckedCreateWithoutPedidoInput = {
    id?: number
    valor: Decimal | DecimalJsLike | number | string
    forma: $Enums.FormaPagamento
    data?: Date | string
  }

  export type PagamentoCreateOrConnectWithoutPedidoInput = {
    where: PagamentoWhereUniqueInput
    create: XOR<PagamentoCreateWithoutPedidoInput, PagamentoUncheckedCreateWithoutPedidoInput>
  }

  export type PagamentoCreateManyPedidoInputEnvelope = {
    data: PagamentoCreateManyPedidoInput | PagamentoCreateManyPedidoInput[]
    skipDuplicates?: boolean
  }

  export type RegistroCreateWithoutPedidosInput = {
    nome_razao: string
    apelido?: string | null
    tipo: $Enums.TipoRegistro
    email?: string | null
    telefone?: string | null
    criadoEm?: Date | string
    dados_pagamento?: DadosPagamentoCreateNestedOneWithoutRegistroInput
    endereco?: EnderecoCreateNestedOneWithoutRegistroInput
    fisica?: PessoaFisicaCreateNestedOneWithoutRegistroInput
    juridica?: PessoaJuridicaCreateNestedOneWithoutRegistroInput
    tabela: TabelaCreateNestedOneWithoutRegistrosInput
    saldo?: SaldoFinanceiroCreateNestedOneWithoutRegistroInput
  }

  export type RegistroUncheckedCreateWithoutPedidosInput = {
    id?: number
    nome_razao: string
    apelido?: string | null
    tipo: $Enums.TipoRegistro
    tabelaID: number
    email?: string | null
    telefone?: string | null
    criadoEm?: Date | string
    dados_pagamento?: DadosPagamentoUncheckedCreateNestedOneWithoutRegistroInput
    endereco?: EnderecoUncheckedCreateNestedOneWithoutRegistroInput
    fisica?: PessoaFisicaUncheckedCreateNestedOneWithoutRegistroInput
    juridica?: PessoaJuridicaUncheckedCreateNestedOneWithoutRegistroInput
    saldo?: SaldoFinanceiroUncheckedCreateNestedOneWithoutRegistroInput
  }

  export type RegistroCreateOrConnectWithoutPedidosInput = {
    where: RegistroWhereUniqueInput
    create: XOR<RegistroCreateWithoutPedidosInput, RegistroUncheckedCreateWithoutPedidosInput>
  }

  export type UserCreateWithoutPedidosInput = {
    nome: string
    email: string
    senha: string
    telefone: string
    deletedAt?: Date | string | null
    cargo: CargoCreateNestedOneWithoutUsersInput
    permissoes?: PermissoesCreateNestedManyWithoutUsersInput
    caixas?: LivroCaixaCreateNestedManyWithoutUsuarioInput
  }

  export type UserUncheckedCreateWithoutPedidosInput = {
    id?: number
    nome: string
    email: string
    senha: string
    telefone: string
    cargoID: number
    deletedAt?: Date | string | null
    permissoes?: PermissoesUncheckedCreateNestedManyWithoutUsersInput
    caixas?: LivroCaixaUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UserCreateOrConnectWithoutPedidosInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutPedidosInput, UserUncheckedCreateWithoutPedidosInput>
  }

  export type ItemPedidoUpsertWithWhereUniqueWithoutPedidoInput = {
    where: ItemPedidoWhereUniqueInput
    update: XOR<ItemPedidoUpdateWithoutPedidoInput, ItemPedidoUncheckedUpdateWithoutPedidoInput>
    create: XOR<ItemPedidoCreateWithoutPedidoInput, ItemPedidoUncheckedCreateWithoutPedidoInput>
  }

  export type ItemPedidoUpdateWithWhereUniqueWithoutPedidoInput = {
    where: ItemPedidoWhereUniqueInput
    data: XOR<ItemPedidoUpdateWithoutPedidoInput, ItemPedidoUncheckedUpdateWithoutPedidoInput>
  }

  export type ItemPedidoUpdateManyWithWhereWithoutPedidoInput = {
    where: ItemPedidoScalarWhereInput
    data: XOR<ItemPedidoUpdateManyMutationInput, ItemPedidoUncheckedUpdateManyWithoutPedidoInput>
  }

  export type PagamentoUpsertWithWhereUniqueWithoutPedidoInput = {
    where: PagamentoWhereUniqueInput
    update: XOR<PagamentoUpdateWithoutPedidoInput, PagamentoUncheckedUpdateWithoutPedidoInput>
    create: XOR<PagamentoCreateWithoutPedidoInput, PagamentoUncheckedCreateWithoutPedidoInput>
  }

  export type PagamentoUpdateWithWhereUniqueWithoutPedidoInput = {
    where: PagamentoWhereUniqueInput
    data: XOR<PagamentoUpdateWithoutPedidoInput, PagamentoUncheckedUpdateWithoutPedidoInput>
  }

  export type PagamentoUpdateManyWithWhereWithoutPedidoInput = {
    where: PagamentoScalarWhereInput
    data: XOR<PagamentoUpdateManyMutationInput, PagamentoUncheckedUpdateManyWithoutPedidoInput>
  }

  export type PagamentoScalarWhereInput = {
    AND?: PagamentoScalarWhereInput | PagamentoScalarWhereInput[]
    OR?: PagamentoScalarWhereInput[]
    NOT?: PagamentoScalarWhereInput | PagamentoScalarWhereInput[]
    id?: IntFilter<"Pagamento"> | number
    pedidoID?: IntFilter<"Pagamento"> | number
    valor?: DecimalFilter<"Pagamento"> | Decimal | DecimalJsLike | number | string
    forma?: EnumFormaPagamentoFilter<"Pagamento"> | $Enums.FormaPagamento
    data?: DateTimeFilter<"Pagamento"> | Date | string
  }

  export type RegistroUpsertWithoutPedidosInput = {
    update: XOR<RegistroUpdateWithoutPedidosInput, RegistroUncheckedUpdateWithoutPedidosInput>
    create: XOR<RegistroCreateWithoutPedidosInput, RegistroUncheckedCreateWithoutPedidosInput>
    where?: RegistroWhereInput
  }

  export type RegistroUpdateToOneWithWhereWithoutPedidosInput = {
    where?: RegistroWhereInput
    data: XOR<RegistroUpdateWithoutPedidosInput, RegistroUncheckedUpdateWithoutPedidosInput>
  }

  export type RegistroUpdateWithoutPedidosInput = {
    nome_razao?: StringFieldUpdateOperationsInput | string
    apelido?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumTipoRegistroFieldUpdateOperationsInput | $Enums.TipoRegistro
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    dados_pagamento?: DadosPagamentoUpdateOneWithoutRegistroNestedInput
    endereco?: EnderecoUpdateOneWithoutRegistroNestedInput
    fisica?: PessoaFisicaUpdateOneWithoutRegistroNestedInput
    juridica?: PessoaJuridicaUpdateOneWithoutRegistroNestedInput
    tabela?: TabelaUpdateOneRequiredWithoutRegistrosNestedInput
    saldo?: SaldoFinanceiroUpdateOneWithoutRegistroNestedInput
  }

  export type RegistroUncheckedUpdateWithoutPedidosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_razao?: StringFieldUpdateOperationsInput | string
    apelido?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumTipoRegistroFieldUpdateOperationsInput | $Enums.TipoRegistro
    tabelaID?: IntFieldUpdateOperationsInput | number
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    dados_pagamento?: DadosPagamentoUncheckedUpdateOneWithoutRegistroNestedInput
    endereco?: EnderecoUncheckedUpdateOneWithoutRegistroNestedInput
    fisica?: PessoaFisicaUncheckedUpdateOneWithoutRegistroNestedInput
    juridica?: PessoaJuridicaUncheckedUpdateOneWithoutRegistroNestedInput
    saldo?: SaldoFinanceiroUncheckedUpdateOneWithoutRegistroNestedInput
  }

  export type UserUpsertWithoutPedidosInput = {
    update: XOR<UserUpdateWithoutPedidosInput, UserUncheckedUpdateWithoutPedidosInput>
    create: XOR<UserCreateWithoutPedidosInput, UserUncheckedCreateWithoutPedidosInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutPedidosInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutPedidosInput, UserUncheckedUpdateWithoutPedidosInput>
  }

  export type UserUpdateWithoutPedidosInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cargo?: CargoUpdateOneRequiredWithoutUsersNestedInput
    permissoes?: PermissoesUpdateManyWithoutUsersNestedInput
    caixas?: LivroCaixaUpdateManyWithoutUsuarioNestedInput
  }

  export type UserUncheckedUpdateWithoutPedidosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    cargoID?: IntFieldUpdateOperationsInput | number
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    permissoes?: PermissoesUncheckedUpdateManyWithoutUsersNestedInput
    caixas?: LivroCaixaUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type PedidoCreateWithoutPagamentosInput = {
    tipo: $Enums.TipoPedido
    valor_total?: Decimal | DecimalJsLike | number | string
    status: $Enums.TipoStatusPedido
    criado_em?: Date | string
    atualizado?: Date | string
    items?: ItemPedidoCreateNestedManyWithoutPedidoInput
    registro?: RegistroCreateNestedOneWithoutPedidosInput
    user: UserCreateNestedOneWithoutPedidosInput
  }

  export type PedidoUncheckedCreateWithoutPagamentosInput = {
    id?: number
    regID?: number | null
    tipo: $Enums.TipoPedido
    valor_total?: Decimal | DecimalJsLike | number | string
    status: $Enums.TipoStatusPedido
    userID: number
    criado_em?: Date | string
    atualizado?: Date | string
    items?: ItemPedidoUncheckedCreateNestedManyWithoutPedidoInput
  }

  export type PedidoCreateOrConnectWithoutPagamentosInput = {
    where: PedidoWhereUniqueInput
    create: XOR<PedidoCreateWithoutPagamentosInput, PedidoUncheckedCreateWithoutPagamentosInput>
  }

  export type PedidoUpsertWithoutPagamentosInput = {
    update: XOR<PedidoUpdateWithoutPagamentosInput, PedidoUncheckedUpdateWithoutPagamentosInput>
    create: XOR<PedidoCreateWithoutPagamentosInput, PedidoUncheckedCreateWithoutPagamentosInput>
    where?: PedidoWhereInput
  }

  export type PedidoUpdateToOneWithWhereWithoutPagamentosInput = {
    where?: PedidoWhereInput
    data: XOR<PedidoUpdateWithoutPagamentosInput, PedidoUncheckedUpdateWithoutPagamentosInput>
  }

  export type PedidoUpdateWithoutPagamentosInput = {
    tipo?: EnumTipoPedidoFieldUpdateOperationsInput | $Enums.TipoPedido
    valor_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumTipoStatusPedidoFieldUpdateOperationsInput | $Enums.TipoStatusPedido
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado?: DateTimeFieldUpdateOperationsInput | Date | string
    items?: ItemPedidoUpdateManyWithoutPedidoNestedInput
    registro?: RegistroUpdateOneWithoutPedidosNestedInput
    user?: UserUpdateOneRequiredWithoutPedidosNestedInput
  }

  export type PedidoUncheckedUpdateWithoutPagamentosInput = {
    id?: IntFieldUpdateOperationsInput | number
    regID?: NullableIntFieldUpdateOperationsInput | number | null
    tipo?: EnumTipoPedidoFieldUpdateOperationsInput | $Enums.TipoPedido
    valor_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumTipoStatusPedidoFieldUpdateOperationsInput | $Enums.TipoStatusPedido
    userID?: IntFieldUpdateOperationsInput | number
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado?: DateTimeFieldUpdateOperationsInput | Date | string
    items?: ItemPedidoUncheckedUpdateManyWithoutPedidoNestedInput
  }

  export type MovimentacaoFinanceiraCreateWithoutContaInput = {
    tipoMovimentacao: $Enums.TipoMovimentacao
    valor: Decimal | DecimalJsLike | number | string
    descricao?: string | null
    data?: Date | string
    origem: $Enums.TipoOrigem
    origemID?: number | null
    caixa: LivroCaixaCreateNestedOneWithoutMovimentacoesInput
  }

  export type MovimentacaoFinanceiraUncheckedCreateWithoutContaInput = {
    id?: number
    tipoMovimentacao: $Enums.TipoMovimentacao
    valor: Decimal | DecimalJsLike | number | string
    descricao?: string | null
    data?: Date | string
    origem: $Enums.TipoOrigem
    origemID?: number | null
    caixaID: number
  }

  export type MovimentacaoFinanceiraCreateOrConnectWithoutContaInput = {
    where: MovimentacaoFinanceiraWhereUniqueInput
    create: XOR<MovimentacaoFinanceiraCreateWithoutContaInput, MovimentacaoFinanceiraUncheckedCreateWithoutContaInput>
  }

  export type MovimentacaoFinanceiraCreateManyContaInputEnvelope = {
    data: MovimentacaoFinanceiraCreateManyContaInput | MovimentacaoFinanceiraCreateManyContaInput[]
    skipDuplicates?: boolean
  }

  export type MovimentacaoFinanceiraUpsertWithWhereUniqueWithoutContaInput = {
    where: MovimentacaoFinanceiraWhereUniqueInput
    update: XOR<MovimentacaoFinanceiraUpdateWithoutContaInput, MovimentacaoFinanceiraUncheckedUpdateWithoutContaInput>
    create: XOR<MovimentacaoFinanceiraCreateWithoutContaInput, MovimentacaoFinanceiraUncheckedCreateWithoutContaInput>
  }

  export type MovimentacaoFinanceiraUpdateWithWhereUniqueWithoutContaInput = {
    where: MovimentacaoFinanceiraWhereUniqueInput
    data: XOR<MovimentacaoFinanceiraUpdateWithoutContaInput, MovimentacaoFinanceiraUncheckedUpdateWithoutContaInput>
  }

  export type MovimentacaoFinanceiraUpdateManyWithWhereWithoutContaInput = {
    where: MovimentacaoFinanceiraScalarWhereInput
    data: XOR<MovimentacaoFinanceiraUpdateManyMutationInput, MovimentacaoFinanceiraUncheckedUpdateManyWithoutContaInput>
  }

  export type MovimentacaoFinanceiraScalarWhereInput = {
    AND?: MovimentacaoFinanceiraScalarWhereInput | MovimentacaoFinanceiraScalarWhereInput[]
    OR?: MovimentacaoFinanceiraScalarWhereInput[]
    NOT?: MovimentacaoFinanceiraScalarWhereInput | MovimentacaoFinanceiraScalarWhereInput[]
    id?: IntFilter<"MovimentacaoFinanceira"> | number
    contaID?: IntFilter<"MovimentacaoFinanceira"> | number
    tipoMovimentacao?: EnumTipoMovimentacaoFilter<"MovimentacaoFinanceira"> | $Enums.TipoMovimentacao
    valor?: DecimalFilter<"MovimentacaoFinanceira"> | Decimal | DecimalJsLike | number | string
    descricao?: StringNullableFilter<"MovimentacaoFinanceira"> | string | null
    data?: DateTimeFilter<"MovimentacaoFinanceira"> | Date | string
    origem?: EnumTipoOrigemFilter<"MovimentacaoFinanceira"> | $Enums.TipoOrigem
    origemID?: IntNullableFilter<"MovimentacaoFinanceira"> | number | null
    caixaID?: IntFilter<"MovimentacaoFinanceira"> | number
  }

  export type ContaCreateWithoutMovimentacoesInput = {
    nome: string
    saldo: Decimal | DecimalJsLike | number | string
  }

  export type ContaUncheckedCreateWithoutMovimentacoesInput = {
    id?: number
    nome: string
    saldo: Decimal | DecimalJsLike | number | string
  }

  export type ContaCreateOrConnectWithoutMovimentacoesInput = {
    where: ContaWhereUniqueInput
    create: XOR<ContaCreateWithoutMovimentacoesInput, ContaUncheckedCreateWithoutMovimentacoesInput>
  }

  export type LivroCaixaCreateWithoutMovimentacoesInput = {
    dataAbertura?: Date | string
    dataFechamento?: Date | string | null
    saldoInicial: Decimal | DecimalJsLike | number | string
    saldoFinal?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.StatusCaixa
    usuario: UserCreateNestedOneWithoutCaixasInput
  }

  export type LivroCaixaUncheckedCreateWithoutMovimentacoesInput = {
    id?: number
    dataAbertura?: Date | string
    dataFechamento?: Date | string | null
    saldoInicial: Decimal | DecimalJsLike | number | string
    saldoFinal?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.StatusCaixa
    usuarioID: number
  }

  export type LivroCaixaCreateOrConnectWithoutMovimentacoesInput = {
    where: LivroCaixaWhereUniqueInput
    create: XOR<LivroCaixaCreateWithoutMovimentacoesInput, LivroCaixaUncheckedCreateWithoutMovimentacoesInput>
  }

  export type ContaUpsertWithoutMovimentacoesInput = {
    update: XOR<ContaUpdateWithoutMovimentacoesInput, ContaUncheckedUpdateWithoutMovimentacoesInput>
    create: XOR<ContaCreateWithoutMovimentacoesInput, ContaUncheckedCreateWithoutMovimentacoesInput>
    where?: ContaWhereInput
  }

  export type ContaUpdateToOneWithWhereWithoutMovimentacoesInput = {
    where?: ContaWhereInput
    data: XOR<ContaUpdateWithoutMovimentacoesInput, ContaUncheckedUpdateWithoutMovimentacoesInput>
  }

  export type ContaUpdateWithoutMovimentacoesInput = {
    nome?: StringFieldUpdateOperationsInput | string
    saldo?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type ContaUncheckedUpdateWithoutMovimentacoesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    saldo?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type LivroCaixaUpsertWithoutMovimentacoesInput = {
    update: XOR<LivroCaixaUpdateWithoutMovimentacoesInput, LivroCaixaUncheckedUpdateWithoutMovimentacoesInput>
    create: XOR<LivroCaixaCreateWithoutMovimentacoesInput, LivroCaixaUncheckedCreateWithoutMovimentacoesInput>
    where?: LivroCaixaWhereInput
  }

  export type LivroCaixaUpdateToOneWithWhereWithoutMovimentacoesInput = {
    where?: LivroCaixaWhereInput
    data: XOR<LivroCaixaUpdateWithoutMovimentacoesInput, LivroCaixaUncheckedUpdateWithoutMovimentacoesInput>
  }

  export type LivroCaixaUpdateWithoutMovimentacoesInput = {
    dataAbertura?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFechamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saldoInicial?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    saldoFinal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumStatusCaixaFieldUpdateOperationsInput | $Enums.StatusCaixa
    usuario?: UserUpdateOneRequiredWithoutCaixasNestedInput
  }

  export type LivroCaixaUncheckedUpdateWithoutMovimentacoesInput = {
    id?: IntFieldUpdateOperationsInput | number
    dataAbertura?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFechamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saldoInicial?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    saldoFinal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumStatusCaixaFieldUpdateOperationsInput | $Enums.StatusCaixa
    usuarioID?: IntFieldUpdateOperationsInput | number
  }

  export type ConversaoEstoqueCreateWithoutMovimentacoesInput = {
    mat_origemID: number
    mat_destinoID: number
    quantidade: Decimal | DecimalJsLike | number | string
    descricao?: string | null
    createdAt?: Date | string
  }

  export type ConversaoEstoqueUncheckedCreateWithoutMovimentacoesInput = {
    id?: number
    mat_origemID: number
    mat_destinoID: number
    quantidade: Decimal | DecimalJsLike | number | string
    descricao?: string | null
    createdAt?: Date | string
  }

  export type ConversaoEstoqueCreateOrConnectWithoutMovimentacoesInput = {
    where: ConversaoEstoqueWhereUniqueInput
    create: XOR<ConversaoEstoqueCreateWithoutMovimentacoesInput, ConversaoEstoqueUncheckedCreateWithoutMovimentacoesInput>
  }

  export type MaterialCreateWithoutMovimentacoesInput = {
    nome: string
    v_venda: Decimal | DecimalJsLike | number | string
    estoque: Decimal | DecimalJsLike | number | string
    criado_em?: Date | string
    editado_em?: Date | string
    status?: boolean
    items?: ItemPedidoCreateNestedManyWithoutMaterialInput
    categoria: CategoriaMaterialCreateNestedOneWithoutMateriaisInput
    preco_tabela?: PrecoPorTabelaCreateNestedManyWithoutMaterialInput
  }

  export type MaterialUncheckedCreateWithoutMovimentacoesInput = {
    id?: number
    nome: string
    catID: number
    v_venda: Decimal | DecimalJsLike | number | string
    estoque: Decimal | DecimalJsLike | number | string
    criado_em?: Date | string
    editado_em?: Date | string
    status?: boolean
    items?: ItemPedidoUncheckedCreateNestedManyWithoutMaterialInput
    preco_tabela?: PrecoPorTabelaUncheckedCreateNestedManyWithoutMaterialInput
  }

  export type MaterialCreateOrConnectWithoutMovimentacoesInput = {
    where: MaterialWhereUniqueInput
    create: XOR<MaterialCreateWithoutMovimentacoesInput, MaterialUncheckedCreateWithoutMovimentacoesInput>
  }

  export type ConversaoEstoqueUpsertWithoutMovimentacoesInput = {
    update: XOR<ConversaoEstoqueUpdateWithoutMovimentacoesInput, ConversaoEstoqueUncheckedUpdateWithoutMovimentacoesInput>
    create: XOR<ConversaoEstoqueCreateWithoutMovimentacoesInput, ConversaoEstoqueUncheckedCreateWithoutMovimentacoesInput>
    where?: ConversaoEstoqueWhereInput
  }

  export type ConversaoEstoqueUpdateToOneWithWhereWithoutMovimentacoesInput = {
    where?: ConversaoEstoqueWhereInput
    data: XOR<ConversaoEstoqueUpdateWithoutMovimentacoesInput, ConversaoEstoqueUncheckedUpdateWithoutMovimentacoesInput>
  }

  export type ConversaoEstoqueUpdateWithoutMovimentacoesInput = {
    mat_origemID?: IntFieldUpdateOperationsInput | number
    mat_destinoID?: IntFieldUpdateOperationsInput | number
    quantidade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConversaoEstoqueUncheckedUpdateWithoutMovimentacoesInput = {
    id?: IntFieldUpdateOperationsInput | number
    mat_origemID?: IntFieldUpdateOperationsInput | number
    mat_destinoID?: IntFieldUpdateOperationsInput | number
    quantidade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MaterialUpsertWithoutMovimentacoesInput = {
    update: XOR<MaterialUpdateWithoutMovimentacoesInput, MaterialUncheckedUpdateWithoutMovimentacoesInput>
    create: XOR<MaterialCreateWithoutMovimentacoesInput, MaterialUncheckedCreateWithoutMovimentacoesInput>
    where?: MaterialWhereInput
  }

  export type MaterialUpdateToOneWithWhereWithoutMovimentacoesInput = {
    where?: MaterialWhereInput
    data: XOR<MaterialUpdateWithoutMovimentacoesInput, MaterialUncheckedUpdateWithoutMovimentacoesInput>
  }

  export type MaterialUpdateWithoutMovimentacoesInput = {
    nome?: StringFieldUpdateOperationsInput | string
    v_venda?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estoque?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    editado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: BoolFieldUpdateOperationsInput | boolean
    items?: ItemPedidoUpdateManyWithoutMaterialNestedInput
    categoria?: CategoriaMaterialUpdateOneRequiredWithoutMateriaisNestedInput
    preco_tabela?: PrecoPorTabelaUpdateManyWithoutMaterialNestedInput
  }

  export type MaterialUncheckedUpdateWithoutMovimentacoesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    catID?: IntFieldUpdateOperationsInput | number
    v_venda?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estoque?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    editado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: BoolFieldUpdateOperationsInput | boolean
    items?: ItemPedidoUncheckedUpdateManyWithoutMaterialNestedInput
    preco_tabela?: PrecoPorTabelaUncheckedUpdateManyWithoutMaterialNestedInput
  }

  export type MovimentacaoEstoqueCreateWithoutConversaoEstoqueInput = {
    tipo: $Enums.TipoMovimentacaoEstoque
    quantidade: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    origemID?: number | null
    origemTipo: $Enums.OrigemMovimentacaoEstoque
    material: MaterialCreateNestedOneWithoutMovimentacoesInput
  }

  export type MovimentacaoEstoqueUncheckedCreateWithoutConversaoEstoqueInput = {
    id?: number
    materialID: number
    tipo: $Enums.TipoMovimentacaoEstoque
    quantidade: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    origemID?: number | null
    origemTipo: $Enums.OrigemMovimentacaoEstoque
  }

  export type MovimentacaoEstoqueCreateOrConnectWithoutConversaoEstoqueInput = {
    where: MovimentacaoEstoqueWhereUniqueInput
    create: XOR<MovimentacaoEstoqueCreateWithoutConversaoEstoqueInput, MovimentacaoEstoqueUncheckedCreateWithoutConversaoEstoqueInput>
  }

  export type MovimentacaoEstoqueCreateManyConversaoEstoqueInputEnvelope = {
    data: MovimentacaoEstoqueCreateManyConversaoEstoqueInput | MovimentacaoEstoqueCreateManyConversaoEstoqueInput[]
    skipDuplicates?: boolean
  }

  export type MovimentacaoEstoqueUpsertWithWhereUniqueWithoutConversaoEstoqueInput = {
    where: MovimentacaoEstoqueWhereUniqueInput
    update: XOR<MovimentacaoEstoqueUpdateWithoutConversaoEstoqueInput, MovimentacaoEstoqueUncheckedUpdateWithoutConversaoEstoqueInput>
    create: XOR<MovimentacaoEstoqueCreateWithoutConversaoEstoqueInput, MovimentacaoEstoqueUncheckedCreateWithoutConversaoEstoqueInput>
  }

  export type MovimentacaoEstoqueUpdateWithWhereUniqueWithoutConversaoEstoqueInput = {
    where: MovimentacaoEstoqueWhereUniqueInput
    data: XOR<MovimentacaoEstoqueUpdateWithoutConversaoEstoqueInput, MovimentacaoEstoqueUncheckedUpdateWithoutConversaoEstoqueInput>
  }

  export type MovimentacaoEstoqueUpdateManyWithWhereWithoutConversaoEstoqueInput = {
    where: MovimentacaoEstoqueScalarWhereInput
    data: XOR<MovimentacaoEstoqueUpdateManyMutationInput, MovimentacaoEstoqueUncheckedUpdateManyWithoutConversaoEstoqueInput>
  }

  export type UserCreateWithoutCaixasInput = {
    nome: string
    email: string
    senha: string
    telefone: string
    deletedAt?: Date | string | null
    pedidos?: PedidoCreateNestedManyWithoutUserInput
    cargo: CargoCreateNestedOneWithoutUsersInput
    permissoes?: PermissoesCreateNestedManyWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutCaixasInput = {
    id?: number
    nome: string
    email: string
    senha: string
    telefone: string
    cargoID: number
    deletedAt?: Date | string | null
    pedidos?: PedidoUncheckedCreateNestedManyWithoutUserInput
    permissoes?: PermissoesUncheckedCreateNestedManyWithoutUsersInput
  }

  export type UserCreateOrConnectWithoutCaixasInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCaixasInput, UserUncheckedCreateWithoutCaixasInput>
  }

  export type MovimentacaoFinanceiraCreateWithoutCaixaInput = {
    tipoMovimentacao: $Enums.TipoMovimentacao
    valor: Decimal | DecimalJsLike | number | string
    descricao?: string | null
    data?: Date | string
    origem: $Enums.TipoOrigem
    origemID?: number | null
    conta: ContaCreateNestedOneWithoutMovimentacoesInput
  }

  export type MovimentacaoFinanceiraUncheckedCreateWithoutCaixaInput = {
    id?: number
    contaID: number
    tipoMovimentacao: $Enums.TipoMovimentacao
    valor: Decimal | DecimalJsLike | number | string
    descricao?: string | null
    data?: Date | string
    origem: $Enums.TipoOrigem
    origemID?: number | null
  }

  export type MovimentacaoFinanceiraCreateOrConnectWithoutCaixaInput = {
    where: MovimentacaoFinanceiraWhereUniqueInput
    create: XOR<MovimentacaoFinanceiraCreateWithoutCaixaInput, MovimentacaoFinanceiraUncheckedCreateWithoutCaixaInput>
  }

  export type MovimentacaoFinanceiraCreateManyCaixaInputEnvelope = {
    data: MovimentacaoFinanceiraCreateManyCaixaInput | MovimentacaoFinanceiraCreateManyCaixaInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutCaixasInput = {
    update: XOR<UserUpdateWithoutCaixasInput, UserUncheckedUpdateWithoutCaixasInput>
    create: XOR<UserCreateWithoutCaixasInput, UserUncheckedCreateWithoutCaixasInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCaixasInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCaixasInput, UserUncheckedUpdateWithoutCaixasInput>
  }

  export type UserUpdateWithoutCaixasInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pedidos?: PedidoUpdateManyWithoutUserNestedInput
    cargo?: CargoUpdateOneRequiredWithoutUsersNestedInput
    permissoes?: PermissoesUpdateManyWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutCaixasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    cargoID?: IntFieldUpdateOperationsInput | number
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pedidos?: PedidoUncheckedUpdateManyWithoutUserNestedInput
    permissoes?: PermissoesUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type MovimentacaoFinanceiraUpsertWithWhereUniqueWithoutCaixaInput = {
    where: MovimentacaoFinanceiraWhereUniqueInput
    update: XOR<MovimentacaoFinanceiraUpdateWithoutCaixaInput, MovimentacaoFinanceiraUncheckedUpdateWithoutCaixaInput>
    create: XOR<MovimentacaoFinanceiraCreateWithoutCaixaInput, MovimentacaoFinanceiraUncheckedCreateWithoutCaixaInput>
  }

  export type MovimentacaoFinanceiraUpdateWithWhereUniqueWithoutCaixaInput = {
    where: MovimentacaoFinanceiraWhereUniqueInput
    data: XOR<MovimentacaoFinanceiraUpdateWithoutCaixaInput, MovimentacaoFinanceiraUncheckedUpdateWithoutCaixaInput>
  }

  export type MovimentacaoFinanceiraUpdateManyWithWhereWithoutCaixaInput = {
    where: MovimentacaoFinanceiraScalarWhereInput
    data: XOR<MovimentacaoFinanceiraUpdateManyMutationInput, MovimentacaoFinanceiraUncheckedUpdateManyWithoutCaixaInput>
  }

  export type PedidoCreateManyUserInput = {
    id?: number
    regID?: number | null
    tipo: $Enums.TipoPedido
    valor_total?: Decimal | DecimalJsLike | number | string
    status: $Enums.TipoStatusPedido
    criado_em?: Date | string
    atualizado?: Date | string
  }

  export type LivroCaixaCreateManyUsuarioInput = {
    id?: number
    dataAbertura?: Date | string
    dataFechamento?: Date | string | null
    saldoInicial: Decimal | DecimalJsLike | number | string
    saldoFinal?: Decimal | DecimalJsLike | number | string | null
    status?: $Enums.StatusCaixa
  }

  export type PedidoUpdateWithoutUserInput = {
    tipo?: EnumTipoPedidoFieldUpdateOperationsInput | $Enums.TipoPedido
    valor_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumTipoStatusPedidoFieldUpdateOperationsInput | $Enums.TipoStatusPedido
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado?: DateTimeFieldUpdateOperationsInput | Date | string
    items?: ItemPedidoUpdateManyWithoutPedidoNestedInput
    pagamentos?: PagamentoUpdateManyWithoutPedidoNestedInput
    registro?: RegistroUpdateOneWithoutPedidosNestedInput
  }

  export type PedidoUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    regID?: NullableIntFieldUpdateOperationsInput | number | null
    tipo?: EnumTipoPedidoFieldUpdateOperationsInput | $Enums.TipoPedido
    valor_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumTipoStatusPedidoFieldUpdateOperationsInput | $Enums.TipoStatusPedido
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado?: DateTimeFieldUpdateOperationsInput | Date | string
    items?: ItemPedidoUncheckedUpdateManyWithoutPedidoNestedInput
    pagamentos?: PagamentoUncheckedUpdateManyWithoutPedidoNestedInput
  }

  export type PedidoUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    regID?: NullableIntFieldUpdateOperationsInput | number | null
    tipo?: EnumTipoPedidoFieldUpdateOperationsInput | $Enums.TipoPedido
    valor_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumTipoStatusPedidoFieldUpdateOperationsInput | $Enums.TipoStatusPedido
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PermissoesUpdateWithoutUsersInput = {
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PermissoesUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PermissoesUncheckedUpdateManyWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LivroCaixaUpdateWithoutUsuarioInput = {
    dataAbertura?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFechamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saldoInicial?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    saldoFinal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumStatusCaixaFieldUpdateOperationsInput | $Enums.StatusCaixa
    movimentacoes?: MovimentacaoFinanceiraUpdateManyWithoutCaixaNestedInput
  }

  export type LivroCaixaUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    dataAbertura?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFechamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saldoInicial?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    saldoFinal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumStatusCaixaFieldUpdateOperationsInput | $Enums.StatusCaixa
    movimentacoes?: MovimentacaoFinanceiraUncheckedUpdateManyWithoutCaixaNestedInput
  }

  export type LivroCaixaUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    dataAbertura?: DateTimeFieldUpdateOperationsInput | Date | string
    dataFechamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saldoInicial?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    saldoFinal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: EnumStatusCaixaFieldUpdateOperationsInput | $Enums.StatusCaixa
  }

  export type UserUpdateWithoutPermissoesInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pedidos?: PedidoUpdateManyWithoutUserNestedInput
    cargo?: CargoUpdateOneRequiredWithoutUsersNestedInput
    caixas?: LivroCaixaUpdateManyWithoutUsuarioNestedInput
  }

  export type UserUncheckedUpdateWithoutPermissoesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    cargoID?: IntFieldUpdateOperationsInput | number
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pedidos?: PedidoUncheckedUpdateManyWithoutUserNestedInput
    caixas?: LivroCaixaUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type UserUncheckedUpdateManyWithoutPermissoesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    cargoID?: IntFieldUpdateOperationsInput | number
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserCreateManyCargoInput = {
    id?: number
    nome: string
    email: string
    senha: string
    telefone: string
    deletedAt?: Date | string | null
  }

  export type UserUpdateWithoutCargoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pedidos?: PedidoUpdateManyWithoutUserNestedInput
    permissoes?: PermissoesUpdateManyWithoutUsersNestedInput
    caixas?: LivroCaixaUpdateManyWithoutUsuarioNestedInput
  }

  export type UserUncheckedUpdateWithoutCargoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pedidos?: PedidoUncheckedUpdateManyWithoutUserNestedInput
    permissoes?: PermissoesUncheckedUpdateManyWithoutUsersNestedInput
    caixas?: LivroCaixaUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type UserUncheckedUpdateManyWithoutCargoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PedidoCreateManyRegistroInput = {
    id?: number
    tipo: $Enums.TipoPedido
    valor_total?: Decimal | DecimalJsLike | number | string
    status: $Enums.TipoStatusPedido
    userID: number
    criado_em?: Date | string
    atualizado?: Date | string
  }

  export type PedidoUpdateWithoutRegistroInput = {
    tipo?: EnumTipoPedidoFieldUpdateOperationsInput | $Enums.TipoPedido
    valor_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumTipoStatusPedidoFieldUpdateOperationsInput | $Enums.TipoStatusPedido
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado?: DateTimeFieldUpdateOperationsInput | Date | string
    items?: ItemPedidoUpdateManyWithoutPedidoNestedInput
    pagamentos?: PagamentoUpdateManyWithoutPedidoNestedInput
    user?: UserUpdateOneRequiredWithoutPedidosNestedInput
  }

  export type PedidoUncheckedUpdateWithoutRegistroInput = {
    id?: IntFieldUpdateOperationsInput | number
    tipo?: EnumTipoPedidoFieldUpdateOperationsInput | $Enums.TipoPedido
    valor_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumTipoStatusPedidoFieldUpdateOperationsInput | $Enums.TipoStatusPedido
    userID?: IntFieldUpdateOperationsInput | number
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado?: DateTimeFieldUpdateOperationsInput | Date | string
    items?: ItemPedidoUncheckedUpdateManyWithoutPedidoNestedInput
    pagamentos?: PagamentoUncheckedUpdateManyWithoutPedidoNestedInput
  }

  export type PedidoUncheckedUpdateManyWithoutRegistroInput = {
    id?: IntFieldUpdateOperationsInput | number
    tipo?: EnumTipoPedidoFieldUpdateOperationsInput | $Enums.TipoPedido
    valor_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: EnumTipoStatusPedidoFieldUpdateOperationsInput | $Enums.TipoStatusPedido
    userID?: IntFieldUpdateOperationsInput | number
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    atualizado?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PrecoPorTabelaCreateManyTabelaInput = {
    id?: number
    v_compra: Decimal | DecimalJsLike | number | string
    materialID: number
    editadoEm?: Date | string
  }

  export type RegistroCreateManyTabelaInput = {
    id?: number
    nome_razao: string
    apelido?: string | null
    tipo: $Enums.TipoRegistro
    email?: string | null
    telefone?: string | null
    criadoEm?: Date | string
  }

  export type PrecoPorTabelaUpdateWithoutTabelaInput = {
    v_compra?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    editadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    material?: MaterialUpdateOneRequiredWithoutPreco_tabelaNestedInput
  }

  export type PrecoPorTabelaUncheckedUpdateWithoutTabelaInput = {
    id?: IntFieldUpdateOperationsInput | number
    v_compra?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    materialID?: IntFieldUpdateOperationsInput | number
    editadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PrecoPorTabelaUncheckedUpdateManyWithoutTabelaInput = {
    id?: IntFieldUpdateOperationsInput | number
    v_compra?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    materialID?: IntFieldUpdateOperationsInput | number
    editadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RegistroUpdateWithoutTabelaInput = {
    nome_razao?: StringFieldUpdateOperationsInput | string
    apelido?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumTipoRegistroFieldUpdateOperationsInput | $Enums.TipoRegistro
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    dados_pagamento?: DadosPagamentoUpdateOneWithoutRegistroNestedInput
    endereco?: EnderecoUpdateOneWithoutRegistroNestedInput
    pedidos?: PedidoUpdateManyWithoutRegistroNestedInput
    fisica?: PessoaFisicaUpdateOneWithoutRegistroNestedInput
    juridica?: PessoaJuridicaUpdateOneWithoutRegistroNestedInput
    saldo?: SaldoFinanceiroUpdateOneWithoutRegistroNestedInput
  }

  export type RegistroUncheckedUpdateWithoutTabelaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_razao?: StringFieldUpdateOperationsInput | string
    apelido?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumTipoRegistroFieldUpdateOperationsInput | $Enums.TipoRegistro
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    dados_pagamento?: DadosPagamentoUncheckedUpdateOneWithoutRegistroNestedInput
    endereco?: EnderecoUncheckedUpdateOneWithoutRegistroNestedInput
    pedidos?: PedidoUncheckedUpdateManyWithoutRegistroNestedInput
    fisica?: PessoaFisicaUncheckedUpdateOneWithoutRegistroNestedInput
    juridica?: PessoaJuridicaUncheckedUpdateOneWithoutRegistroNestedInput
    saldo?: SaldoFinanceiroUncheckedUpdateOneWithoutRegistroNestedInput
  }

  export type RegistroUncheckedUpdateManyWithoutTabelaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome_razao?: StringFieldUpdateOperationsInput | string
    apelido?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: EnumTipoRegistroFieldUpdateOperationsInput | $Enums.TipoRegistro
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    criadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ItemPedidoCreateManyMaterialInput = {
    id?: number
    pedidoID: number
    preco: Decimal | DecimalJsLike | number | string
    quantidade: Decimal | DecimalJsLike | number | string
    tara: Decimal | DecimalJsLike | number | string
    impureza: Decimal | DecimalJsLike | number | string
  }

  export type MovimentacaoEstoqueCreateManyMaterialInput = {
    id?: number
    tipo: $Enums.TipoMovimentacaoEstoque
    quantidade: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    origemID?: number | null
    origemTipo: $Enums.OrigemMovimentacaoEstoque
    conversaoEstoqueId?: number | null
  }

  export type PrecoPorTabelaCreateManyMaterialInput = {
    id?: number
    v_compra: Decimal | DecimalJsLike | number | string
    tabelaID: number
    editadoEm?: Date | string
  }

  export type ItemPedidoUpdateWithoutMaterialInput = {
    preco?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tara?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impureza?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pedido?: PedidoUpdateOneRequiredWithoutItemsNestedInput
  }

  export type ItemPedidoUncheckedUpdateWithoutMaterialInput = {
    id?: IntFieldUpdateOperationsInput | number
    pedidoID?: IntFieldUpdateOperationsInput | number
    preco?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tara?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impureza?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type ItemPedidoUncheckedUpdateManyWithoutMaterialInput = {
    id?: IntFieldUpdateOperationsInput | number
    pedidoID?: IntFieldUpdateOperationsInput | number
    preco?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tara?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impureza?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type MovimentacaoEstoqueUpdateWithoutMaterialInput = {
    tipo?: EnumTipoMovimentacaoEstoqueFieldUpdateOperationsInput | $Enums.TipoMovimentacaoEstoque
    quantidade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    origemID?: NullableIntFieldUpdateOperationsInput | number | null
    origemTipo?: EnumOrigemMovimentacaoEstoqueFieldUpdateOperationsInput | $Enums.OrigemMovimentacaoEstoque
    conversaoEstoque?: ConversaoEstoqueUpdateOneWithoutMovimentacoesNestedInput
  }

  export type MovimentacaoEstoqueUncheckedUpdateWithoutMaterialInput = {
    id?: IntFieldUpdateOperationsInput | number
    tipo?: EnumTipoMovimentacaoEstoqueFieldUpdateOperationsInput | $Enums.TipoMovimentacaoEstoque
    quantidade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    origemID?: NullableIntFieldUpdateOperationsInput | number | null
    origemTipo?: EnumOrigemMovimentacaoEstoqueFieldUpdateOperationsInput | $Enums.OrigemMovimentacaoEstoque
    conversaoEstoqueId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type MovimentacaoEstoqueUncheckedUpdateManyWithoutMaterialInput = {
    id?: IntFieldUpdateOperationsInput | number
    tipo?: EnumTipoMovimentacaoEstoqueFieldUpdateOperationsInput | $Enums.TipoMovimentacaoEstoque
    quantidade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    origemID?: NullableIntFieldUpdateOperationsInput | number | null
    origemTipo?: EnumOrigemMovimentacaoEstoqueFieldUpdateOperationsInput | $Enums.OrigemMovimentacaoEstoque
    conversaoEstoqueId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PrecoPorTabelaUpdateWithoutMaterialInput = {
    v_compra?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    editadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
    tabela?: TabelaUpdateOneRequiredWithoutMateriaisNestedInput
  }

  export type PrecoPorTabelaUncheckedUpdateWithoutMaterialInput = {
    id?: IntFieldUpdateOperationsInput | number
    v_compra?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tabelaID?: IntFieldUpdateOperationsInput | number
    editadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PrecoPorTabelaUncheckedUpdateManyWithoutMaterialInput = {
    id?: IntFieldUpdateOperationsInput | number
    v_compra?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tabelaID?: IntFieldUpdateOperationsInput | number
    editadoEm?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MaterialCreateManyCategoriaInput = {
    id?: number
    nome: string
    v_venda: Decimal | DecimalJsLike | number | string
    estoque: Decimal | DecimalJsLike | number | string
    criado_em?: Date | string
    editado_em?: Date | string
    status?: boolean
  }

  export type MaterialUpdateWithoutCategoriaInput = {
    nome?: StringFieldUpdateOperationsInput | string
    v_venda?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estoque?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    editado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: BoolFieldUpdateOperationsInput | boolean
    items?: ItemPedidoUpdateManyWithoutMaterialNestedInput
    movimentacoes?: MovimentacaoEstoqueUpdateManyWithoutMaterialNestedInput
    preco_tabela?: PrecoPorTabelaUpdateManyWithoutMaterialNestedInput
  }

  export type MaterialUncheckedUpdateWithoutCategoriaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    v_venda?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estoque?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    editado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: BoolFieldUpdateOperationsInput | boolean
    items?: ItemPedidoUncheckedUpdateManyWithoutMaterialNestedInput
    movimentacoes?: MovimentacaoEstoqueUncheckedUpdateManyWithoutMaterialNestedInput
    preco_tabela?: PrecoPorTabelaUncheckedUpdateManyWithoutMaterialNestedInput
  }

  export type MaterialUncheckedUpdateManyWithoutCategoriaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    v_venda?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estoque?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    criado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    editado_em?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ItemPedidoCreateManyPedidoInput = {
    id?: number
    materialID: number
    preco: Decimal | DecimalJsLike | number | string
    quantidade: Decimal | DecimalJsLike | number | string
    tara: Decimal | DecimalJsLike | number | string
    impureza: Decimal | DecimalJsLike | number | string
  }

  export type PagamentoCreateManyPedidoInput = {
    id?: number
    valor: Decimal | DecimalJsLike | number | string
    forma: $Enums.FormaPagamento
    data?: Date | string
  }

  export type ItemPedidoUpdateWithoutPedidoInput = {
    preco?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tara?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impureza?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    material?: MaterialUpdateOneRequiredWithoutItemsNestedInput
  }

  export type ItemPedidoUncheckedUpdateWithoutPedidoInput = {
    id?: IntFieldUpdateOperationsInput | number
    materialID?: IntFieldUpdateOperationsInput | number
    preco?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tara?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impureza?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type ItemPedidoUncheckedUpdateManyWithoutPedidoInput = {
    id?: IntFieldUpdateOperationsInput | number
    materialID?: IntFieldUpdateOperationsInput | number
    preco?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quantidade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tara?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    impureza?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type PagamentoUpdateWithoutPedidoInput = {
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    forma?: EnumFormaPagamentoFieldUpdateOperationsInput | $Enums.FormaPagamento
    data?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PagamentoUncheckedUpdateWithoutPedidoInput = {
    id?: IntFieldUpdateOperationsInput | number
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    forma?: EnumFormaPagamentoFieldUpdateOperationsInput | $Enums.FormaPagamento
    data?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PagamentoUncheckedUpdateManyWithoutPedidoInput = {
    id?: IntFieldUpdateOperationsInput | number
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    forma?: EnumFormaPagamentoFieldUpdateOperationsInput | $Enums.FormaPagamento
    data?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MovimentacaoFinanceiraCreateManyContaInput = {
    id?: number
    tipoMovimentacao: $Enums.TipoMovimentacao
    valor: Decimal | DecimalJsLike | number | string
    descricao?: string | null
    data?: Date | string
    origem: $Enums.TipoOrigem
    origemID?: number | null
    caixaID: number
  }

  export type MovimentacaoFinanceiraUpdateWithoutContaInput = {
    tipoMovimentacao?: EnumTipoMovimentacaoFieldUpdateOperationsInput | $Enums.TipoMovimentacao
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    origem?: EnumTipoOrigemFieldUpdateOperationsInput | $Enums.TipoOrigem
    origemID?: NullableIntFieldUpdateOperationsInput | number | null
    caixa?: LivroCaixaUpdateOneRequiredWithoutMovimentacoesNestedInput
  }

  export type MovimentacaoFinanceiraUncheckedUpdateWithoutContaInput = {
    id?: IntFieldUpdateOperationsInput | number
    tipoMovimentacao?: EnumTipoMovimentacaoFieldUpdateOperationsInput | $Enums.TipoMovimentacao
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    origem?: EnumTipoOrigemFieldUpdateOperationsInput | $Enums.TipoOrigem
    origemID?: NullableIntFieldUpdateOperationsInput | number | null
    caixaID?: IntFieldUpdateOperationsInput | number
  }

  export type MovimentacaoFinanceiraUncheckedUpdateManyWithoutContaInput = {
    id?: IntFieldUpdateOperationsInput | number
    tipoMovimentacao?: EnumTipoMovimentacaoFieldUpdateOperationsInput | $Enums.TipoMovimentacao
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    origem?: EnumTipoOrigemFieldUpdateOperationsInput | $Enums.TipoOrigem
    origemID?: NullableIntFieldUpdateOperationsInput | number | null
    caixaID?: IntFieldUpdateOperationsInput | number
  }

  export type MovimentacaoEstoqueCreateManyConversaoEstoqueInput = {
    id?: number
    materialID: number
    tipo: $Enums.TipoMovimentacaoEstoque
    quantidade: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    origemID?: number | null
    origemTipo: $Enums.OrigemMovimentacaoEstoque
  }

  export type MovimentacaoEstoqueUpdateWithoutConversaoEstoqueInput = {
    tipo?: EnumTipoMovimentacaoEstoqueFieldUpdateOperationsInput | $Enums.TipoMovimentacaoEstoque
    quantidade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    origemID?: NullableIntFieldUpdateOperationsInput | number | null
    origemTipo?: EnumOrigemMovimentacaoEstoqueFieldUpdateOperationsInput | $Enums.OrigemMovimentacaoEstoque
    material?: MaterialUpdateOneRequiredWithoutMovimentacoesNestedInput
  }

  export type MovimentacaoEstoqueUncheckedUpdateWithoutConversaoEstoqueInput = {
    id?: IntFieldUpdateOperationsInput | number
    materialID?: IntFieldUpdateOperationsInput | number
    tipo?: EnumTipoMovimentacaoEstoqueFieldUpdateOperationsInput | $Enums.TipoMovimentacaoEstoque
    quantidade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    origemID?: NullableIntFieldUpdateOperationsInput | number | null
    origemTipo?: EnumOrigemMovimentacaoEstoqueFieldUpdateOperationsInput | $Enums.OrigemMovimentacaoEstoque
  }

  export type MovimentacaoEstoqueUncheckedUpdateManyWithoutConversaoEstoqueInput = {
    id?: IntFieldUpdateOperationsInput | number
    materialID?: IntFieldUpdateOperationsInput | number
    tipo?: EnumTipoMovimentacaoEstoqueFieldUpdateOperationsInput | $Enums.TipoMovimentacaoEstoque
    quantidade?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    origemID?: NullableIntFieldUpdateOperationsInput | number | null
    origemTipo?: EnumOrigemMovimentacaoEstoqueFieldUpdateOperationsInput | $Enums.OrigemMovimentacaoEstoque
  }

  export type MovimentacaoFinanceiraCreateManyCaixaInput = {
    id?: number
    contaID: number
    tipoMovimentacao: $Enums.TipoMovimentacao
    valor: Decimal | DecimalJsLike | number | string
    descricao?: string | null
    data?: Date | string
    origem: $Enums.TipoOrigem
    origemID?: number | null
  }

  export type MovimentacaoFinanceiraUpdateWithoutCaixaInput = {
    tipoMovimentacao?: EnumTipoMovimentacaoFieldUpdateOperationsInput | $Enums.TipoMovimentacao
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    origem?: EnumTipoOrigemFieldUpdateOperationsInput | $Enums.TipoOrigem
    origemID?: NullableIntFieldUpdateOperationsInput | number | null
    conta?: ContaUpdateOneRequiredWithoutMovimentacoesNestedInput
  }

  export type MovimentacaoFinanceiraUncheckedUpdateWithoutCaixaInput = {
    id?: IntFieldUpdateOperationsInput | number
    contaID?: IntFieldUpdateOperationsInput | number
    tipoMovimentacao?: EnumTipoMovimentacaoFieldUpdateOperationsInput | $Enums.TipoMovimentacao
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    origem?: EnumTipoOrigemFieldUpdateOperationsInput | $Enums.TipoOrigem
    origemID?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type MovimentacaoFinanceiraUncheckedUpdateManyWithoutCaixaInput = {
    id?: IntFieldUpdateOperationsInput | number
    contaID?: IntFieldUpdateOperationsInput | number
    tipoMovimentacao?: EnumTipoMovimentacaoFieldUpdateOperationsInput | $Enums.TipoMovimentacao
    valor?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    origem?: EnumTipoOrigemFieldUpdateOperationsInput | $Enums.TipoOrigem
    origemID?: NullableIntFieldUpdateOperationsInput | number | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}